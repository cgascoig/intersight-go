// Code generated by go-swagger; DO NOT EDIT.

package appliance_diag_setting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new appliance diag setting API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for appliance diag setting API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetApplianceDiagSettings gets a list of appliance diag setting instances
*/
func (a *Client) GetApplianceDiagSettings(params *GetApplianceDiagSettingsParams) (*GetApplianceDiagSettingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceDiagSettingsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceDiagSettings",
		Method:             "GET",
		PathPattern:        "/appliance/DiagSettings",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceDiagSettingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceDiagSettingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceDiagSettingsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetApplianceDiagSettingsMoid gets a specific instance of appliance diag setting
*/
func (a *Client) GetApplianceDiagSettingsMoid(params *GetApplianceDiagSettingsMoidParams) (*GetApplianceDiagSettingsMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceDiagSettingsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceDiagSettingsMoid",
		Method:             "GET",
		PathPattern:        "/appliance/DiagSettings/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceDiagSettingsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceDiagSettingsMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceDiagSettingsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchApplianceDiagSettingsMoid updates an instance of appliance diag setting
*/
func (a *Client) PatchApplianceDiagSettingsMoid(params *PatchApplianceDiagSettingsMoidParams) (*PatchApplianceDiagSettingsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApplianceDiagSettingsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchApplianceDiagSettingsMoid",
		Method:             "PATCH",
		PathPattern:        "/appliance/DiagSettings/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchApplianceDiagSettingsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApplianceDiagSettingsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchApplianceDiagSettingsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostApplianceDiagSettings creates an instance of appliance diag setting
*/
func (a *Client) PostApplianceDiagSettings(params *PostApplianceDiagSettingsParams) (*PostApplianceDiagSettingsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApplianceDiagSettingsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApplianceDiagSettings",
		Method:             "POST",
		PathPattern:        "/appliance/DiagSettings",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostApplianceDiagSettingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApplianceDiagSettingsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostApplianceDiagSettingsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostApplianceDiagSettingsMoid updates an instance of appliance diag setting
*/
func (a *Client) PostApplianceDiagSettingsMoid(params *PostApplianceDiagSettingsMoidParams) (*PostApplianceDiagSettingsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApplianceDiagSettingsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApplianceDiagSettingsMoid",
		Method:             "POST",
		PathPattern:        "/appliance/DiagSettings/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostApplianceDiagSettingsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApplianceDiagSettingsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostApplianceDiagSettingsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
