// Code generated by go-swagger; DO NOT EDIT.

package appliance_diag_setting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetApplianceDiagSettingsMoidReader is a Reader for the GetApplianceDiagSettingsMoid structure.
type GetApplianceDiagSettingsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplianceDiagSettingsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplianceDiagSettingsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetApplianceDiagSettingsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetApplianceDiagSettingsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetApplianceDiagSettingsMoidOK creates a GetApplianceDiagSettingsMoidOK with default headers values
func NewGetApplianceDiagSettingsMoidOK() *GetApplianceDiagSettingsMoidOK {
	return &GetApplianceDiagSettingsMoidOK{}
}

/*GetApplianceDiagSettingsMoidOK handles this case with default header values.

An instance of applianceDiagSetting
*/
type GetApplianceDiagSettingsMoidOK struct {
	Payload *models.ApplianceDiagSetting
}

func (o *GetApplianceDiagSettingsMoidOK) Error() string {
	return fmt.Sprintf("[GET /appliance/DiagSettings/{moid}][%d] getApplianceDiagSettingsMoidOK  %+v", 200, o.Payload)
}

func (o *GetApplianceDiagSettingsMoidOK) GetPayload() *models.ApplianceDiagSetting {
	return o.Payload
}

func (o *GetApplianceDiagSettingsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplianceDiagSetting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplianceDiagSettingsMoidNotFound creates a GetApplianceDiagSettingsMoidNotFound with default headers values
func NewGetApplianceDiagSettingsMoidNotFound() *GetApplianceDiagSettingsMoidNotFound {
	return &GetApplianceDiagSettingsMoidNotFound{}
}

/*GetApplianceDiagSettingsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetApplianceDiagSettingsMoidNotFound struct {
}

func (o *GetApplianceDiagSettingsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /appliance/DiagSettings/{moid}][%d] getApplianceDiagSettingsMoidNotFound ", 404)
}

func (o *GetApplianceDiagSettingsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplianceDiagSettingsMoidDefault creates a GetApplianceDiagSettingsMoidDefault with default headers values
func NewGetApplianceDiagSettingsMoidDefault(code int) *GetApplianceDiagSettingsMoidDefault {
	return &GetApplianceDiagSettingsMoidDefault{
		_statusCode: code,
	}
}

/*GetApplianceDiagSettingsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetApplianceDiagSettingsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get appliance diag settings moid default response
func (o *GetApplianceDiagSettingsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetApplianceDiagSettingsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /appliance/DiagSettings/{moid}][%d] GetApplianceDiagSettingsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetApplianceDiagSettingsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplianceDiagSettingsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
