// Code generated by go-swagger; DO NOT EDIT.

package appliance_node_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetApplianceNodeInfosReader is a Reader for the GetApplianceNodeInfos structure.
type GetApplianceNodeInfosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplianceNodeInfosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplianceNodeInfosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetApplianceNodeInfosDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetApplianceNodeInfosOK creates a GetApplianceNodeInfosOK with default headers values
func NewGetApplianceNodeInfosOK() *GetApplianceNodeInfosOK {
	return &GetApplianceNodeInfosOK{}
}

/*GetApplianceNodeInfosOK handles this case with default header values.

List of applianceNodeInfos for the given filter criteria
*/
type GetApplianceNodeInfosOK struct {
	Payload *models.ApplianceNodeInfoList
}

func (o *GetApplianceNodeInfosOK) Error() string {
	return fmt.Sprintf("[GET /appliance/NodeInfos][%d] getApplianceNodeInfosOK  %+v", 200, o.Payload)
}

func (o *GetApplianceNodeInfosOK) GetPayload() *models.ApplianceNodeInfoList {
	return o.Payload
}

func (o *GetApplianceNodeInfosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplianceNodeInfoList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplianceNodeInfosDefault creates a GetApplianceNodeInfosDefault with default headers values
func NewGetApplianceNodeInfosDefault(code int) *GetApplianceNodeInfosDefault {
	return &GetApplianceNodeInfosDefault{
		_statusCode: code,
	}
}

/*GetApplianceNodeInfosDefault handles this case with default header values.

Unexpected error
*/
type GetApplianceNodeInfosDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get appliance node infos default response
func (o *GetApplianceNodeInfosDefault) Code() int {
	return o._statusCode
}

func (o *GetApplianceNodeInfosDefault) Error() string {
	return fmt.Sprintf("[GET /appliance/NodeInfos][%d] GetApplianceNodeInfos default  %+v", o._statusCode, o.Payload)
}

func (o *GetApplianceNodeInfosDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplianceNodeInfosDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
