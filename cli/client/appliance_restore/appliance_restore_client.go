// Code generated by go-swagger; DO NOT EDIT.

package appliance_restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new appliance restore API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for appliance restore API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteApplianceRestoresMoid deletes an instance of appliance restore
*/
func (a *Client) DeleteApplianceRestoresMoid(params *DeleteApplianceRestoresMoidParams) (*DeleteApplianceRestoresMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteApplianceRestoresMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteApplianceRestoresMoid",
		Method:             "DELETE",
		PathPattern:        "/appliance/Restores/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteApplianceRestoresMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApplianceRestoresMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteApplianceRestoresMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetApplianceRestores gets a list of appliance restore instances
*/
func (a *Client) GetApplianceRestores(params *GetApplianceRestoresParams) (*GetApplianceRestoresOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceRestoresParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceRestores",
		Method:             "GET",
		PathPattern:        "/appliance/Restores",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceRestoresReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceRestoresOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceRestoresDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetApplianceRestoresMoid gets a specific instance of appliance restore
*/
func (a *Client) GetApplianceRestoresMoid(params *GetApplianceRestoresMoidParams) (*GetApplianceRestoresMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceRestoresMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceRestoresMoid",
		Method:             "GET",
		PathPattern:        "/appliance/Restores/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceRestoresMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceRestoresMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceRestoresMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostApplianceRestores creates an instance of appliance restore
*/
func (a *Client) PostApplianceRestores(params *PostApplianceRestoresParams) (*PostApplianceRestoresCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApplianceRestoresParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApplianceRestores",
		Method:             "POST",
		PathPattern:        "/appliance/Restores",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostApplianceRestoresReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApplianceRestoresCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostApplianceRestoresDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
