// Code generated by go-swagger; DO NOT EDIT.

package appliance_system_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetApplianceSystemInfosMoidReader is a Reader for the GetApplianceSystemInfosMoid structure.
type GetApplianceSystemInfosMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplianceSystemInfosMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplianceSystemInfosMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetApplianceSystemInfosMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetApplianceSystemInfosMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetApplianceSystemInfosMoidOK creates a GetApplianceSystemInfosMoidOK with default headers values
func NewGetApplianceSystemInfosMoidOK() *GetApplianceSystemInfosMoidOK {
	return &GetApplianceSystemInfosMoidOK{}
}

/*GetApplianceSystemInfosMoidOK handles this case with default header values.

An instance of applianceSystemInfo
*/
type GetApplianceSystemInfosMoidOK struct {
	Payload *models.ApplianceSystemInfo
}

func (o *GetApplianceSystemInfosMoidOK) Error() string {
	return fmt.Sprintf("[GET /appliance/SystemInfos/{moid}][%d] getApplianceSystemInfosMoidOK  %+v", 200, o.Payload)
}

func (o *GetApplianceSystemInfosMoidOK) GetPayload() *models.ApplianceSystemInfo {
	return o.Payload
}

func (o *GetApplianceSystemInfosMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplianceSystemInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplianceSystemInfosMoidNotFound creates a GetApplianceSystemInfosMoidNotFound with default headers values
func NewGetApplianceSystemInfosMoidNotFound() *GetApplianceSystemInfosMoidNotFound {
	return &GetApplianceSystemInfosMoidNotFound{}
}

/*GetApplianceSystemInfosMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetApplianceSystemInfosMoidNotFound struct {
}

func (o *GetApplianceSystemInfosMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /appliance/SystemInfos/{moid}][%d] getApplianceSystemInfosMoidNotFound ", 404)
}

func (o *GetApplianceSystemInfosMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplianceSystemInfosMoidDefault creates a GetApplianceSystemInfosMoidDefault with default headers values
func NewGetApplianceSystemInfosMoidDefault(code int) *GetApplianceSystemInfosMoidDefault {
	return &GetApplianceSystemInfosMoidDefault{
		_statusCode: code,
	}
}

/*GetApplianceSystemInfosMoidDefault handles this case with default header values.

Unexpected error
*/
type GetApplianceSystemInfosMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get appliance system infos moid default response
func (o *GetApplianceSystemInfosMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetApplianceSystemInfosMoidDefault) Error() string {
	return fmt.Sprintf("[GET /appliance/SystemInfos/{moid}][%d] GetApplianceSystemInfosMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetApplianceSystemInfosMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetApplianceSystemInfosMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
