// Code generated by go-swagger; DO NOT EDIT.

package appliance_upgrade

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new appliance upgrade API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for appliance upgrade API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetApplianceUpgrades gets a list of appliance upgrade instances
*/
func (a *Client) GetApplianceUpgrades(params *GetApplianceUpgradesParams) (*GetApplianceUpgradesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceUpgradesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceUpgrades",
		Method:             "GET",
		PathPattern:        "/appliance/Upgrades",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceUpgradesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceUpgradesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceUpgradesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetApplianceUpgradesMoid gets a specific instance of appliance upgrade
*/
func (a *Client) GetApplianceUpgradesMoid(params *GetApplianceUpgradesMoidParams) (*GetApplianceUpgradesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetApplianceUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetApplianceUpgradesMoid",
		Method:             "GET",
		PathPattern:        "/appliance/Upgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetApplianceUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApplianceUpgradesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetApplianceUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchApplianceUpgradesMoid updates an instance of appliance upgrade
*/
func (a *Client) PatchApplianceUpgradesMoid(params *PatchApplianceUpgradesMoidParams) (*PatchApplianceUpgradesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchApplianceUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchApplianceUpgradesMoid",
		Method:             "PATCH",
		PathPattern:        "/appliance/Upgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchApplianceUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApplianceUpgradesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchApplianceUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostApplianceUpgradesMoid updates an instance of appliance upgrade
*/
func (a *Client) PostApplianceUpgradesMoid(params *PostApplianceUpgradesMoidParams) (*PostApplianceUpgradesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostApplianceUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostApplianceUpgradesMoid",
		Method:             "POST",
		PathPattern:        "/appliance/Upgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostApplianceUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApplianceUpgradesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostApplianceUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
