// Code generated by go-swagger; DO NOT EDIT.

package asset_device_connector_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new asset device connector manager API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for asset device connector manager API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetAssetDeviceConnectorManagers gets a list of asset device connector manager instances
*/
func (a *Client) GetAssetDeviceConnectorManagers(params *GetAssetDeviceConnectorManagersParams) (*GetAssetDeviceConnectorManagersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetDeviceConnectorManagersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAssetDeviceConnectorManagers",
		Method:             "GET",
		PathPattern:        "/asset/DeviceConnectorManagers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAssetDeviceConnectorManagersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetDeviceConnectorManagersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetAssetDeviceConnectorManagersDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetAssetDeviceConnectorManagersMoid gets a specific instance of asset device connector manager
*/
func (a *Client) GetAssetDeviceConnectorManagersMoid(params *GetAssetDeviceConnectorManagersMoidParams) (*GetAssetDeviceConnectorManagersMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAssetDeviceConnectorManagersMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAssetDeviceConnectorManagersMoid",
		Method:             "GET",
		PathPattern:        "/asset/DeviceConnectorManagers/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAssetDeviceConnectorManagersMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAssetDeviceConnectorManagersMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetAssetDeviceConnectorManagersMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
