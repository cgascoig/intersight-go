// Code generated by go-swagger; DO NOT EDIT.

package asset_device_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteAssetDeviceRegistrationsMoidReader is a Reader for the DeleteAssetDeviceRegistrationsMoid structure.
type DeleteAssetDeviceRegistrationsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssetDeviceRegistrationsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAssetDeviceRegistrationsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteAssetDeviceRegistrationsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteAssetDeviceRegistrationsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteAssetDeviceRegistrationsMoidOK creates a DeleteAssetDeviceRegistrationsMoidOK with default headers values
func NewDeleteAssetDeviceRegistrationsMoidOK() *DeleteAssetDeviceRegistrationsMoidOK {
	return &DeleteAssetDeviceRegistrationsMoidOK{}
}

/*DeleteAssetDeviceRegistrationsMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteAssetDeviceRegistrationsMoidOK struct {
}

func (o *DeleteAssetDeviceRegistrationsMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /asset/DeviceRegistrations/{moid}][%d] deleteAssetDeviceRegistrationsMoidOK ", 200)
}

func (o *DeleteAssetDeviceRegistrationsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssetDeviceRegistrationsMoidNotFound creates a DeleteAssetDeviceRegistrationsMoidNotFound with default headers values
func NewDeleteAssetDeviceRegistrationsMoidNotFound() *DeleteAssetDeviceRegistrationsMoidNotFound {
	return &DeleteAssetDeviceRegistrationsMoidNotFound{}
}

/*DeleteAssetDeviceRegistrationsMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteAssetDeviceRegistrationsMoidNotFound struct {
}

func (o *DeleteAssetDeviceRegistrationsMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /asset/DeviceRegistrations/{moid}][%d] deleteAssetDeviceRegistrationsMoidNotFound ", 404)
}

func (o *DeleteAssetDeviceRegistrationsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssetDeviceRegistrationsMoidDefault creates a DeleteAssetDeviceRegistrationsMoidDefault with default headers values
func NewDeleteAssetDeviceRegistrationsMoidDefault(code int) *DeleteAssetDeviceRegistrationsMoidDefault {
	return &DeleteAssetDeviceRegistrationsMoidDefault{
		_statusCode: code,
	}
}

/*DeleteAssetDeviceRegistrationsMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteAssetDeviceRegistrationsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete asset device registrations moid default response
func (o *DeleteAssetDeviceRegistrationsMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteAssetDeviceRegistrationsMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /asset/DeviceRegistrations/{moid}][%d] DeleteAssetDeviceRegistrationsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteAssetDeviceRegistrationsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAssetDeviceRegistrationsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
