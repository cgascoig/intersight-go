// Code generated by go-swagger; DO NOT EDIT.

package bios_unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new bios unit API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for bios unit API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetBiosUnits gets a list of bios unit instances
*/
func (a *Client) GetBiosUnits(params *GetBiosUnitsParams) (*GetBiosUnitsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetBiosUnitsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetBiosUnits",
		Method:             "GET",
		PathPattern:        "/bios/Units",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetBiosUnitsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetBiosUnitsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetBiosUnitsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetBiosUnitsMoid gets a specific instance of bios unit
*/
func (a *Client) GetBiosUnitsMoid(params *GetBiosUnitsMoidParams) (*GetBiosUnitsMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetBiosUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetBiosUnitsMoid",
		Method:             "GET",
		PathPattern:        "/bios/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetBiosUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetBiosUnitsMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetBiosUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchBiosUnitsMoid updates an instance of bios unit
*/
func (a *Client) PatchBiosUnitsMoid(params *PatchBiosUnitsMoidParams) (*PatchBiosUnitsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchBiosUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchBiosUnitsMoid",
		Method:             "PATCH",
		PathPattern:        "/bios/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchBiosUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchBiosUnitsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchBiosUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostBiosUnitsMoid updates an instance of bios unit
*/
func (a *Client) PostBiosUnitsMoid(params *PostBiosUnitsMoidParams) (*PostBiosUnitsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostBiosUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostBiosUnitsMoid",
		Method:             "POST",
		PathPattern:        "/bios/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostBiosUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostBiosUnitsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostBiosUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
