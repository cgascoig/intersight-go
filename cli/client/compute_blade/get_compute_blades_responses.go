// Code generated by go-swagger; DO NOT EDIT.

package compute_blade

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetComputeBladesReader is a Reader for the GetComputeBlades structure.
type GetComputeBladesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComputeBladesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComputeBladesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetComputeBladesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetComputeBladesOK creates a GetComputeBladesOK with default headers values
func NewGetComputeBladesOK() *GetComputeBladesOK {
	return &GetComputeBladesOK{}
}

/*GetComputeBladesOK handles this case with default header values.

List of computeBlades for the given filter criteria
*/
type GetComputeBladesOK struct {
	Payload *models.ComputeBladeList
}

func (o *GetComputeBladesOK) Error() string {
	return fmt.Sprintf("[GET /compute/Blades][%d] getComputeBladesOK  %+v", 200, o.Payload)
}

func (o *GetComputeBladesOK) GetPayload() *models.ComputeBladeList {
	return o.Payload
}

func (o *GetComputeBladesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComputeBladeList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComputeBladesDefault creates a GetComputeBladesDefault with default headers values
func NewGetComputeBladesDefault(code int) *GetComputeBladesDefault {
	return &GetComputeBladesDefault{
		_statusCode: code,
	}
}

/*GetComputeBladesDefault handles this case with default header values.

Unexpected error
*/
type GetComputeBladesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get compute blades default response
func (o *GetComputeBladesDefault) Code() int {
	return o._statusCode
}

func (o *GetComputeBladesDefault) Error() string {
	return fmt.Sprintf("[GET /compute/Blades][%d] GetComputeBlades default  %+v", o._statusCode, o.Payload)
}

func (o *GetComputeBladesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetComputeBladesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
