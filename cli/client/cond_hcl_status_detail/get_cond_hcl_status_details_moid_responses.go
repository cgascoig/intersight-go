// Code generated by go-swagger; DO NOT EDIT.

package cond_hcl_status_detail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetCondHclStatusDetailsMoidReader is a Reader for the GetCondHclStatusDetailsMoid structure.
type GetCondHclStatusDetailsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCondHclStatusDetailsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCondHclStatusDetailsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCondHclStatusDetailsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetCondHclStatusDetailsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCondHclStatusDetailsMoidOK creates a GetCondHclStatusDetailsMoidOK with default headers values
func NewGetCondHclStatusDetailsMoidOK() *GetCondHclStatusDetailsMoidOK {
	return &GetCondHclStatusDetailsMoidOK{}
}

/*GetCondHclStatusDetailsMoidOK handles this case with default header values.

An instance of condHclStatusDetail
*/
type GetCondHclStatusDetailsMoidOK struct {
	Payload *models.CondHclStatusDetail
}

func (o *GetCondHclStatusDetailsMoidOK) Error() string {
	return fmt.Sprintf("[GET /cond/HclStatusDetails/{moid}][%d] getCondHclStatusDetailsMoidOK  %+v", 200, o.Payload)
}

func (o *GetCondHclStatusDetailsMoidOK) GetPayload() *models.CondHclStatusDetail {
	return o.Payload
}

func (o *GetCondHclStatusDetailsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CondHclStatusDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCondHclStatusDetailsMoidNotFound creates a GetCondHclStatusDetailsMoidNotFound with default headers values
func NewGetCondHclStatusDetailsMoidNotFound() *GetCondHclStatusDetailsMoidNotFound {
	return &GetCondHclStatusDetailsMoidNotFound{}
}

/*GetCondHclStatusDetailsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetCondHclStatusDetailsMoidNotFound struct {
}

func (o *GetCondHclStatusDetailsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /cond/HclStatusDetails/{moid}][%d] getCondHclStatusDetailsMoidNotFound ", 404)
}

func (o *GetCondHclStatusDetailsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCondHclStatusDetailsMoidDefault creates a GetCondHclStatusDetailsMoidDefault with default headers values
func NewGetCondHclStatusDetailsMoidDefault(code int) *GetCondHclStatusDetailsMoidDefault {
	return &GetCondHclStatusDetailsMoidDefault{
		_statusCode: code,
	}
}

/*GetCondHclStatusDetailsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetCondHclStatusDetailsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get cond hcl status details moid default response
func (o *GetCondHclStatusDetailsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetCondHclStatusDetailsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /cond/HclStatusDetails/{moid}][%d] GetCondHclStatusDetailsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetCondHclStatusDetailsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCondHclStatusDetailsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
