// Code generated by go-swagger; DO NOT EDIT.

package cvd_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new cvd template API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cvd template API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteCvdTemplatesMoid deletes an instance of cvd template
*/
func (a *Client) DeleteCvdTemplatesMoid(params *DeleteCvdTemplatesMoidParams) (*DeleteCvdTemplatesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCvdTemplatesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteCvdTemplatesMoid",
		Method:             "DELETE",
		PathPattern:        "/cvd/Templates/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCvdTemplatesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCvdTemplatesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteCvdTemplatesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetCvdTemplates gets a list of cvd template instances
*/
func (a *Client) GetCvdTemplates(params *GetCvdTemplatesParams) (*GetCvdTemplatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCvdTemplatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetCvdTemplates",
		Method:             "GET",
		PathPattern:        "/cvd/Templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCvdTemplatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCvdTemplatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetCvdTemplatesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetCvdTemplatesMoid gets a specific instance of cvd template
*/
func (a *Client) GetCvdTemplatesMoid(params *GetCvdTemplatesMoidParams) (*GetCvdTemplatesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCvdTemplatesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetCvdTemplatesMoid",
		Method:             "GET",
		PathPattern:        "/cvd/Templates/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCvdTemplatesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCvdTemplatesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetCvdTemplatesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchCvdTemplatesMoid updates an instance of cvd template
*/
func (a *Client) PatchCvdTemplatesMoid(params *PatchCvdTemplatesMoidParams) (*PatchCvdTemplatesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchCvdTemplatesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchCvdTemplatesMoid",
		Method:             "PATCH",
		PathPattern:        "/cvd/Templates/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchCvdTemplatesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchCvdTemplatesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchCvdTemplatesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostCvdTemplates creates an instance of cvd template
*/
func (a *Client) PostCvdTemplates(params *PostCvdTemplatesParams) (*PostCvdTemplatesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostCvdTemplatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostCvdTemplates",
		Method:             "POST",
		PathPattern:        "/cvd/Templates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostCvdTemplatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostCvdTemplatesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostCvdTemplatesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostCvdTemplatesMoid updates an instance of cvd template
*/
func (a *Client) PostCvdTemplatesMoid(params *PostCvdTemplatesMoidParams) (*PostCvdTemplatesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostCvdTemplatesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostCvdTemplatesMoid",
		Method:             "POST",
		PathPattern:        "/cvd/Templates/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostCvdTemplatesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostCvdTemplatesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostCvdTemplatesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
