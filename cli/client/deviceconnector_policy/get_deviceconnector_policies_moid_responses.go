// Code generated by go-swagger; DO NOT EDIT.

package deviceconnector_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetDeviceconnectorPoliciesMoidReader is a Reader for the GetDeviceconnectorPoliciesMoid structure.
type GetDeviceconnectorPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceconnectorPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeviceconnectorPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDeviceconnectorPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetDeviceconnectorPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDeviceconnectorPoliciesMoidOK creates a GetDeviceconnectorPoliciesMoidOK with default headers values
func NewGetDeviceconnectorPoliciesMoidOK() *GetDeviceconnectorPoliciesMoidOK {
	return &GetDeviceconnectorPoliciesMoidOK{}
}

/*GetDeviceconnectorPoliciesMoidOK handles this case with default header values.

An instance of deviceconnectorPolicy
*/
type GetDeviceconnectorPoliciesMoidOK struct {
	Payload *models.DeviceconnectorPolicy
}

func (o *GetDeviceconnectorPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /deviceconnector/Policies/{moid}][%d] getDeviceconnectorPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetDeviceconnectorPoliciesMoidOK) GetPayload() *models.DeviceconnectorPolicy {
	return o.Payload
}

func (o *GetDeviceconnectorPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceconnectorPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceconnectorPoliciesMoidNotFound creates a GetDeviceconnectorPoliciesMoidNotFound with default headers values
func NewGetDeviceconnectorPoliciesMoidNotFound() *GetDeviceconnectorPoliciesMoidNotFound {
	return &GetDeviceconnectorPoliciesMoidNotFound{}
}

/*GetDeviceconnectorPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetDeviceconnectorPoliciesMoidNotFound struct {
}

func (o *GetDeviceconnectorPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /deviceconnector/Policies/{moid}][%d] getDeviceconnectorPoliciesMoidNotFound ", 404)
}

func (o *GetDeviceconnectorPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeviceconnectorPoliciesMoidDefault creates a GetDeviceconnectorPoliciesMoidDefault with default headers values
func NewGetDeviceconnectorPoliciesMoidDefault(code int) *GetDeviceconnectorPoliciesMoidDefault {
	return &GetDeviceconnectorPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetDeviceconnectorPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetDeviceconnectorPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get deviceconnector policies moid default response
func (o *GetDeviceconnectorPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetDeviceconnectorPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /deviceconnector/Policies/{moid}][%d] GetDeviceconnectorPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetDeviceconnectorPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDeviceconnectorPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
