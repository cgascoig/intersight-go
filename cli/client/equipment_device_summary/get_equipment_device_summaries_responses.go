// Code generated by go-swagger; DO NOT EDIT.

package equipment_device_summary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetEquipmentDeviceSummariesReader is a Reader for the GetEquipmentDeviceSummaries structure.
type GetEquipmentDeviceSummariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEquipmentDeviceSummariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEquipmentDeviceSummariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEquipmentDeviceSummariesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEquipmentDeviceSummariesOK creates a GetEquipmentDeviceSummariesOK with default headers values
func NewGetEquipmentDeviceSummariesOK() *GetEquipmentDeviceSummariesOK {
	return &GetEquipmentDeviceSummariesOK{}
}

/*GetEquipmentDeviceSummariesOK handles this case with default header values.

List of equipmentDeviceSummaries for the given filter criteria
*/
type GetEquipmentDeviceSummariesOK struct {
	Payload *models.EquipmentDeviceSummaryList
}

func (o *GetEquipmentDeviceSummariesOK) Error() string {
	return fmt.Sprintf("[GET /equipment/DeviceSummaries][%d] getEquipmentDeviceSummariesOK  %+v", 200, o.Payload)
}

func (o *GetEquipmentDeviceSummariesOK) GetPayload() *models.EquipmentDeviceSummaryList {
	return o.Payload
}

func (o *GetEquipmentDeviceSummariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EquipmentDeviceSummaryList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEquipmentDeviceSummariesDefault creates a GetEquipmentDeviceSummariesDefault with default headers values
func NewGetEquipmentDeviceSummariesDefault(code int) *GetEquipmentDeviceSummariesDefault {
	return &GetEquipmentDeviceSummariesDefault{
		_statusCode: code,
	}
}

/*GetEquipmentDeviceSummariesDefault handles this case with default header values.

Unexpected error
*/
type GetEquipmentDeviceSummariesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get equipment device summaries default response
func (o *GetEquipmentDeviceSummariesDefault) Code() int {
	return o._statusCode
}

func (o *GetEquipmentDeviceSummariesDefault) Error() string {
	return fmt.Sprintf("[GET /equipment/DeviceSummaries][%d] GetEquipmentDeviceSummaries default  %+v", o._statusCode, o.Payload)
}

func (o *GetEquipmentDeviceSummariesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEquipmentDeviceSummariesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
