// Code generated by go-swagger; DO NOT EDIT.

package equipment_fex

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetEquipmentFexesReader is a Reader for the GetEquipmentFexes structure.
type GetEquipmentFexesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEquipmentFexesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEquipmentFexesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEquipmentFexesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEquipmentFexesOK creates a GetEquipmentFexesOK with default headers values
func NewGetEquipmentFexesOK() *GetEquipmentFexesOK {
	return &GetEquipmentFexesOK{}
}

/*GetEquipmentFexesOK handles this case with default header values.

List of equipmentFexes for the given filter criteria
*/
type GetEquipmentFexesOK struct {
	Payload *models.EquipmentFexList
}

func (o *GetEquipmentFexesOK) Error() string {
	return fmt.Sprintf("[GET /equipment/Fexes][%d] getEquipmentFexesOK  %+v", 200, o.Payload)
}

func (o *GetEquipmentFexesOK) GetPayload() *models.EquipmentFexList {
	return o.Payload
}

func (o *GetEquipmentFexesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EquipmentFexList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEquipmentFexesDefault creates a GetEquipmentFexesDefault with default headers values
func NewGetEquipmentFexesDefault(code int) *GetEquipmentFexesDefault {
	return &GetEquipmentFexesDefault{
		_statusCode: code,
	}
}

/*GetEquipmentFexesDefault handles this case with default header values.

Unexpected error
*/
type GetEquipmentFexesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get equipment fexes default response
func (o *GetEquipmentFexesDefault) Code() int {
	return o._statusCode
}

func (o *GetEquipmentFexesDefault) Error() string {
	return fmt.Sprintf("[GET /equipment/Fexes][%d] GetEquipmentFexes default  %+v", o._statusCode, o.Payload)
}

func (o *GetEquipmentFexesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEquipmentFexesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
