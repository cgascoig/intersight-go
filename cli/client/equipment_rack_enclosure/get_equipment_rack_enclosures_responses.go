// Code generated by go-swagger; DO NOT EDIT.

package equipment_rack_enclosure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetEquipmentRackEnclosuresReader is a Reader for the GetEquipmentRackEnclosures structure.
type GetEquipmentRackEnclosuresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEquipmentRackEnclosuresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEquipmentRackEnclosuresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEquipmentRackEnclosuresDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEquipmentRackEnclosuresOK creates a GetEquipmentRackEnclosuresOK with default headers values
func NewGetEquipmentRackEnclosuresOK() *GetEquipmentRackEnclosuresOK {
	return &GetEquipmentRackEnclosuresOK{}
}

/*GetEquipmentRackEnclosuresOK handles this case with default header values.

List of equipmentRackEnclosures for the given filter criteria
*/
type GetEquipmentRackEnclosuresOK struct {
	Payload *models.EquipmentRackEnclosureList
}

func (o *GetEquipmentRackEnclosuresOK) Error() string {
	return fmt.Sprintf("[GET /equipment/RackEnclosures][%d] getEquipmentRackEnclosuresOK  %+v", 200, o.Payload)
}

func (o *GetEquipmentRackEnclosuresOK) GetPayload() *models.EquipmentRackEnclosureList {
	return o.Payload
}

func (o *GetEquipmentRackEnclosuresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EquipmentRackEnclosureList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEquipmentRackEnclosuresDefault creates a GetEquipmentRackEnclosuresDefault with default headers values
func NewGetEquipmentRackEnclosuresDefault(code int) *GetEquipmentRackEnclosuresDefault {
	return &GetEquipmentRackEnclosuresDefault{
		_statusCode: code,
	}
}

/*GetEquipmentRackEnclosuresDefault handles this case with default header values.

Unexpected error
*/
type GetEquipmentRackEnclosuresDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get equipment rack enclosures default response
func (o *GetEquipmentRackEnclosuresDefault) Code() int {
	return o._statusCode
}

func (o *GetEquipmentRackEnclosuresDefault) Error() string {
	return fmt.Sprintf("[GET /equipment/RackEnclosures][%d] GetEquipmentRackEnclosures default  %+v", o._statusCode, o.Payload)
}

func (o *GetEquipmentRackEnclosuresDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEquipmentRackEnclosuresDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
