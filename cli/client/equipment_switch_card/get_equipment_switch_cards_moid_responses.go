// Code generated by go-swagger; DO NOT EDIT.

package equipment_switch_card

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetEquipmentSwitchCardsMoidReader is a Reader for the GetEquipmentSwitchCardsMoid structure.
type GetEquipmentSwitchCardsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEquipmentSwitchCardsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEquipmentSwitchCardsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetEquipmentSwitchCardsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetEquipmentSwitchCardsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEquipmentSwitchCardsMoidOK creates a GetEquipmentSwitchCardsMoidOK with default headers values
func NewGetEquipmentSwitchCardsMoidOK() *GetEquipmentSwitchCardsMoidOK {
	return &GetEquipmentSwitchCardsMoidOK{}
}

/*GetEquipmentSwitchCardsMoidOK handles this case with default header values.

An instance of equipmentSwitchCard
*/
type GetEquipmentSwitchCardsMoidOK struct {
	Payload *models.EquipmentSwitchCard
}

func (o *GetEquipmentSwitchCardsMoidOK) Error() string {
	return fmt.Sprintf("[GET /equipment/SwitchCards/{moid}][%d] getEquipmentSwitchCardsMoidOK  %+v", 200, o.Payload)
}

func (o *GetEquipmentSwitchCardsMoidOK) GetPayload() *models.EquipmentSwitchCard {
	return o.Payload
}

func (o *GetEquipmentSwitchCardsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EquipmentSwitchCard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEquipmentSwitchCardsMoidNotFound creates a GetEquipmentSwitchCardsMoidNotFound with default headers values
func NewGetEquipmentSwitchCardsMoidNotFound() *GetEquipmentSwitchCardsMoidNotFound {
	return &GetEquipmentSwitchCardsMoidNotFound{}
}

/*GetEquipmentSwitchCardsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetEquipmentSwitchCardsMoidNotFound struct {
}

func (o *GetEquipmentSwitchCardsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /equipment/SwitchCards/{moid}][%d] getEquipmentSwitchCardsMoidNotFound ", 404)
}

func (o *GetEquipmentSwitchCardsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEquipmentSwitchCardsMoidDefault creates a GetEquipmentSwitchCardsMoidDefault with default headers values
func NewGetEquipmentSwitchCardsMoidDefault(code int) *GetEquipmentSwitchCardsMoidDefault {
	return &GetEquipmentSwitchCardsMoidDefault{
		_statusCode: code,
	}
}

/*GetEquipmentSwitchCardsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetEquipmentSwitchCardsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get equipment switch cards moid default response
func (o *GetEquipmentSwitchCardsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetEquipmentSwitchCardsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /equipment/SwitchCards/{moid}][%d] GetEquipmentSwitchCardsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetEquipmentSwitchCardsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEquipmentSwitchCardsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
