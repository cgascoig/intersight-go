// Code generated by go-swagger; DO NOT EDIT.

package equipment_system_io_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetEquipmentSystemIoControllersReader is a Reader for the GetEquipmentSystemIoControllers structure.
type GetEquipmentSystemIoControllersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEquipmentSystemIoControllersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEquipmentSystemIoControllersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetEquipmentSystemIoControllersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetEquipmentSystemIoControllersOK creates a GetEquipmentSystemIoControllersOK with default headers values
func NewGetEquipmentSystemIoControllersOK() *GetEquipmentSystemIoControllersOK {
	return &GetEquipmentSystemIoControllersOK{}
}

/*GetEquipmentSystemIoControllersOK handles this case with default header values.

List of equipmentSystemIoControllers for the given filter criteria
*/
type GetEquipmentSystemIoControllersOK struct {
	Payload *models.EquipmentSystemIoControllerList
}

func (o *GetEquipmentSystemIoControllersOK) Error() string {
	return fmt.Sprintf("[GET /equipment/SystemIoControllers][%d] getEquipmentSystemIoControllersOK  %+v", 200, o.Payload)
}

func (o *GetEquipmentSystemIoControllersOK) GetPayload() *models.EquipmentSystemIoControllerList {
	return o.Payload
}

func (o *GetEquipmentSystemIoControllersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EquipmentSystemIoControllerList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEquipmentSystemIoControllersDefault creates a GetEquipmentSystemIoControllersDefault with default headers values
func NewGetEquipmentSystemIoControllersDefault(code int) *GetEquipmentSystemIoControllersDefault {
	return &GetEquipmentSystemIoControllersDefault{
		_statusCode: code,
	}
}

/*GetEquipmentSystemIoControllersDefault handles this case with default header values.

Unexpected error
*/
type GetEquipmentSystemIoControllersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get equipment system io controllers default response
func (o *GetEquipmentSystemIoControllersDefault) Code() int {
	return o._statusCode
}

func (o *GetEquipmentSystemIoControllersDefault) Error() string {
	return fmt.Sprintf("[GET /equipment/SystemIoControllers][%d] GetEquipmentSystemIoControllers default  %+v", o._statusCode, o.Payload)
}

func (o *GetEquipmentSystemIoControllersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEquipmentSystemIoControllersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
