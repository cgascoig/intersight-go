// Code generated by go-swagger; DO NOT EDIT.

package firmware_distributable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetFirmwareDistributablesMoidReader is a Reader for the GetFirmwareDistributablesMoid structure.
type GetFirmwareDistributablesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirmwareDistributablesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirmwareDistributablesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFirmwareDistributablesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetFirmwareDistributablesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFirmwareDistributablesMoidOK creates a GetFirmwareDistributablesMoidOK with default headers values
func NewGetFirmwareDistributablesMoidOK() *GetFirmwareDistributablesMoidOK {
	return &GetFirmwareDistributablesMoidOK{}
}

/*GetFirmwareDistributablesMoidOK handles this case with default header values.

An instance of firmwareDistributable
*/
type GetFirmwareDistributablesMoidOK struct {
	Payload *models.FirmwareDistributable
}

func (o *GetFirmwareDistributablesMoidOK) Error() string {
	return fmt.Sprintf("[GET /firmware/Distributables/{moid}][%d] getFirmwareDistributablesMoidOK  %+v", 200, o.Payload)
}

func (o *GetFirmwareDistributablesMoidOK) GetPayload() *models.FirmwareDistributable {
	return o.Payload
}

func (o *GetFirmwareDistributablesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FirmwareDistributable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirmwareDistributablesMoidNotFound creates a GetFirmwareDistributablesMoidNotFound with default headers values
func NewGetFirmwareDistributablesMoidNotFound() *GetFirmwareDistributablesMoidNotFound {
	return &GetFirmwareDistributablesMoidNotFound{}
}

/*GetFirmwareDistributablesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetFirmwareDistributablesMoidNotFound struct {
}

func (o *GetFirmwareDistributablesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /firmware/Distributables/{moid}][%d] getFirmwareDistributablesMoidNotFound ", 404)
}

func (o *GetFirmwareDistributablesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFirmwareDistributablesMoidDefault creates a GetFirmwareDistributablesMoidDefault with default headers values
func NewGetFirmwareDistributablesMoidDefault(code int) *GetFirmwareDistributablesMoidDefault {
	return &GetFirmwareDistributablesMoidDefault{
		_statusCode: code,
	}
}

/*GetFirmwareDistributablesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetFirmwareDistributablesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get firmware distributables moid default response
func (o *GetFirmwareDistributablesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetFirmwareDistributablesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /firmware/Distributables/{moid}][%d] GetFirmwareDistributablesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetFirmwareDistributablesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetFirmwareDistributablesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
