// Code generated by go-swagger; DO NOT EDIT.

package firmware_distributable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// PatchFirmwareDistributablesMoidReader is a Reader for the PatchFirmwareDistributablesMoid structure.
type PatchFirmwareDistributablesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchFirmwareDistributablesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchFirmwareDistributablesMoidCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchFirmwareDistributablesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchFirmwareDistributablesMoidCreated creates a PatchFirmwareDistributablesMoidCreated with default headers values
func NewPatchFirmwareDistributablesMoidCreated() *PatchFirmwareDistributablesMoidCreated {
	return &PatchFirmwareDistributablesMoidCreated{}
}

/*PatchFirmwareDistributablesMoidCreated handles this case with default header values.

Null response
*/
type PatchFirmwareDistributablesMoidCreated struct {
}

func (o *PatchFirmwareDistributablesMoidCreated) Error() string {
	return fmt.Sprintf("[PATCH /firmware/Distributables/{moid}][%d] patchFirmwareDistributablesMoidCreated ", 201)
}

func (o *PatchFirmwareDistributablesMoidCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchFirmwareDistributablesMoidDefault creates a PatchFirmwareDistributablesMoidDefault with default headers values
func NewPatchFirmwareDistributablesMoidDefault(code int) *PatchFirmwareDistributablesMoidDefault {
	return &PatchFirmwareDistributablesMoidDefault{
		_statusCode: code,
	}
}

/*PatchFirmwareDistributablesMoidDefault handles this case with default header values.

unexpected error
*/
type PatchFirmwareDistributablesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the patch firmware distributables moid default response
func (o *PatchFirmwareDistributablesMoidDefault) Code() int {
	return o._statusCode
}

func (o *PatchFirmwareDistributablesMoidDefault) Error() string {
	return fmt.Sprintf("[PATCH /firmware/Distributables/{moid}][%d] PatchFirmwareDistributablesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *PatchFirmwareDistributablesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchFirmwareDistributablesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
