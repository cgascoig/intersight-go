// Code generated by go-swagger; DO NOT EDIT.

package firmware_driver_distributable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteFirmwareDriverDistributablesMoidReader is a Reader for the DeleteFirmwareDriverDistributablesMoid structure.
type DeleteFirmwareDriverDistributablesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFirmwareDriverDistributablesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFirmwareDriverDistributablesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteFirmwareDriverDistributablesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteFirmwareDriverDistributablesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteFirmwareDriverDistributablesMoidOK creates a DeleteFirmwareDriverDistributablesMoidOK with default headers values
func NewDeleteFirmwareDriverDistributablesMoidOK() *DeleteFirmwareDriverDistributablesMoidOK {
	return &DeleteFirmwareDriverDistributablesMoidOK{}
}

/*DeleteFirmwareDriverDistributablesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteFirmwareDriverDistributablesMoidOK struct {
}

func (o *DeleteFirmwareDriverDistributablesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /firmware/DriverDistributables/{moid}][%d] deleteFirmwareDriverDistributablesMoidOK ", 200)
}

func (o *DeleteFirmwareDriverDistributablesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFirmwareDriverDistributablesMoidNotFound creates a DeleteFirmwareDriverDistributablesMoidNotFound with default headers values
func NewDeleteFirmwareDriverDistributablesMoidNotFound() *DeleteFirmwareDriverDistributablesMoidNotFound {
	return &DeleteFirmwareDriverDistributablesMoidNotFound{}
}

/*DeleteFirmwareDriverDistributablesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteFirmwareDriverDistributablesMoidNotFound struct {
}

func (o *DeleteFirmwareDriverDistributablesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /firmware/DriverDistributables/{moid}][%d] deleteFirmwareDriverDistributablesMoidNotFound ", 404)
}

func (o *DeleteFirmwareDriverDistributablesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFirmwareDriverDistributablesMoidDefault creates a DeleteFirmwareDriverDistributablesMoidDefault with default headers values
func NewDeleteFirmwareDriverDistributablesMoidDefault(code int) *DeleteFirmwareDriverDistributablesMoidDefault {
	return &DeleteFirmwareDriverDistributablesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteFirmwareDriverDistributablesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteFirmwareDriverDistributablesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete firmware driver distributables moid default response
func (o *DeleteFirmwareDriverDistributablesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteFirmwareDriverDistributablesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /firmware/DriverDistributables/{moid}][%d] DeleteFirmwareDriverDistributablesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFirmwareDriverDistributablesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteFirmwareDriverDistributablesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
