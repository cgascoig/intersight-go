// Code generated by go-swagger; DO NOT EDIT.

package firmware_eula

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetFirmwareEulasMoidReader is a Reader for the GetFirmwareEulasMoid structure.
type GetFirmwareEulasMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirmwareEulasMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirmwareEulasMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFirmwareEulasMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetFirmwareEulasMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFirmwareEulasMoidOK creates a GetFirmwareEulasMoidOK with default headers values
func NewGetFirmwareEulasMoidOK() *GetFirmwareEulasMoidOK {
	return &GetFirmwareEulasMoidOK{}
}

/*GetFirmwareEulasMoidOK handles this case with default header values.

An instance of firmwareEula
*/
type GetFirmwareEulasMoidOK struct {
	Payload *models.FirmwareEula
}

func (o *GetFirmwareEulasMoidOK) Error() string {
	return fmt.Sprintf("[GET /firmware/Eulas/{moid}][%d] getFirmwareEulasMoidOK  %+v", 200, o.Payload)
}

func (o *GetFirmwareEulasMoidOK) GetPayload() *models.FirmwareEula {
	return o.Payload
}

func (o *GetFirmwareEulasMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FirmwareEula)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirmwareEulasMoidNotFound creates a GetFirmwareEulasMoidNotFound with default headers values
func NewGetFirmwareEulasMoidNotFound() *GetFirmwareEulasMoidNotFound {
	return &GetFirmwareEulasMoidNotFound{}
}

/*GetFirmwareEulasMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetFirmwareEulasMoidNotFound struct {
}

func (o *GetFirmwareEulasMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /firmware/Eulas/{moid}][%d] getFirmwareEulasMoidNotFound ", 404)
}

func (o *GetFirmwareEulasMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFirmwareEulasMoidDefault creates a GetFirmwareEulasMoidDefault with default headers values
func NewGetFirmwareEulasMoidDefault(code int) *GetFirmwareEulasMoidDefault {
	return &GetFirmwareEulasMoidDefault{
		_statusCode: code,
	}
}

/*GetFirmwareEulasMoidDefault handles this case with default header values.

Unexpected error
*/
type GetFirmwareEulasMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get firmware eulas moid default response
func (o *GetFirmwareEulasMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetFirmwareEulasMoidDefault) Error() string {
	return fmt.Sprintf("[GET /firmware/Eulas/{moid}][%d] GetFirmwareEulasMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetFirmwareEulasMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetFirmwareEulasMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
