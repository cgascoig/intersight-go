// Code generated by go-swagger; DO NOT EDIT.

package firmware_upgrade_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetFirmwareUpgradeStatusesMoidReader is a Reader for the GetFirmwareUpgradeStatusesMoid structure.
type GetFirmwareUpgradeStatusesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirmwareUpgradeStatusesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirmwareUpgradeStatusesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetFirmwareUpgradeStatusesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetFirmwareUpgradeStatusesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFirmwareUpgradeStatusesMoidOK creates a GetFirmwareUpgradeStatusesMoidOK with default headers values
func NewGetFirmwareUpgradeStatusesMoidOK() *GetFirmwareUpgradeStatusesMoidOK {
	return &GetFirmwareUpgradeStatusesMoidOK{}
}

/*GetFirmwareUpgradeStatusesMoidOK handles this case with default header values.

An instance of firmwareUpgradeStatus
*/
type GetFirmwareUpgradeStatusesMoidOK struct {
	Payload *models.FirmwareUpgradeStatus
}

func (o *GetFirmwareUpgradeStatusesMoidOK) Error() string {
	return fmt.Sprintf("[GET /firmware/UpgradeStatuses/{moid}][%d] getFirmwareUpgradeStatusesMoidOK  %+v", 200, o.Payload)
}

func (o *GetFirmwareUpgradeStatusesMoidOK) GetPayload() *models.FirmwareUpgradeStatus {
	return o.Payload
}

func (o *GetFirmwareUpgradeStatusesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FirmwareUpgradeStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFirmwareUpgradeStatusesMoidNotFound creates a GetFirmwareUpgradeStatusesMoidNotFound with default headers values
func NewGetFirmwareUpgradeStatusesMoidNotFound() *GetFirmwareUpgradeStatusesMoidNotFound {
	return &GetFirmwareUpgradeStatusesMoidNotFound{}
}

/*GetFirmwareUpgradeStatusesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetFirmwareUpgradeStatusesMoidNotFound struct {
}

func (o *GetFirmwareUpgradeStatusesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /firmware/UpgradeStatuses/{moid}][%d] getFirmwareUpgradeStatusesMoidNotFound ", 404)
}

func (o *GetFirmwareUpgradeStatusesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFirmwareUpgradeStatusesMoidDefault creates a GetFirmwareUpgradeStatusesMoidDefault with default headers values
func NewGetFirmwareUpgradeStatusesMoidDefault(code int) *GetFirmwareUpgradeStatusesMoidDefault {
	return &GetFirmwareUpgradeStatusesMoidDefault{
		_statusCode: code,
	}
}

/*GetFirmwareUpgradeStatusesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetFirmwareUpgradeStatusesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get firmware upgrade statuses moid default response
func (o *GetFirmwareUpgradeStatusesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetFirmwareUpgradeStatusesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /firmware/UpgradeStatuses/{moid}][%d] GetFirmwareUpgradeStatusesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetFirmwareUpgradeStatusesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetFirmwareUpgradeStatusesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
