// Code generated by go-swagger; DO NOT EDIT.

package hcl_hyperflex_software_compatibility_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHclHyperflexSoftwareCompatibilityInfosMoidReader is a Reader for the GetHclHyperflexSoftwareCompatibilityInfosMoid structure.
type GetHclHyperflexSoftwareCompatibilityInfosMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHclHyperflexSoftwareCompatibilityInfosMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHclHyperflexSoftwareCompatibilityInfosMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHclHyperflexSoftwareCompatibilityInfosMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHclHyperflexSoftwareCompatibilityInfosMoidOK creates a GetHclHyperflexSoftwareCompatibilityInfosMoidOK with default headers values
func NewGetHclHyperflexSoftwareCompatibilityInfosMoidOK() *GetHclHyperflexSoftwareCompatibilityInfosMoidOK {
	return &GetHclHyperflexSoftwareCompatibilityInfosMoidOK{}
}

/*GetHclHyperflexSoftwareCompatibilityInfosMoidOK handles this case with default header values.

An instance of hclHyperflexSoftwareCompatibilityInfo
*/
type GetHclHyperflexSoftwareCompatibilityInfosMoidOK struct {
	Payload *models.HclHyperflexSoftwareCompatibilityInfo
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidOK) Error() string {
	return fmt.Sprintf("[GET /hcl/HyperflexSoftwareCompatibilityInfos/{moid}][%d] getHclHyperflexSoftwareCompatibilityInfosMoidOK  %+v", 200, o.Payload)
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidOK) GetPayload() *models.HclHyperflexSoftwareCompatibilityInfo {
	return o.Payload
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HclHyperflexSoftwareCompatibilityInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHclHyperflexSoftwareCompatibilityInfosMoidNotFound creates a GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound with default headers values
func NewGetHclHyperflexSoftwareCompatibilityInfosMoidNotFound() *GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound {
	return &GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound{}
}

/*GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound struct {
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hcl/HyperflexSoftwareCompatibilityInfos/{moid}][%d] getHclHyperflexSoftwareCompatibilityInfosMoidNotFound ", 404)
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHclHyperflexSoftwareCompatibilityInfosMoidDefault creates a GetHclHyperflexSoftwareCompatibilityInfosMoidDefault with default headers values
func NewGetHclHyperflexSoftwareCompatibilityInfosMoidDefault(code int) *GetHclHyperflexSoftwareCompatibilityInfosMoidDefault {
	return &GetHclHyperflexSoftwareCompatibilityInfosMoidDefault{
		_statusCode: code,
	}
}

/*GetHclHyperflexSoftwareCompatibilityInfosMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHclHyperflexSoftwareCompatibilityInfosMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hcl hyperflex software compatibility infos moid default response
func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hcl/HyperflexSoftwareCompatibilityInfos/{moid}][%d] GetHclHyperflexSoftwareCompatibilityInfosMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHclHyperflexSoftwareCompatibilityInfosMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
