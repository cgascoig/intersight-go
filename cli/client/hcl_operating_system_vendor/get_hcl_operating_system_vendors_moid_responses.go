// Code generated by go-swagger; DO NOT EDIT.

package hcl_operating_system_vendor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHclOperatingSystemVendorsMoidReader is a Reader for the GetHclOperatingSystemVendorsMoid structure.
type GetHclOperatingSystemVendorsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHclOperatingSystemVendorsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHclOperatingSystemVendorsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHclOperatingSystemVendorsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHclOperatingSystemVendorsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHclOperatingSystemVendorsMoidOK creates a GetHclOperatingSystemVendorsMoidOK with default headers values
func NewGetHclOperatingSystemVendorsMoidOK() *GetHclOperatingSystemVendorsMoidOK {
	return &GetHclOperatingSystemVendorsMoidOK{}
}

/*GetHclOperatingSystemVendorsMoidOK handles this case with default header values.

An instance of hclOperatingSystemVendor
*/
type GetHclOperatingSystemVendorsMoidOK struct {
	Payload *models.HclOperatingSystemVendor
}

func (o *GetHclOperatingSystemVendorsMoidOK) Error() string {
	return fmt.Sprintf("[GET /hcl/OperatingSystemVendors/{moid}][%d] getHclOperatingSystemVendorsMoidOK  %+v", 200, o.Payload)
}

func (o *GetHclOperatingSystemVendorsMoidOK) GetPayload() *models.HclOperatingSystemVendor {
	return o.Payload
}

func (o *GetHclOperatingSystemVendorsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HclOperatingSystemVendor)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHclOperatingSystemVendorsMoidNotFound creates a GetHclOperatingSystemVendorsMoidNotFound with default headers values
func NewGetHclOperatingSystemVendorsMoidNotFound() *GetHclOperatingSystemVendorsMoidNotFound {
	return &GetHclOperatingSystemVendorsMoidNotFound{}
}

/*GetHclOperatingSystemVendorsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHclOperatingSystemVendorsMoidNotFound struct {
}

func (o *GetHclOperatingSystemVendorsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hcl/OperatingSystemVendors/{moid}][%d] getHclOperatingSystemVendorsMoidNotFound ", 404)
}

func (o *GetHclOperatingSystemVendorsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHclOperatingSystemVendorsMoidDefault creates a GetHclOperatingSystemVendorsMoidDefault with default headers values
func NewGetHclOperatingSystemVendorsMoidDefault(code int) *GetHclOperatingSystemVendorsMoidDefault {
	return &GetHclOperatingSystemVendorsMoidDefault{
		_statusCode: code,
	}
}

/*GetHclOperatingSystemVendorsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHclOperatingSystemVendorsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hcl operating system vendors moid default response
func (o *GetHclOperatingSystemVendorsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHclOperatingSystemVendorsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hcl/OperatingSystemVendors/{moid}][%d] GetHclOperatingSystemVendorsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHclOperatingSystemVendorsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHclOperatingSystemVendorsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
