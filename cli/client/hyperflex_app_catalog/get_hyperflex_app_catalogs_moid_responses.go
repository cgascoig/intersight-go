// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_app_catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexAppCatalogsMoidReader is a Reader for the GetHyperflexAppCatalogsMoid structure.
type GetHyperflexAppCatalogsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexAppCatalogsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexAppCatalogsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexAppCatalogsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexAppCatalogsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexAppCatalogsMoidOK creates a GetHyperflexAppCatalogsMoidOK with default headers values
func NewGetHyperflexAppCatalogsMoidOK() *GetHyperflexAppCatalogsMoidOK {
	return &GetHyperflexAppCatalogsMoidOK{}
}

/*GetHyperflexAppCatalogsMoidOK handles this case with default header values.

An instance of hyperflexAppCatalog
*/
type GetHyperflexAppCatalogsMoidOK struct {
	Payload *models.HyperflexAppCatalog
}

func (o *GetHyperflexAppCatalogsMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/AppCatalogs/{moid}][%d] getHyperflexAppCatalogsMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexAppCatalogsMoidOK) GetPayload() *models.HyperflexAppCatalog {
	return o.Payload
}

func (o *GetHyperflexAppCatalogsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexAppCatalog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexAppCatalogsMoidNotFound creates a GetHyperflexAppCatalogsMoidNotFound with default headers values
func NewGetHyperflexAppCatalogsMoidNotFound() *GetHyperflexAppCatalogsMoidNotFound {
	return &GetHyperflexAppCatalogsMoidNotFound{}
}

/*GetHyperflexAppCatalogsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexAppCatalogsMoidNotFound struct {
}

func (o *GetHyperflexAppCatalogsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/AppCatalogs/{moid}][%d] getHyperflexAppCatalogsMoidNotFound ", 404)
}

func (o *GetHyperflexAppCatalogsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexAppCatalogsMoidDefault creates a GetHyperflexAppCatalogsMoidDefault with default headers values
func NewGetHyperflexAppCatalogsMoidDefault(code int) *GetHyperflexAppCatalogsMoidDefault {
	return &GetHyperflexAppCatalogsMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexAppCatalogsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexAppCatalogsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex app catalogs moid default response
func (o *GetHyperflexAppCatalogsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexAppCatalogsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/AppCatalogs/{moid}][%d] GetHyperflexAppCatalogsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexAppCatalogsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexAppCatalogsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
