// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_config_result

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexConfigResultsMoidReader is a Reader for the GetHyperflexConfigResultsMoid structure.
type GetHyperflexConfigResultsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexConfigResultsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexConfigResultsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexConfigResultsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexConfigResultsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexConfigResultsMoidOK creates a GetHyperflexConfigResultsMoidOK with default headers values
func NewGetHyperflexConfigResultsMoidOK() *GetHyperflexConfigResultsMoidOK {
	return &GetHyperflexConfigResultsMoidOK{}
}

/*GetHyperflexConfigResultsMoidOK handles this case with default header values.

An instance of hyperflexConfigResult
*/
type GetHyperflexConfigResultsMoidOK struct {
	Payload *models.HyperflexConfigResult
}

func (o *GetHyperflexConfigResultsMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/ConfigResults/{moid}][%d] getHyperflexConfigResultsMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexConfigResultsMoidOK) GetPayload() *models.HyperflexConfigResult {
	return o.Payload
}

func (o *GetHyperflexConfigResultsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexConfigResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexConfigResultsMoidNotFound creates a GetHyperflexConfigResultsMoidNotFound with default headers values
func NewGetHyperflexConfigResultsMoidNotFound() *GetHyperflexConfigResultsMoidNotFound {
	return &GetHyperflexConfigResultsMoidNotFound{}
}

/*GetHyperflexConfigResultsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexConfigResultsMoidNotFound struct {
}

func (o *GetHyperflexConfigResultsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/ConfigResults/{moid}][%d] getHyperflexConfigResultsMoidNotFound ", 404)
}

func (o *GetHyperflexConfigResultsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexConfigResultsMoidDefault creates a GetHyperflexConfigResultsMoidDefault with default headers values
func NewGetHyperflexConfigResultsMoidDefault(code int) *GetHyperflexConfigResultsMoidDefault {
	return &GetHyperflexConfigResultsMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexConfigResultsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexConfigResultsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex config results moid default response
func (o *GetHyperflexConfigResultsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexConfigResultsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/ConfigResults/{moid}][%d] GetHyperflexConfigResultsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexConfigResultsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexConfigResultsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
