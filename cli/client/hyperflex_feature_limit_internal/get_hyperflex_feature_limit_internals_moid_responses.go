// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_feature_limit_internal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexFeatureLimitInternalsMoidReader is a Reader for the GetHyperflexFeatureLimitInternalsMoid structure.
type GetHyperflexFeatureLimitInternalsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexFeatureLimitInternalsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexFeatureLimitInternalsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexFeatureLimitInternalsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexFeatureLimitInternalsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexFeatureLimitInternalsMoidOK creates a GetHyperflexFeatureLimitInternalsMoidOK with default headers values
func NewGetHyperflexFeatureLimitInternalsMoidOK() *GetHyperflexFeatureLimitInternalsMoidOK {
	return &GetHyperflexFeatureLimitInternalsMoidOK{}
}

/*GetHyperflexFeatureLimitInternalsMoidOK handles this case with default header values.

An instance of hyperflexFeatureLimitInternal
*/
type GetHyperflexFeatureLimitInternalsMoidOK struct {
	Payload *models.HyperflexFeatureLimitInternal
}

func (o *GetHyperflexFeatureLimitInternalsMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/FeatureLimitInternals/{moid}][%d] getHyperflexFeatureLimitInternalsMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexFeatureLimitInternalsMoidOK) GetPayload() *models.HyperflexFeatureLimitInternal {
	return o.Payload
}

func (o *GetHyperflexFeatureLimitInternalsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexFeatureLimitInternal)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexFeatureLimitInternalsMoidNotFound creates a GetHyperflexFeatureLimitInternalsMoidNotFound with default headers values
func NewGetHyperflexFeatureLimitInternalsMoidNotFound() *GetHyperflexFeatureLimitInternalsMoidNotFound {
	return &GetHyperflexFeatureLimitInternalsMoidNotFound{}
}

/*GetHyperflexFeatureLimitInternalsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexFeatureLimitInternalsMoidNotFound struct {
}

func (o *GetHyperflexFeatureLimitInternalsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/FeatureLimitInternals/{moid}][%d] getHyperflexFeatureLimitInternalsMoidNotFound ", 404)
}

func (o *GetHyperflexFeatureLimitInternalsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexFeatureLimitInternalsMoidDefault creates a GetHyperflexFeatureLimitInternalsMoidDefault with default headers values
func NewGetHyperflexFeatureLimitInternalsMoidDefault(code int) *GetHyperflexFeatureLimitInternalsMoidDefault {
	return &GetHyperflexFeatureLimitInternalsMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexFeatureLimitInternalsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexFeatureLimitInternalsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex feature limit internals moid default response
func (o *GetHyperflexFeatureLimitInternalsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexFeatureLimitInternalsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/FeatureLimitInternals/{moid}][%d] GetHyperflexFeatureLimitInternalsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexFeatureLimitInternalsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexFeatureLimitInternalsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
