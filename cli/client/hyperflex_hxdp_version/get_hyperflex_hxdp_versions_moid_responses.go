// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_hxdp_version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexHxdpVersionsMoidReader is a Reader for the GetHyperflexHxdpVersionsMoid structure.
type GetHyperflexHxdpVersionsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexHxdpVersionsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexHxdpVersionsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexHxdpVersionsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexHxdpVersionsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexHxdpVersionsMoidOK creates a GetHyperflexHxdpVersionsMoidOK with default headers values
func NewGetHyperflexHxdpVersionsMoidOK() *GetHyperflexHxdpVersionsMoidOK {
	return &GetHyperflexHxdpVersionsMoidOK{}
}

/*GetHyperflexHxdpVersionsMoidOK handles this case with default header values.

An instance of hyperflexHxdpVersion
*/
type GetHyperflexHxdpVersionsMoidOK struct {
	Payload *models.HyperflexHxdpVersion
}

func (o *GetHyperflexHxdpVersionsMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/HxdpVersions/{moid}][%d] getHyperflexHxdpVersionsMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexHxdpVersionsMoidOK) GetPayload() *models.HyperflexHxdpVersion {
	return o.Payload
}

func (o *GetHyperflexHxdpVersionsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexHxdpVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexHxdpVersionsMoidNotFound creates a GetHyperflexHxdpVersionsMoidNotFound with default headers values
func NewGetHyperflexHxdpVersionsMoidNotFound() *GetHyperflexHxdpVersionsMoidNotFound {
	return &GetHyperflexHxdpVersionsMoidNotFound{}
}

/*GetHyperflexHxdpVersionsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexHxdpVersionsMoidNotFound struct {
}

func (o *GetHyperflexHxdpVersionsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/HxdpVersions/{moid}][%d] getHyperflexHxdpVersionsMoidNotFound ", 404)
}

func (o *GetHyperflexHxdpVersionsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexHxdpVersionsMoidDefault creates a GetHyperflexHxdpVersionsMoidDefault with default headers values
func NewGetHyperflexHxdpVersionsMoidDefault(code int) *GetHyperflexHxdpVersionsMoidDefault {
	return &GetHyperflexHxdpVersionsMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexHxdpVersionsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexHxdpVersionsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex hxdp versions moid default response
func (o *GetHyperflexHxdpVersionsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexHxdpVersionsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/HxdpVersions/{moid}][%d] GetHyperflexHxdpVersionsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexHxdpVersionsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexHxdpVersionsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
