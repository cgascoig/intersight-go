// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_hxdp_version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexHxdpVersionsReader is a Reader for the GetHyperflexHxdpVersions structure.
type GetHyperflexHxdpVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexHxdpVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexHxdpVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetHyperflexHxdpVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexHxdpVersionsOK creates a GetHyperflexHxdpVersionsOK with default headers values
func NewGetHyperflexHxdpVersionsOK() *GetHyperflexHxdpVersionsOK {
	return &GetHyperflexHxdpVersionsOK{}
}

/*GetHyperflexHxdpVersionsOK handles this case with default header values.

List of hyperflexHxdpVersions for the given filter criteria
*/
type GetHyperflexHxdpVersionsOK struct {
	Payload *models.HyperflexHxdpVersionList
}

func (o *GetHyperflexHxdpVersionsOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/HxdpVersions][%d] getHyperflexHxdpVersionsOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexHxdpVersionsOK) GetPayload() *models.HyperflexHxdpVersionList {
	return o.Payload
}

func (o *GetHyperflexHxdpVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexHxdpVersionList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexHxdpVersionsDefault creates a GetHyperflexHxdpVersionsDefault with default headers values
func NewGetHyperflexHxdpVersionsDefault(code int) *GetHyperflexHxdpVersionsDefault {
	return &GetHyperflexHxdpVersionsDefault{
		_statusCode: code,
	}
}

/*GetHyperflexHxdpVersionsDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexHxdpVersionsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex hxdp versions default response
func (o *GetHyperflexHxdpVersionsDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexHxdpVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/HxdpVersions][%d] GetHyperflexHxdpVersions default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexHxdpVersionsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexHxdpVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
