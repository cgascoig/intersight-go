// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_initiate_hx_cluster_upgrade

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new hyperflex initiate hx cluster upgrade API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for hyperflex initiate hx cluster upgrade API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteHyperflexInitiateHxClusterUpgradesMoid deletes an instance of hyperflex initiate hx cluster upgrade
*/
func (a *Client) DeleteHyperflexInitiateHxClusterUpgradesMoid(params *DeleteHyperflexInitiateHxClusterUpgradesMoidParams) (*DeleteHyperflexInitiateHxClusterUpgradesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteHyperflexInitiateHxClusterUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteHyperflexInitiateHxClusterUpgradesMoid",
		Method:             "DELETE",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteHyperflexInitiateHxClusterUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteHyperflexInitiateHxClusterUpgradesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteHyperflexInitiateHxClusterUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetHyperflexInitiateHxClusterUpgrades gets a list of hyperflex initiate hx cluster upgrade instances
*/
func (a *Client) GetHyperflexInitiateHxClusterUpgrades(params *GetHyperflexInitiateHxClusterUpgradesParams) (*GetHyperflexInitiateHxClusterUpgradesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHyperflexInitiateHxClusterUpgradesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetHyperflexInitiateHxClusterUpgrades",
		Method:             "GET",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetHyperflexInitiateHxClusterUpgradesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetHyperflexInitiateHxClusterUpgradesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetHyperflexInitiateHxClusterUpgradesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetHyperflexInitiateHxClusterUpgradesMoid gets a specific instance of hyperflex initiate hx cluster upgrade
*/
func (a *Client) GetHyperflexInitiateHxClusterUpgradesMoid(params *GetHyperflexInitiateHxClusterUpgradesMoidParams) (*GetHyperflexInitiateHxClusterUpgradesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHyperflexInitiateHxClusterUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetHyperflexInitiateHxClusterUpgradesMoid",
		Method:             "GET",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetHyperflexInitiateHxClusterUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetHyperflexInitiateHxClusterUpgradesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetHyperflexInitiateHxClusterUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchHyperflexInitiateHxClusterUpgradesMoid updates an instance of hyperflex initiate hx cluster upgrade
*/
func (a *Client) PatchHyperflexInitiateHxClusterUpgradesMoid(params *PatchHyperflexInitiateHxClusterUpgradesMoidParams) (*PatchHyperflexInitiateHxClusterUpgradesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchHyperflexInitiateHxClusterUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchHyperflexInitiateHxClusterUpgradesMoid",
		Method:             "PATCH",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchHyperflexInitiateHxClusterUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchHyperflexInitiateHxClusterUpgradesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchHyperflexInitiateHxClusterUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostHyperflexInitiateHxClusterUpgrades creates an instance of hyperflex initiate hx cluster upgrade
*/
func (a *Client) PostHyperflexInitiateHxClusterUpgrades(params *PostHyperflexInitiateHxClusterUpgradesParams) (*PostHyperflexInitiateHxClusterUpgradesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostHyperflexInitiateHxClusterUpgradesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostHyperflexInitiateHxClusterUpgrades",
		Method:             "POST",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostHyperflexInitiateHxClusterUpgradesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostHyperflexInitiateHxClusterUpgradesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostHyperflexInitiateHxClusterUpgradesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostHyperflexInitiateHxClusterUpgradesMoid updates an instance of hyperflex initiate hx cluster upgrade
*/
func (a *Client) PostHyperflexInitiateHxClusterUpgradesMoid(params *PostHyperflexInitiateHxClusterUpgradesMoidParams) (*PostHyperflexInitiateHxClusterUpgradesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostHyperflexInitiateHxClusterUpgradesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostHyperflexInitiateHxClusterUpgradesMoid",
		Method:             "POST",
		PathPattern:        "/hyperflex/InitiateHxClusterUpgrades/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostHyperflexInitiateHxClusterUpgradesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostHyperflexInitiateHxClusterUpgradesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostHyperflexInitiateHxClusterUpgradesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
