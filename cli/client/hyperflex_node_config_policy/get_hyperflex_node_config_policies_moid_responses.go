// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_node_config_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexNodeConfigPoliciesMoidReader is a Reader for the GetHyperflexNodeConfigPoliciesMoid structure.
type GetHyperflexNodeConfigPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexNodeConfigPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexNodeConfigPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexNodeConfigPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexNodeConfigPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexNodeConfigPoliciesMoidOK creates a GetHyperflexNodeConfigPoliciesMoidOK with default headers values
func NewGetHyperflexNodeConfigPoliciesMoidOK() *GetHyperflexNodeConfigPoliciesMoidOK {
	return &GetHyperflexNodeConfigPoliciesMoidOK{}
}

/*GetHyperflexNodeConfigPoliciesMoidOK handles this case with default header values.

An instance of hyperflexNodeConfigPolicy
*/
type GetHyperflexNodeConfigPoliciesMoidOK struct {
	Payload *models.HyperflexNodeConfigPolicy
}

func (o *GetHyperflexNodeConfigPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeConfigPolicies/{moid}][%d] getHyperflexNodeConfigPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexNodeConfigPoliciesMoidOK) GetPayload() *models.HyperflexNodeConfigPolicy {
	return o.Payload
}

func (o *GetHyperflexNodeConfigPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexNodeConfigPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexNodeConfigPoliciesMoidNotFound creates a GetHyperflexNodeConfigPoliciesMoidNotFound with default headers values
func NewGetHyperflexNodeConfigPoliciesMoidNotFound() *GetHyperflexNodeConfigPoliciesMoidNotFound {
	return &GetHyperflexNodeConfigPoliciesMoidNotFound{}
}

/*GetHyperflexNodeConfigPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexNodeConfigPoliciesMoidNotFound struct {
}

func (o *GetHyperflexNodeConfigPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeConfigPolicies/{moid}][%d] getHyperflexNodeConfigPoliciesMoidNotFound ", 404)
}

func (o *GetHyperflexNodeConfigPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexNodeConfigPoliciesMoidDefault creates a GetHyperflexNodeConfigPoliciesMoidDefault with default headers values
func NewGetHyperflexNodeConfigPoliciesMoidDefault(code int) *GetHyperflexNodeConfigPoliciesMoidDefault {
	return &GetHyperflexNodeConfigPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexNodeConfigPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexNodeConfigPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex node config policies moid default response
func (o *GetHyperflexNodeConfigPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexNodeConfigPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeConfigPolicies/{moid}][%d] GetHyperflexNodeConfigPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexNodeConfigPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexNodeConfigPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
