// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_node_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexNodeProfilesMoidReader is a Reader for the GetHyperflexNodeProfilesMoid structure.
type GetHyperflexNodeProfilesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexNodeProfilesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexNodeProfilesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexNodeProfilesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexNodeProfilesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexNodeProfilesMoidOK creates a GetHyperflexNodeProfilesMoidOK with default headers values
func NewGetHyperflexNodeProfilesMoidOK() *GetHyperflexNodeProfilesMoidOK {
	return &GetHyperflexNodeProfilesMoidOK{}
}

/*GetHyperflexNodeProfilesMoidOK handles this case with default header values.

An instance of hyperflexNodeProfile
*/
type GetHyperflexNodeProfilesMoidOK struct {
	Payload *models.HyperflexNodeProfile
}

func (o *GetHyperflexNodeProfilesMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeProfiles/{moid}][%d] getHyperflexNodeProfilesMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexNodeProfilesMoidOK) GetPayload() *models.HyperflexNodeProfile {
	return o.Payload
}

func (o *GetHyperflexNodeProfilesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexNodeProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexNodeProfilesMoidNotFound creates a GetHyperflexNodeProfilesMoidNotFound with default headers values
func NewGetHyperflexNodeProfilesMoidNotFound() *GetHyperflexNodeProfilesMoidNotFound {
	return &GetHyperflexNodeProfilesMoidNotFound{}
}

/*GetHyperflexNodeProfilesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexNodeProfilesMoidNotFound struct {
}

func (o *GetHyperflexNodeProfilesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeProfiles/{moid}][%d] getHyperflexNodeProfilesMoidNotFound ", 404)
}

func (o *GetHyperflexNodeProfilesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexNodeProfilesMoidDefault creates a GetHyperflexNodeProfilesMoidDefault with default headers values
func NewGetHyperflexNodeProfilesMoidDefault(code int) *GetHyperflexNodeProfilesMoidDefault {
	return &GetHyperflexNodeProfilesMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexNodeProfilesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexNodeProfilesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex node profiles moid default response
func (o *GetHyperflexNodeProfilesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexNodeProfilesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/NodeProfiles/{moid}][%d] GetHyperflexNodeProfilesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexNodeProfilesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexNodeProfilesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
