// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_proxy_setting_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexProxySettingPoliciesReader is a Reader for the GetHyperflexProxySettingPolicies structure.
type GetHyperflexProxySettingPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexProxySettingPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexProxySettingPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetHyperflexProxySettingPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexProxySettingPoliciesOK creates a GetHyperflexProxySettingPoliciesOK with default headers values
func NewGetHyperflexProxySettingPoliciesOK() *GetHyperflexProxySettingPoliciesOK {
	return &GetHyperflexProxySettingPoliciesOK{}
}

/*GetHyperflexProxySettingPoliciesOK handles this case with default header values.

List of hyperflexProxySettingPolicies for the given filter criteria
*/
type GetHyperflexProxySettingPoliciesOK struct {
	Payload *models.HyperflexProxySettingPolicyList
}

func (o *GetHyperflexProxySettingPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/ProxySettingPolicies][%d] getHyperflexProxySettingPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexProxySettingPoliciesOK) GetPayload() *models.HyperflexProxySettingPolicyList {
	return o.Payload
}

func (o *GetHyperflexProxySettingPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexProxySettingPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexProxySettingPoliciesDefault creates a GetHyperflexProxySettingPoliciesDefault with default headers values
func NewGetHyperflexProxySettingPoliciesDefault(code int) *GetHyperflexProxySettingPoliciesDefault {
	return &GetHyperflexProxySettingPoliciesDefault{
		_statusCode: code,
	}
}

/*GetHyperflexProxySettingPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexProxySettingPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex proxy setting policies default response
func (o *GetHyperflexProxySettingPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexProxySettingPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/ProxySettingPolicies][%d] GetHyperflexProxySettingPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexProxySettingPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexProxySettingPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
