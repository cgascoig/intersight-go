// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_server_firmware_version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteHyperflexServerFirmwareVersionsMoidReader is a Reader for the DeleteHyperflexServerFirmwareVersionsMoid structure.
type DeleteHyperflexServerFirmwareVersionsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteHyperflexServerFirmwareVersionsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteHyperflexServerFirmwareVersionsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteHyperflexServerFirmwareVersionsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteHyperflexServerFirmwareVersionsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteHyperflexServerFirmwareVersionsMoidOK creates a DeleteHyperflexServerFirmwareVersionsMoidOK with default headers values
func NewDeleteHyperflexServerFirmwareVersionsMoidOK() *DeleteHyperflexServerFirmwareVersionsMoidOK {
	return &DeleteHyperflexServerFirmwareVersionsMoidOK{}
}

/*DeleteHyperflexServerFirmwareVersionsMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteHyperflexServerFirmwareVersionsMoidOK struct {
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/ServerFirmwareVersions/{moid}][%d] deleteHyperflexServerFirmwareVersionsMoidOK ", 200)
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHyperflexServerFirmwareVersionsMoidNotFound creates a DeleteHyperflexServerFirmwareVersionsMoidNotFound with default headers values
func NewDeleteHyperflexServerFirmwareVersionsMoidNotFound() *DeleteHyperflexServerFirmwareVersionsMoidNotFound {
	return &DeleteHyperflexServerFirmwareVersionsMoidNotFound{}
}

/*DeleteHyperflexServerFirmwareVersionsMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteHyperflexServerFirmwareVersionsMoidNotFound struct {
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/ServerFirmwareVersions/{moid}][%d] deleteHyperflexServerFirmwareVersionsMoidNotFound ", 404)
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHyperflexServerFirmwareVersionsMoidDefault creates a DeleteHyperflexServerFirmwareVersionsMoidDefault with default headers values
func NewDeleteHyperflexServerFirmwareVersionsMoidDefault(code int) *DeleteHyperflexServerFirmwareVersionsMoidDefault {
	return &DeleteHyperflexServerFirmwareVersionsMoidDefault{
		_statusCode: code,
	}
}

/*DeleteHyperflexServerFirmwareVersionsMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteHyperflexServerFirmwareVersionsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete hyperflex server firmware versions moid default response
func (o *DeleteHyperflexServerFirmwareVersionsMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/ServerFirmwareVersions/{moid}][%d] DeleteHyperflexServerFirmwareVersionsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteHyperflexServerFirmwareVersionsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
