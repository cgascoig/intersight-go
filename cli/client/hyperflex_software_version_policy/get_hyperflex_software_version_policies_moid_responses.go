// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_software_version_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexSoftwareVersionPoliciesMoidReader is a Reader for the GetHyperflexSoftwareVersionPoliciesMoid structure.
type GetHyperflexSoftwareVersionPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexSoftwareVersionPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexSoftwareVersionPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexSoftwareVersionPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexSoftwareVersionPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexSoftwareVersionPoliciesMoidOK creates a GetHyperflexSoftwareVersionPoliciesMoidOK with default headers values
func NewGetHyperflexSoftwareVersionPoliciesMoidOK() *GetHyperflexSoftwareVersionPoliciesMoidOK {
	return &GetHyperflexSoftwareVersionPoliciesMoidOK{}
}

/*GetHyperflexSoftwareVersionPoliciesMoidOK handles this case with default header values.

An instance of hyperflexSoftwareVersionPolicy
*/
type GetHyperflexSoftwareVersionPoliciesMoidOK struct {
	Payload *models.HyperflexSoftwareVersionPolicy
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/SoftwareVersionPolicies/{moid}][%d] getHyperflexSoftwareVersionPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidOK) GetPayload() *models.HyperflexSoftwareVersionPolicy {
	return o.Payload
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexSoftwareVersionPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexSoftwareVersionPoliciesMoidNotFound creates a GetHyperflexSoftwareVersionPoliciesMoidNotFound with default headers values
func NewGetHyperflexSoftwareVersionPoliciesMoidNotFound() *GetHyperflexSoftwareVersionPoliciesMoidNotFound {
	return &GetHyperflexSoftwareVersionPoliciesMoidNotFound{}
}

/*GetHyperflexSoftwareVersionPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexSoftwareVersionPoliciesMoidNotFound struct {
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/SoftwareVersionPolicies/{moid}][%d] getHyperflexSoftwareVersionPoliciesMoidNotFound ", 404)
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexSoftwareVersionPoliciesMoidDefault creates a GetHyperflexSoftwareVersionPoliciesMoidDefault with default headers values
func NewGetHyperflexSoftwareVersionPoliciesMoidDefault(code int) *GetHyperflexSoftwareVersionPoliciesMoidDefault {
	return &GetHyperflexSoftwareVersionPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexSoftwareVersionPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexSoftwareVersionPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex software version policies moid default response
func (o *GetHyperflexSoftwareVersionPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/SoftwareVersionPolicies/{moid}][%d] GetHyperflexSoftwareVersionPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexSoftwareVersionPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
