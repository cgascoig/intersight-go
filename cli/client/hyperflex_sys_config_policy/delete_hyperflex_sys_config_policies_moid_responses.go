// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_sys_config_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteHyperflexSysConfigPoliciesMoidReader is a Reader for the DeleteHyperflexSysConfigPoliciesMoid structure.
type DeleteHyperflexSysConfigPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteHyperflexSysConfigPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteHyperflexSysConfigPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteHyperflexSysConfigPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteHyperflexSysConfigPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteHyperflexSysConfigPoliciesMoidOK creates a DeleteHyperflexSysConfigPoliciesMoidOK with default headers values
func NewDeleteHyperflexSysConfigPoliciesMoidOK() *DeleteHyperflexSysConfigPoliciesMoidOK {
	return &DeleteHyperflexSysConfigPoliciesMoidOK{}
}

/*DeleteHyperflexSysConfigPoliciesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteHyperflexSysConfigPoliciesMoidOK struct {
}

func (o *DeleteHyperflexSysConfigPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/SysConfigPolicies/{moid}][%d] deleteHyperflexSysConfigPoliciesMoidOK ", 200)
}

func (o *DeleteHyperflexSysConfigPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHyperflexSysConfigPoliciesMoidNotFound creates a DeleteHyperflexSysConfigPoliciesMoidNotFound with default headers values
func NewDeleteHyperflexSysConfigPoliciesMoidNotFound() *DeleteHyperflexSysConfigPoliciesMoidNotFound {
	return &DeleteHyperflexSysConfigPoliciesMoidNotFound{}
}

/*DeleteHyperflexSysConfigPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteHyperflexSysConfigPoliciesMoidNotFound struct {
}

func (o *DeleteHyperflexSysConfigPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/SysConfigPolicies/{moid}][%d] deleteHyperflexSysConfigPoliciesMoidNotFound ", 404)
}

func (o *DeleteHyperflexSysConfigPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteHyperflexSysConfigPoliciesMoidDefault creates a DeleteHyperflexSysConfigPoliciesMoidDefault with default headers values
func NewDeleteHyperflexSysConfigPoliciesMoidDefault(code int) *DeleteHyperflexSysConfigPoliciesMoidDefault {
	return &DeleteHyperflexSysConfigPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteHyperflexSysConfigPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteHyperflexSysConfigPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete hyperflex sys config policies moid default response
func (o *DeleteHyperflexSysConfigPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteHyperflexSysConfigPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /hyperflex/SysConfigPolicies/{moid}][%d] DeleteHyperflexSysConfigPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteHyperflexSysConfigPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteHyperflexSysConfigPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
