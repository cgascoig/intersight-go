// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_vcenter_config_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexVcenterConfigPoliciesMoidReader is a Reader for the GetHyperflexVcenterConfigPoliciesMoid structure.
type GetHyperflexVcenterConfigPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexVcenterConfigPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexVcenterConfigPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHyperflexVcenterConfigPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetHyperflexVcenterConfigPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexVcenterConfigPoliciesMoidOK creates a GetHyperflexVcenterConfigPoliciesMoidOK with default headers values
func NewGetHyperflexVcenterConfigPoliciesMoidOK() *GetHyperflexVcenterConfigPoliciesMoidOK {
	return &GetHyperflexVcenterConfigPoliciesMoidOK{}
}

/*GetHyperflexVcenterConfigPoliciesMoidOK handles this case with default header values.

An instance of hyperflexVcenterConfigPolicy
*/
type GetHyperflexVcenterConfigPoliciesMoidOK struct {
	Payload *models.HyperflexVcenterConfigPolicy
}

func (o *GetHyperflexVcenterConfigPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/VcenterConfigPolicies/{moid}][%d] getHyperflexVcenterConfigPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexVcenterConfigPoliciesMoidOK) GetPayload() *models.HyperflexVcenterConfigPolicy {
	return o.Payload
}

func (o *GetHyperflexVcenterConfigPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexVcenterConfigPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexVcenterConfigPoliciesMoidNotFound creates a GetHyperflexVcenterConfigPoliciesMoidNotFound with default headers values
func NewGetHyperflexVcenterConfigPoliciesMoidNotFound() *GetHyperflexVcenterConfigPoliciesMoidNotFound {
	return &GetHyperflexVcenterConfigPoliciesMoidNotFound{}
}

/*GetHyperflexVcenterConfigPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetHyperflexVcenterConfigPoliciesMoidNotFound struct {
}

func (o *GetHyperflexVcenterConfigPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /hyperflex/VcenterConfigPolicies/{moid}][%d] getHyperflexVcenterConfigPoliciesMoidNotFound ", 404)
}

func (o *GetHyperflexVcenterConfigPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHyperflexVcenterConfigPoliciesMoidDefault creates a GetHyperflexVcenterConfigPoliciesMoidDefault with default headers values
func NewGetHyperflexVcenterConfigPoliciesMoidDefault(code int) *GetHyperflexVcenterConfigPoliciesMoidDefault {
	return &GetHyperflexVcenterConfigPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetHyperflexVcenterConfigPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexVcenterConfigPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex vcenter config policies moid default response
func (o *GetHyperflexVcenterConfigPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexVcenterConfigPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/VcenterConfigPolicies/{moid}][%d] GetHyperflexVcenterConfigPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexVcenterConfigPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexVcenterConfigPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
