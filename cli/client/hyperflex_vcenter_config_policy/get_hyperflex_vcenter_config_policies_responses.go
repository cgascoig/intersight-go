// Code generated by go-swagger; DO NOT EDIT.

package hyperflex_vcenter_config_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetHyperflexVcenterConfigPoliciesReader is a Reader for the GetHyperflexVcenterConfigPolicies structure.
type GetHyperflexVcenterConfigPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHyperflexVcenterConfigPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHyperflexVcenterConfigPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetHyperflexVcenterConfigPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetHyperflexVcenterConfigPoliciesOK creates a GetHyperflexVcenterConfigPoliciesOK with default headers values
func NewGetHyperflexVcenterConfigPoliciesOK() *GetHyperflexVcenterConfigPoliciesOK {
	return &GetHyperflexVcenterConfigPoliciesOK{}
}

/*GetHyperflexVcenterConfigPoliciesOK handles this case with default header values.

List of hyperflexVcenterConfigPolicies for the given filter criteria
*/
type GetHyperflexVcenterConfigPoliciesOK struct {
	Payload *models.HyperflexVcenterConfigPolicyList
}

func (o *GetHyperflexVcenterConfigPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /hyperflex/VcenterConfigPolicies][%d] getHyperflexVcenterConfigPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetHyperflexVcenterConfigPoliciesOK) GetPayload() *models.HyperflexVcenterConfigPolicyList {
	return o.Payload
}

func (o *GetHyperflexVcenterConfigPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HyperflexVcenterConfigPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHyperflexVcenterConfigPoliciesDefault creates a GetHyperflexVcenterConfigPoliciesDefault with default headers values
func NewGetHyperflexVcenterConfigPoliciesDefault(code int) *GetHyperflexVcenterConfigPoliciesDefault {
	return &GetHyperflexVcenterConfigPoliciesDefault{
		_statusCode: code,
	}
}

/*GetHyperflexVcenterConfigPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetHyperflexVcenterConfigPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get hyperflex vcenter config policies default response
func (o *GetHyperflexVcenterConfigPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetHyperflexVcenterConfigPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /hyperflex/VcenterConfigPolicies][%d] GetHyperflexVcenterConfigPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetHyperflexVcenterConfigPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHyperflexVcenterConfigPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
