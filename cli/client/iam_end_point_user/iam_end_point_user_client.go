// Code generated by go-swagger; DO NOT EDIT.

package iam_end_point_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new iam end point user API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for iam end point user API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteIamEndPointUsersMoid deletes an instance of iam end point user
*/
func (a *Client) DeleteIamEndPointUsersMoid(params *DeleteIamEndPointUsersMoidParams) (*DeleteIamEndPointUsersMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteIamEndPointUsersMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteIamEndPointUsersMoid",
		Method:             "DELETE",
		PathPattern:        "/iam/EndPointUsers/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteIamEndPointUsersMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteIamEndPointUsersMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteIamEndPointUsersMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetIamEndPointUsers gets a list of iam end point user instances
*/
func (a *Client) GetIamEndPointUsers(params *GetIamEndPointUsersParams) (*GetIamEndPointUsersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetIamEndPointUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetIamEndPointUsers",
		Method:             "GET",
		PathPattern:        "/iam/EndPointUsers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetIamEndPointUsersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetIamEndPointUsersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetIamEndPointUsersDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetIamEndPointUsersMoid gets a specific instance of iam end point user
*/
func (a *Client) GetIamEndPointUsersMoid(params *GetIamEndPointUsersMoidParams) (*GetIamEndPointUsersMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetIamEndPointUsersMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetIamEndPointUsersMoid",
		Method:             "GET",
		PathPattern:        "/iam/EndPointUsers/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetIamEndPointUsersMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetIamEndPointUsersMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetIamEndPointUsersMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchIamEndPointUsersMoid updates an instance of iam end point user
*/
func (a *Client) PatchIamEndPointUsersMoid(params *PatchIamEndPointUsersMoidParams) (*PatchIamEndPointUsersMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchIamEndPointUsersMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchIamEndPointUsersMoid",
		Method:             "PATCH",
		PathPattern:        "/iam/EndPointUsers/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchIamEndPointUsersMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchIamEndPointUsersMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchIamEndPointUsersMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostIamEndPointUsers creates an instance of iam end point user
*/
func (a *Client) PostIamEndPointUsers(params *PostIamEndPointUsersParams) (*PostIamEndPointUsersCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostIamEndPointUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostIamEndPointUsers",
		Method:             "POST",
		PathPattern:        "/iam/EndPointUsers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostIamEndPointUsersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostIamEndPointUsersCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostIamEndPointUsersDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostIamEndPointUsersMoid updates an instance of iam end point user
*/
func (a *Client) PostIamEndPointUsersMoid(params *PostIamEndPointUsersMoidParams) (*PostIamEndPointUsersMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostIamEndPointUsersMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostIamEndPointUsersMoid",
		Method:             "POST",
		PathPattern:        "/iam/EndPointUsers/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostIamEndPointUsersMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostIamEndPointUsersMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostIamEndPointUsersMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
