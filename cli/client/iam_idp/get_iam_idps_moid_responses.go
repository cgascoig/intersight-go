// Code generated by go-swagger; DO NOT EDIT.

package iam_idp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetIamIdpsMoidReader is a Reader for the GetIamIdpsMoid structure.
type GetIamIdpsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIamIdpsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIamIdpsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetIamIdpsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetIamIdpsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetIamIdpsMoidOK creates a GetIamIdpsMoidOK with default headers values
func NewGetIamIdpsMoidOK() *GetIamIdpsMoidOK {
	return &GetIamIdpsMoidOK{}
}

/*GetIamIdpsMoidOK handles this case with default header values.

An instance of iamIdp
*/
type GetIamIdpsMoidOK struct {
	Payload *models.IamIdp
}

func (o *GetIamIdpsMoidOK) Error() string {
	return fmt.Sprintf("[GET /iam/Idps/{moid}][%d] getIamIdpsMoidOK  %+v", 200, o.Payload)
}

func (o *GetIamIdpsMoidOK) GetPayload() *models.IamIdp {
	return o.Payload
}

func (o *GetIamIdpsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IamIdp)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIamIdpsMoidNotFound creates a GetIamIdpsMoidNotFound with default headers values
func NewGetIamIdpsMoidNotFound() *GetIamIdpsMoidNotFound {
	return &GetIamIdpsMoidNotFound{}
}

/*GetIamIdpsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetIamIdpsMoidNotFound struct {
}

func (o *GetIamIdpsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /iam/Idps/{moid}][%d] getIamIdpsMoidNotFound ", 404)
}

func (o *GetIamIdpsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIamIdpsMoidDefault creates a GetIamIdpsMoidDefault with default headers values
func NewGetIamIdpsMoidDefault(code int) *GetIamIdpsMoidDefault {
	return &GetIamIdpsMoidDefault{
		_statusCode: code,
	}
}

/*GetIamIdpsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetIamIdpsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get iam idps moid default response
func (o *GetIamIdpsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetIamIdpsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /iam/Idps/{moid}][%d] GetIamIdpsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetIamIdpsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIamIdpsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
