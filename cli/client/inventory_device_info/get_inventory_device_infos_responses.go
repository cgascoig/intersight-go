// Code generated by go-swagger; DO NOT EDIT.

package inventory_device_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetInventoryDeviceInfosReader is a Reader for the GetInventoryDeviceInfos structure.
type GetInventoryDeviceInfosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryDeviceInfosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInventoryDeviceInfosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetInventoryDeviceInfosDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInventoryDeviceInfosOK creates a GetInventoryDeviceInfosOK with default headers values
func NewGetInventoryDeviceInfosOK() *GetInventoryDeviceInfosOK {
	return &GetInventoryDeviceInfosOK{}
}

/*GetInventoryDeviceInfosOK handles this case with default header values.

List of inventoryDeviceInfos for the given filter criteria
*/
type GetInventoryDeviceInfosOK struct {
	Payload *models.InventoryDeviceInfoList
}

func (o *GetInventoryDeviceInfosOK) Error() string {
	return fmt.Sprintf("[GET /inventory/DeviceInfos][%d] getInventoryDeviceInfosOK  %+v", 200, o.Payload)
}

func (o *GetInventoryDeviceInfosOK) GetPayload() *models.InventoryDeviceInfoList {
	return o.Payload
}

func (o *GetInventoryDeviceInfosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryDeviceInfoList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryDeviceInfosDefault creates a GetInventoryDeviceInfosDefault with default headers values
func NewGetInventoryDeviceInfosDefault(code int) *GetInventoryDeviceInfosDefault {
	return &GetInventoryDeviceInfosDefault{
		_statusCode: code,
	}
}

/*GetInventoryDeviceInfosDefault handles this case with default header values.

Unexpected error
*/
type GetInventoryDeviceInfosDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get inventory device infos default response
func (o *GetInventoryDeviceInfosDefault) Code() int {
	return o._statusCode
}

func (o *GetInventoryDeviceInfosDefault) Error() string {
	return fmt.Sprintf("[GET /inventory/DeviceInfos][%d] GetInventoryDeviceInfos default  %+v", o._statusCode, o.Payload)
}

func (o *GetInventoryDeviceInfosDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInventoryDeviceInfosDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
