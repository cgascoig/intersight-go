// Code generated by go-swagger; DO NOT EDIT.

package inventory_generic_inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new inventory generic inventory API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for inventory generic inventory API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetInventoryGenericInventories gets a list of inventory generic inventory instances
*/
func (a *Client) GetInventoryGenericInventories(params *GetInventoryGenericInventoriesParams) (*GetInventoryGenericInventoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryGenericInventoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetInventoryGenericInventories",
		Method:             "GET",
		PathPattern:        "/inventory/GenericInventories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryGenericInventoriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryGenericInventoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetInventoryGenericInventoriesDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetInventoryGenericInventoriesMoid gets a specific instance of inventory generic inventory
*/
func (a *Client) GetInventoryGenericInventoriesMoid(params *GetInventoryGenericInventoriesMoidParams) (*GetInventoryGenericInventoriesMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryGenericInventoriesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetInventoryGenericInventoriesMoid",
		Method:             "GET",
		PathPattern:        "/inventory/GenericInventories/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryGenericInventoriesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryGenericInventoriesMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetInventoryGenericInventoriesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchInventoryGenericInventoriesMoid updates an instance of inventory generic inventory
*/
func (a *Client) PatchInventoryGenericInventoriesMoid(params *PatchInventoryGenericInventoriesMoidParams) (*PatchInventoryGenericInventoriesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchInventoryGenericInventoriesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchInventoryGenericInventoriesMoid",
		Method:             "PATCH",
		PathPattern:        "/inventory/GenericInventories/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchInventoryGenericInventoriesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchInventoryGenericInventoriesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchInventoryGenericInventoriesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostInventoryGenericInventoriesMoid updates an instance of inventory generic inventory
*/
func (a *Client) PostInventoryGenericInventoriesMoid(params *PostInventoryGenericInventoriesMoidParams) (*PostInventoryGenericInventoriesMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostInventoryGenericInventoriesMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostInventoryGenericInventoriesMoid",
		Method:             "POST",
		PathPattern:        "/inventory/GenericInventories/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostInventoryGenericInventoriesMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostInventoryGenericInventoriesMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostInventoryGenericInventoriesMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
