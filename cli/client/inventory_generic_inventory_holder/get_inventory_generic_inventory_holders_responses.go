// Code generated by go-swagger; DO NOT EDIT.

package inventory_generic_inventory_holder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetInventoryGenericInventoryHoldersReader is a Reader for the GetInventoryGenericInventoryHolders structure.
type GetInventoryGenericInventoryHoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryGenericInventoryHoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInventoryGenericInventoryHoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetInventoryGenericInventoryHoldersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInventoryGenericInventoryHoldersOK creates a GetInventoryGenericInventoryHoldersOK with default headers values
func NewGetInventoryGenericInventoryHoldersOK() *GetInventoryGenericInventoryHoldersOK {
	return &GetInventoryGenericInventoryHoldersOK{}
}

/*GetInventoryGenericInventoryHoldersOK handles this case with default header values.

List of inventoryGenericInventoryHolders for the given filter criteria
*/
type GetInventoryGenericInventoryHoldersOK struct {
	Payload *models.InventoryGenericInventoryHolderList
}

func (o *GetInventoryGenericInventoryHoldersOK) Error() string {
	return fmt.Sprintf("[GET /inventory/GenericInventoryHolders][%d] getInventoryGenericInventoryHoldersOK  %+v", 200, o.Payload)
}

func (o *GetInventoryGenericInventoryHoldersOK) GetPayload() *models.InventoryGenericInventoryHolderList {
	return o.Payload
}

func (o *GetInventoryGenericInventoryHoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryGenericInventoryHolderList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryGenericInventoryHoldersDefault creates a GetInventoryGenericInventoryHoldersDefault with default headers values
func NewGetInventoryGenericInventoryHoldersDefault(code int) *GetInventoryGenericInventoryHoldersDefault {
	return &GetInventoryGenericInventoryHoldersDefault{
		_statusCode: code,
	}
}

/*GetInventoryGenericInventoryHoldersDefault handles this case with default header values.

Unexpected error
*/
type GetInventoryGenericInventoryHoldersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get inventory generic inventory holders default response
func (o *GetInventoryGenericInventoryHoldersDefault) Code() int {
	return o._statusCode
}

func (o *GetInventoryGenericInventoryHoldersDefault) Error() string {
	return fmt.Sprintf("[GET /inventory/GenericInventoryHolders][%d] GetInventoryGenericInventoryHolders default  %+v", o._statusCode, o.Payload)
}

func (o *GetInventoryGenericInventoryHoldersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInventoryGenericInventoryHoldersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
