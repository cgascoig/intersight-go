// Code generated by go-swagger; DO NOT EDIT.

package ipmioverlan_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteIpmioverlanPoliciesMoidReader is a Reader for the DeleteIpmioverlanPoliciesMoid structure.
type DeleteIpmioverlanPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIpmioverlanPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIpmioverlanPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteIpmioverlanPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteIpmioverlanPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteIpmioverlanPoliciesMoidOK creates a DeleteIpmioverlanPoliciesMoidOK with default headers values
func NewDeleteIpmioverlanPoliciesMoidOK() *DeleteIpmioverlanPoliciesMoidOK {
	return &DeleteIpmioverlanPoliciesMoidOK{}
}

/*DeleteIpmioverlanPoliciesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteIpmioverlanPoliciesMoidOK struct {
}

func (o *DeleteIpmioverlanPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /ipmioverlan/Policies/{moid}][%d] deleteIpmioverlanPoliciesMoidOK ", 200)
}

func (o *DeleteIpmioverlanPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIpmioverlanPoliciesMoidNotFound creates a DeleteIpmioverlanPoliciesMoidNotFound with default headers values
func NewDeleteIpmioverlanPoliciesMoidNotFound() *DeleteIpmioverlanPoliciesMoidNotFound {
	return &DeleteIpmioverlanPoliciesMoidNotFound{}
}

/*DeleteIpmioverlanPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteIpmioverlanPoliciesMoidNotFound struct {
}

func (o *DeleteIpmioverlanPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ipmioverlan/Policies/{moid}][%d] deleteIpmioverlanPoliciesMoidNotFound ", 404)
}

func (o *DeleteIpmioverlanPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIpmioverlanPoliciesMoidDefault creates a DeleteIpmioverlanPoliciesMoidDefault with default headers values
func NewDeleteIpmioverlanPoliciesMoidDefault(code int) *DeleteIpmioverlanPoliciesMoidDefault {
	return &DeleteIpmioverlanPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteIpmioverlanPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteIpmioverlanPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete ipmioverlan policies moid default response
func (o *DeleteIpmioverlanPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteIpmioverlanPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /ipmioverlan/Policies/{moid}][%d] DeleteIpmioverlanPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteIpmioverlanPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIpmioverlanPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
