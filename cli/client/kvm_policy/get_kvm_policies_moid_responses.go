// Code generated by go-swagger; DO NOT EDIT.

package kvm_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetKvmPoliciesMoidReader is a Reader for the GetKvmPoliciesMoid structure.
type GetKvmPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKvmPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKvmPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKvmPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetKvmPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetKvmPoliciesMoidOK creates a GetKvmPoliciesMoidOK with default headers values
func NewGetKvmPoliciesMoidOK() *GetKvmPoliciesMoidOK {
	return &GetKvmPoliciesMoidOK{}
}

/*GetKvmPoliciesMoidOK handles this case with default header values.

An instance of kvmPolicy
*/
type GetKvmPoliciesMoidOK struct {
	Payload *models.KvmPolicy
}

func (o *GetKvmPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /kvm/Policies/{moid}][%d] getKvmPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetKvmPoliciesMoidOK) GetPayload() *models.KvmPolicy {
	return o.Payload
}

func (o *GetKvmPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KvmPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKvmPoliciesMoidNotFound creates a GetKvmPoliciesMoidNotFound with default headers values
func NewGetKvmPoliciesMoidNotFound() *GetKvmPoliciesMoidNotFound {
	return &GetKvmPoliciesMoidNotFound{}
}

/*GetKvmPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetKvmPoliciesMoidNotFound struct {
}

func (o *GetKvmPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /kvm/Policies/{moid}][%d] getKvmPoliciesMoidNotFound ", 404)
}

func (o *GetKvmPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKvmPoliciesMoidDefault creates a GetKvmPoliciesMoidDefault with default headers values
func NewGetKvmPoliciesMoidDefault(code int) *GetKvmPoliciesMoidDefault {
	return &GetKvmPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetKvmPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetKvmPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get kvm policies moid default response
func (o *GetKvmPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetKvmPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /kvm/Policies/{moid}][%d] GetKvmPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetKvmPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKvmPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
