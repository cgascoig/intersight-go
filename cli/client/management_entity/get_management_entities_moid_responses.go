// Code generated by go-swagger; DO NOT EDIT.

package management_entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetManagementEntitiesMoidReader is a Reader for the GetManagementEntitiesMoid structure.
type GetManagementEntitiesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetManagementEntitiesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetManagementEntitiesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetManagementEntitiesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetManagementEntitiesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetManagementEntitiesMoidOK creates a GetManagementEntitiesMoidOK with default headers values
func NewGetManagementEntitiesMoidOK() *GetManagementEntitiesMoidOK {
	return &GetManagementEntitiesMoidOK{}
}

/*GetManagementEntitiesMoidOK handles this case with default header values.

An instance of managementEntity
*/
type GetManagementEntitiesMoidOK struct {
	Payload *models.ManagementEntity
}

func (o *GetManagementEntitiesMoidOK) Error() string {
	return fmt.Sprintf("[GET /management/Entities/{moid}][%d] getManagementEntitiesMoidOK  %+v", 200, o.Payload)
}

func (o *GetManagementEntitiesMoidOK) GetPayload() *models.ManagementEntity {
	return o.Payload
}

func (o *GetManagementEntitiesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManagementEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManagementEntitiesMoidNotFound creates a GetManagementEntitiesMoidNotFound with default headers values
func NewGetManagementEntitiesMoidNotFound() *GetManagementEntitiesMoidNotFound {
	return &GetManagementEntitiesMoidNotFound{}
}

/*GetManagementEntitiesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetManagementEntitiesMoidNotFound struct {
}

func (o *GetManagementEntitiesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /management/Entities/{moid}][%d] getManagementEntitiesMoidNotFound ", 404)
}

func (o *GetManagementEntitiesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagementEntitiesMoidDefault creates a GetManagementEntitiesMoidDefault with default headers values
func NewGetManagementEntitiesMoidDefault(code int) *GetManagementEntitiesMoidDefault {
	return &GetManagementEntitiesMoidDefault{
		_statusCode: code,
	}
}

/*GetManagementEntitiesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetManagementEntitiesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get management entities moid default response
func (o *GetManagementEntitiesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetManagementEntitiesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /management/Entities/{moid}][%d] GetManagementEntitiesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetManagementEntitiesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetManagementEntitiesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
