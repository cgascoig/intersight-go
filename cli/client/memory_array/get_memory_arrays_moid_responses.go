// Code generated by go-swagger; DO NOT EDIT.

package memory_array

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetMemoryArraysMoidReader is a Reader for the GetMemoryArraysMoid structure.
type GetMemoryArraysMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMemoryArraysMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMemoryArraysMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetMemoryArraysMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetMemoryArraysMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMemoryArraysMoidOK creates a GetMemoryArraysMoidOK with default headers values
func NewGetMemoryArraysMoidOK() *GetMemoryArraysMoidOK {
	return &GetMemoryArraysMoidOK{}
}

/*GetMemoryArraysMoidOK handles this case with default header values.

An instance of memoryArray
*/
type GetMemoryArraysMoidOK struct {
	Payload *models.MemoryArray
}

func (o *GetMemoryArraysMoidOK) Error() string {
	return fmt.Sprintf("[GET /memory/Arrays/{moid}][%d] getMemoryArraysMoidOK  %+v", 200, o.Payload)
}

func (o *GetMemoryArraysMoidOK) GetPayload() *models.MemoryArray {
	return o.Payload
}

func (o *GetMemoryArraysMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MemoryArray)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMemoryArraysMoidNotFound creates a GetMemoryArraysMoidNotFound with default headers values
func NewGetMemoryArraysMoidNotFound() *GetMemoryArraysMoidNotFound {
	return &GetMemoryArraysMoidNotFound{}
}

/*GetMemoryArraysMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetMemoryArraysMoidNotFound struct {
}

func (o *GetMemoryArraysMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /memory/Arrays/{moid}][%d] getMemoryArraysMoidNotFound ", 404)
}

func (o *GetMemoryArraysMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMemoryArraysMoidDefault creates a GetMemoryArraysMoidDefault with default headers values
func NewGetMemoryArraysMoidDefault(code int) *GetMemoryArraysMoidDefault {
	return &GetMemoryArraysMoidDefault{
		_statusCode: code,
	}
}

/*GetMemoryArraysMoidDefault handles this case with default header values.

Unexpected error
*/
type GetMemoryArraysMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get memory arrays moid default response
func (o *GetMemoryArraysMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetMemoryArraysMoidDefault) Error() string {
	return fmt.Sprintf("[GET /memory/Arrays/{moid}][%d] GetMemoryArraysMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetMemoryArraysMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMemoryArraysMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
