// Code generated by go-swagger; DO NOT EDIT.

package network_element

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetNetworkElementsReader is a Reader for the GetNetworkElements structure.
type GetNetworkElementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkElementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkElementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNetworkElementsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNetworkElementsOK creates a GetNetworkElementsOK with default headers values
func NewGetNetworkElementsOK() *GetNetworkElementsOK {
	return &GetNetworkElementsOK{}
}

/*GetNetworkElementsOK handles this case with default header values.

List of networkElements for the given filter criteria
*/
type GetNetworkElementsOK struct {
	Payload *models.NetworkElementList
}

func (o *GetNetworkElementsOK) Error() string {
	return fmt.Sprintf("[GET /network/Elements][%d] getNetworkElementsOK  %+v", 200, o.Payload)
}

func (o *GetNetworkElementsOK) GetPayload() *models.NetworkElementList {
	return o.Payload
}

func (o *GetNetworkElementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkElementList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkElementsDefault creates a GetNetworkElementsDefault with default headers values
func NewGetNetworkElementsDefault(code int) *GetNetworkElementsDefault {
	return &GetNetworkElementsDefault{
		_statusCode: code,
	}
}

/*GetNetworkElementsDefault handles this case with default header values.

Unexpected error
*/
type GetNetworkElementsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get network elements default response
func (o *GetNetworkElementsDefault) Code() int {
	return o._statusCode
}

func (o *GetNetworkElementsDefault) Error() string {
	return fmt.Sprintf("[GET /network/Elements][%d] GetNetworkElements default  %+v", o._statusCode, o.Payload)
}

func (o *GetNetworkElementsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworkElementsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
