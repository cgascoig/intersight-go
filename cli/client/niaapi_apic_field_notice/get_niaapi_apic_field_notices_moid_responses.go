// Code generated by go-swagger; DO NOT EDIT.

package niaapi_apic_field_notice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetNiaapiApicFieldNoticesMoidReader is a Reader for the GetNiaapiApicFieldNoticesMoid structure.
type GetNiaapiApicFieldNoticesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNiaapiApicFieldNoticesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNiaapiApicFieldNoticesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetNiaapiApicFieldNoticesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetNiaapiApicFieldNoticesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNiaapiApicFieldNoticesMoidOK creates a GetNiaapiApicFieldNoticesMoidOK with default headers values
func NewGetNiaapiApicFieldNoticesMoidOK() *GetNiaapiApicFieldNoticesMoidOK {
	return &GetNiaapiApicFieldNoticesMoidOK{}
}

/*GetNiaapiApicFieldNoticesMoidOK handles this case with default header values.

An instance of niaapiApicFieldNotice
*/
type GetNiaapiApicFieldNoticesMoidOK struct {
	Payload *models.NiaapiApicFieldNotice
}

func (o *GetNiaapiApicFieldNoticesMoidOK) Error() string {
	return fmt.Sprintf("[GET /niaapi/ApicFieldNotices/{moid}][%d] getNiaapiApicFieldNoticesMoidOK  %+v", 200, o.Payload)
}

func (o *GetNiaapiApicFieldNoticesMoidOK) GetPayload() *models.NiaapiApicFieldNotice {
	return o.Payload
}

func (o *GetNiaapiApicFieldNoticesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NiaapiApicFieldNotice)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNiaapiApicFieldNoticesMoidNotFound creates a GetNiaapiApicFieldNoticesMoidNotFound with default headers values
func NewGetNiaapiApicFieldNoticesMoidNotFound() *GetNiaapiApicFieldNoticesMoidNotFound {
	return &GetNiaapiApicFieldNoticesMoidNotFound{}
}

/*GetNiaapiApicFieldNoticesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetNiaapiApicFieldNoticesMoidNotFound struct {
}

func (o *GetNiaapiApicFieldNoticesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /niaapi/ApicFieldNotices/{moid}][%d] getNiaapiApicFieldNoticesMoidNotFound ", 404)
}

func (o *GetNiaapiApicFieldNoticesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNiaapiApicFieldNoticesMoidDefault creates a GetNiaapiApicFieldNoticesMoidDefault with default headers values
func NewGetNiaapiApicFieldNoticesMoidDefault(code int) *GetNiaapiApicFieldNoticesMoidDefault {
	return &GetNiaapiApicFieldNoticesMoidDefault{
		_statusCode: code,
	}
}

/*GetNiaapiApicFieldNoticesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetNiaapiApicFieldNoticesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get niaapi apic field notices moid default response
func (o *GetNiaapiApicFieldNoticesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetNiaapiApicFieldNoticesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /niaapi/ApicFieldNotices/{moid}][%d] GetNiaapiApicFieldNoticesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetNiaapiApicFieldNoticesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNiaapiApicFieldNoticesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
