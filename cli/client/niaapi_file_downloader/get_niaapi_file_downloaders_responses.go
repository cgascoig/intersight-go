// Code generated by go-swagger; DO NOT EDIT.

package niaapi_file_downloader

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetNiaapiFileDownloadersReader is a Reader for the GetNiaapiFileDownloaders structure.
type GetNiaapiFileDownloadersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNiaapiFileDownloadersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNiaapiFileDownloadersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetNiaapiFileDownloadersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNiaapiFileDownloadersOK creates a GetNiaapiFileDownloadersOK with default headers values
func NewGetNiaapiFileDownloadersOK() *GetNiaapiFileDownloadersOK {
	return &GetNiaapiFileDownloadersOK{}
}

/*GetNiaapiFileDownloadersOK handles this case with default header values.

List of niaapiFileDownloaders for the given filter criteria
*/
type GetNiaapiFileDownloadersOK struct {
	Payload *models.NiaapiFileDownloaderList
}

func (o *GetNiaapiFileDownloadersOK) Error() string {
	return fmt.Sprintf("[GET /niaapi/FileDownloaders][%d] getNiaapiFileDownloadersOK  %+v", 200, o.Payload)
}

func (o *GetNiaapiFileDownloadersOK) GetPayload() *models.NiaapiFileDownloaderList {
	return o.Payload
}

func (o *GetNiaapiFileDownloadersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NiaapiFileDownloaderList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNiaapiFileDownloadersDefault creates a GetNiaapiFileDownloadersDefault with default headers values
func NewGetNiaapiFileDownloadersDefault(code int) *GetNiaapiFileDownloadersDefault {
	return &GetNiaapiFileDownloadersDefault{
		_statusCode: code,
	}
}

/*GetNiaapiFileDownloadersDefault handles this case with default header values.

Unexpected error
*/
type GetNiaapiFileDownloadersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get niaapi file downloaders default response
func (o *GetNiaapiFileDownloadersDefault) Code() int {
	return o._statusCode
}

func (o *GetNiaapiFileDownloadersDefault) Error() string {
	return fmt.Sprintf("[GET /niaapi/FileDownloaders][%d] GetNiaapiFileDownloaders default  %+v", o._statusCode, o.Payload)
}

func (o *GetNiaapiFileDownloadersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNiaapiFileDownloadersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
