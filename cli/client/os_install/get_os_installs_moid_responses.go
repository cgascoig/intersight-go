// Code generated by go-swagger; DO NOT EDIT.

package os_install

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetOsInstallsMoidReader is a Reader for the GetOsInstallsMoid structure.
type GetOsInstallsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOsInstallsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOsInstallsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetOsInstallsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetOsInstallsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetOsInstallsMoidOK creates a GetOsInstallsMoidOK with default headers values
func NewGetOsInstallsMoidOK() *GetOsInstallsMoidOK {
	return &GetOsInstallsMoidOK{}
}

/*GetOsInstallsMoidOK handles this case with default header values.

An instance of osInstall
*/
type GetOsInstallsMoidOK struct {
	Payload *models.OsInstall
}

func (o *GetOsInstallsMoidOK) Error() string {
	return fmt.Sprintf("[GET /os/Installs/{moid}][%d] getOsInstallsMoidOK  %+v", 200, o.Payload)
}

func (o *GetOsInstallsMoidOK) GetPayload() *models.OsInstall {
	return o.Payload
}

func (o *GetOsInstallsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OsInstall)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOsInstallsMoidNotFound creates a GetOsInstallsMoidNotFound with default headers values
func NewGetOsInstallsMoidNotFound() *GetOsInstallsMoidNotFound {
	return &GetOsInstallsMoidNotFound{}
}

/*GetOsInstallsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetOsInstallsMoidNotFound struct {
}

func (o *GetOsInstallsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /os/Installs/{moid}][%d] getOsInstallsMoidNotFound ", 404)
}

func (o *GetOsInstallsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOsInstallsMoidDefault creates a GetOsInstallsMoidDefault with default headers values
func NewGetOsInstallsMoidDefault(code int) *GetOsInstallsMoidDefault {
	return &GetOsInstallsMoidDefault{
		_statusCode: code,
	}
}

/*GetOsInstallsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetOsInstallsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get os installs moid default response
func (o *GetOsInstallsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetOsInstallsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /os/Installs/{moid}][%d] GetOsInstallsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetOsInstallsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOsInstallsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
