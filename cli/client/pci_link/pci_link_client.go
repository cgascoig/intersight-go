// Code generated by go-swagger; DO NOT EDIT.

package pci_link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new pci link API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for pci link API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetPciLinks gets a list of pci link instances
*/
func (a *Client) GetPciLinks(params *GetPciLinksParams) (*GetPciLinksOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPciLinksParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPciLinks",
		Method:             "GET",
		PathPattern:        "/pci/Links",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPciLinksReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPciLinksOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetPciLinksDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetPciLinksMoid gets a specific instance of pci link
*/
func (a *Client) GetPciLinksMoid(params *GetPciLinksMoidParams) (*GetPciLinksMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPciLinksMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetPciLinksMoid",
		Method:             "GET",
		PathPattern:        "/pci/Links/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPciLinksMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPciLinksMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetPciLinksMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchPciLinksMoid updates an instance of pci link
*/
func (a *Client) PatchPciLinksMoid(params *PatchPciLinksMoidParams) (*PatchPciLinksMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchPciLinksMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchPciLinksMoid",
		Method:             "PATCH",
		PathPattern:        "/pci/Links/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchPciLinksMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchPciLinksMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchPciLinksMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostPciLinksMoid updates an instance of pci link
*/
func (a *Client) PostPciLinksMoid(params *PostPciLinksMoidParams) (*PostPciLinksMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostPciLinksMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostPciLinksMoid",
		Method:             "POST",
		PathPattern:        "/pci/Links/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostPciLinksMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostPciLinksMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostPciLinksMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
