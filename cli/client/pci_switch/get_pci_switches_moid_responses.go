// Code generated by go-swagger; DO NOT EDIT.

package pci_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetPciSwitchesMoidReader is a Reader for the GetPciSwitchesMoid structure.
type GetPciSwitchesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPciSwitchesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPciSwitchesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPciSwitchesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPciSwitchesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPciSwitchesMoidOK creates a GetPciSwitchesMoidOK with default headers values
func NewGetPciSwitchesMoidOK() *GetPciSwitchesMoidOK {
	return &GetPciSwitchesMoidOK{}
}

/*GetPciSwitchesMoidOK handles this case with default header values.

An instance of pciSwitch
*/
type GetPciSwitchesMoidOK struct {
	Payload *models.PciSwitch
}

func (o *GetPciSwitchesMoidOK) Error() string {
	return fmt.Sprintf("[GET /pci/Switches/{moid}][%d] getPciSwitchesMoidOK  %+v", 200, o.Payload)
}

func (o *GetPciSwitchesMoidOK) GetPayload() *models.PciSwitch {
	return o.Payload
}

func (o *GetPciSwitchesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PciSwitch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPciSwitchesMoidNotFound creates a GetPciSwitchesMoidNotFound with default headers values
func NewGetPciSwitchesMoidNotFound() *GetPciSwitchesMoidNotFound {
	return &GetPciSwitchesMoidNotFound{}
}

/*GetPciSwitchesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetPciSwitchesMoidNotFound struct {
}

func (o *GetPciSwitchesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /pci/Switches/{moid}][%d] getPciSwitchesMoidNotFound ", 404)
}

func (o *GetPciSwitchesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPciSwitchesMoidDefault creates a GetPciSwitchesMoidDefault with default headers values
func NewGetPciSwitchesMoidDefault(code int) *GetPciSwitchesMoidDefault {
	return &GetPciSwitchesMoidDefault{
		_statusCode: code,
	}
}

/*GetPciSwitchesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetPciSwitchesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get pci switches moid default response
func (o *GetPciSwitchesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetPciSwitchesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /pci/Switches/{moid}][%d] GetPciSwitchesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetPciSwitchesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPciSwitchesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
