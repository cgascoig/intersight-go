// Code generated by go-swagger; DO NOT EDIT.

package resource_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetResourceGroupsMoidReader is a Reader for the GetResourceGroupsMoid structure.
type GetResourceGroupsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetResourceGroupsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetResourceGroupsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetResourceGroupsMoidOK creates a GetResourceGroupsMoidOK with default headers values
func NewGetResourceGroupsMoidOK() *GetResourceGroupsMoidOK {
	return &GetResourceGroupsMoidOK{}
}

/*GetResourceGroupsMoidOK handles this case with default header values.

An instance of resourceGroup
*/
type GetResourceGroupsMoidOK struct {
	Payload *models.ResourceGroup
}

func (o *GetResourceGroupsMoidOK) Error() string {
	return fmt.Sprintf("[GET /resource/Groups/{moid}][%d] getResourceGroupsMoidOK  %+v", 200, o.Payload)
}

func (o *GetResourceGroupsMoidOK) GetPayload() *models.ResourceGroup {
	return o.Payload
}

func (o *GetResourceGroupsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsMoidNotFound creates a GetResourceGroupsMoidNotFound with default headers values
func NewGetResourceGroupsMoidNotFound() *GetResourceGroupsMoidNotFound {
	return &GetResourceGroupsMoidNotFound{}
}

/*GetResourceGroupsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetResourceGroupsMoidNotFound struct {
}

func (o *GetResourceGroupsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /resource/Groups/{moid}][%d] getResourceGroupsMoidNotFound ", 404)
}

func (o *GetResourceGroupsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceGroupsMoidDefault creates a GetResourceGroupsMoidDefault with default headers values
func NewGetResourceGroupsMoidDefault(code int) *GetResourceGroupsMoidDefault {
	return &GetResourceGroupsMoidDefault{
		_statusCode: code,
	}
}

/*GetResourceGroupsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetResourceGroupsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get resource groups moid default response
func (o *GetResourceGroupsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetResourceGroupsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /resource/Groups/{moid}][%d] GetResourceGroupsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetResourceGroupsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceGroupsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
