// Code generated by go-swagger; DO NOT EDIT.

package resource_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new resource group API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for resource group API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
DeleteResourceGroupsMoid deletes an instance of resource group
*/
func (a *Client) DeleteResourceGroupsMoid(params *DeleteResourceGroupsMoidParams) (*DeleteResourceGroupsMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteResourceGroupsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteResourceGroupsMoid",
		Method:             "DELETE",
		PathPattern:        "/resource/Groups/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteResourceGroupsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteResourceGroupsMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*DeleteResourceGroupsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetResourceGroups gets a list of resource group instances
*/
func (a *Client) GetResourceGroups(params *GetResourceGroupsParams) (*GetResourceGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetResourceGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetResourceGroups",
		Method:             "GET",
		PathPattern:        "/resource/Groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetResourceGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetResourceGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetResourceGroupsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetResourceGroupsMoid gets a specific instance of resource group
*/
func (a *Client) GetResourceGroupsMoid(params *GetResourceGroupsMoidParams) (*GetResourceGroupsMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetResourceGroupsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetResourceGroupsMoid",
		Method:             "GET",
		PathPattern:        "/resource/Groups/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetResourceGroupsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetResourceGroupsMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetResourceGroupsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchResourceGroupsMoid updates an instance of resource group
*/
func (a *Client) PatchResourceGroupsMoid(params *PatchResourceGroupsMoidParams) (*PatchResourceGroupsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchResourceGroupsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchResourceGroupsMoid",
		Method:             "PATCH",
		PathPattern:        "/resource/Groups/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchResourceGroupsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchResourceGroupsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchResourceGroupsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostResourceGroups creates an instance of resource group
*/
func (a *Client) PostResourceGroups(params *PostResourceGroupsParams) (*PostResourceGroupsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostResourceGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostResourceGroups",
		Method:             "POST",
		PathPattern:        "/resource/Groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostResourceGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostResourceGroupsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostResourceGroupsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostResourceGroupsMoid updates an instance of resource group
*/
func (a *Client) PostResourceGroupsMoid(params *PostResourceGroupsMoidParams) (*PostResourceGroupsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostResourceGroupsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostResourceGroupsMoid",
		Method:             "POST",
		PathPattern:        "/resource/Groups/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostResourceGroupsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostResourceGroupsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostResourceGroupsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
