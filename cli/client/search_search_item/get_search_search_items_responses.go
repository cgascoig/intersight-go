// Code generated by go-swagger; DO NOT EDIT.

package search_search_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSearchSearchItemsReader is a Reader for the GetSearchSearchItems structure.
type GetSearchSearchItemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchSearchItemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchSearchItemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSearchSearchItemsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSearchSearchItemsOK creates a GetSearchSearchItemsOK with default headers values
func NewGetSearchSearchItemsOK() *GetSearchSearchItemsOK {
	return &GetSearchSearchItemsOK{}
}

/*GetSearchSearchItemsOK handles this case with default header values.

List of searchSearchItems for the given filter criteria
*/
type GetSearchSearchItemsOK struct {
	Payload *models.SearchSearchItemList
}

func (o *GetSearchSearchItemsOK) Error() string {
	return fmt.Sprintf("[GET /search/SearchItems][%d] getSearchSearchItemsOK  %+v", 200, o.Payload)
}

func (o *GetSearchSearchItemsOK) GetPayload() *models.SearchSearchItemList {
	return o.Payload
}

func (o *GetSearchSearchItemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchSearchItemList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchSearchItemsDefault creates a GetSearchSearchItemsDefault with default headers values
func NewGetSearchSearchItemsDefault(code int) *GetSearchSearchItemsDefault {
	return &GetSearchSearchItemsDefault{
		_statusCode: code,
	}
}

/*GetSearchSearchItemsDefault handles this case with default header values.

Unexpected error
*/
type GetSearchSearchItemsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get search search items default response
func (o *GetSearchSearchItemsDefault) Code() int {
	return o._statusCode
}

func (o *GetSearchSearchItemsDefault) Error() string {
	return fmt.Sprintf("[GET /search/SearchItems][%d] GetSearchSearchItems default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchSearchItemsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSearchSearchItemsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
