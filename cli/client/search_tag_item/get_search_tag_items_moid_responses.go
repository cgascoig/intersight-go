// Code generated by go-swagger; DO NOT EDIT.

package search_tag_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSearchTagItemsMoidReader is a Reader for the GetSearchTagItemsMoid structure.
type GetSearchTagItemsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchTagItemsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchTagItemsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSearchTagItemsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSearchTagItemsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSearchTagItemsMoidOK creates a GetSearchTagItemsMoidOK with default headers values
func NewGetSearchTagItemsMoidOK() *GetSearchTagItemsMoidOK {
	return &GetSearchTagItemsMoidOK{}
}

/*GetSearchTagItemsMoidOK handles this case with default header values.

An instance of searchTagItem
*/
type GetSearchTagItemsMoidOK struct {
	Payload *models.SearchTagItem
}

func (o *GetSearchTagItemsMoidOK) Error() string {
	return fmt.Sprintf("[GET /search/TagItems/{moid}][%d] getSearchTagItemsMoidOK  %+v", 200, o.Payload)
}

func (o *GetSearchTagItemsMoidOK) GetPayload() *models.SearchTagItem {
	return o.Payload
}

func (o *GetSearchTagItemsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchTagItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchTagItemsMoidNotFound creates a GetSearchTagItemsMoidNotFound with default headers values
func NewGetSearchTagItemsMoidNotFound() *GetSearchTagItemsMoidNotFound {
	return &GetSearchTagItemsMoidNotFound{}
}

/*GetSearchTagItemsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetSearchTagItemsMoidNotFound struct {
}

func (o *GetSearchTagItemsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /search/TagItems/{moid}][%d] getSearchTagItemsMoidNotFound ", 404)
}

func (o *GetSearchTagItemsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSearchTagItemsMoidDefault creates a GetSearchTagItemsMoidDefault with default headers values
func NewGetSearchTagItemsMoidDefault(code int) *GetSearchTagItemsMoidDefault {
	return &GetSearchTagItemsMoidDefault{
		_statusCode: code,
	}
}

/*GetSearchTagItemsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetSearchTagItemsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get search tag items moid default response
func (o *GetSearchTagItemsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetSearchTagItemsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /search/TagItems/{moid}][%d] GetSearchTagItemsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetSearchTagItemsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSearchTagItemsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
