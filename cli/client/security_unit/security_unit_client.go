// Code generated by go-swagger; DO NOT EDIT.

package security_unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new security unit API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for security unit API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetSecurityUnits gets a list of security unit instances
*/
func (a *Client) GetSecurityUnits(params *GetSecurityUnitsParams) (*GetSecurityUnitsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSecurityUnitsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetSecurityUnits",
		Method:             "GET",
		PathPattern:        "/security/Units",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetSecurityUnitsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSecurityUnitsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetSecurityUnitsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetSecurityUnitsMoid gets a specific instance of security unit
*/
func (a *Client) GetSecurityUnitsMoid(params *GetSecurityUnitsMoidParams) (*GetSecurityUnitsMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSecurityUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetSecurityUnitsMoid",
		Method:             "GET",
		PathPattern:        "/security/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetSecurityUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSecurityUnitsMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetSecurityUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchSecurityUnitsMoid updates an instance of security unit
*/
func (a *Client) PatchSecurityUnitsMoid(params *PatchSecurityUnitsMoidParams) (*PatchSecurityUnitsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchSecurityUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchSecurityUnitsMoid",
		Method:             "PATCH",
		PathPattern:        "/security/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchSecurityUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchSecurityUnitsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchSecurityUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostSecurityUnitsMoid updates an instance of security unit
*/
func (a *Client) PostSecurityUnitsMoid(params *PostSecurityUnitsMoidParams) (*PostSecurityUnitsMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostSecurityUnitsMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostSecurityUnitsMoid",
		Method:             "POST",
		PathPattern:        "/security/Units/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostSecurityUnitsMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostSecurityUnitsMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostSecurityUnitsMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
