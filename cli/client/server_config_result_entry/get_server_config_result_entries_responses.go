// Code generated by go-swagger; DO NOT EDIT.

package server_config_result_entry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetServerConfigResultEntriesReader is a Reader for the GetServerConfigResultEntries structure.
type GetServerConfigResultEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerConfigResultEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerConfigResultEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetServerConfigResultEntriesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServerConfigResultEntriesOK creates a GetServerConfigResultEntriesOK with default headers values
func NewGetServerConfigResultEntriesOK() *GetServerConfigResultEntriesOK {
	return &GetServerConfigResultEntriesOK{}
}

/*GetServerConfigResultEntriesOK handles this case with default header values.

List of serverConfigResultEntries for the given filter criteria
*/
type GetServerConfigResultEntriesOK struct {
	Payload *models.ServerConfigResultEntryList
}

func (o *GetServerConfigResultEntriesOK) Error() string {
	return fmt.Sprintf("[GET /server/ConfigResultEntries][%d] getServerConfigResultEntriesOK  %+v", 200, o.Payload)
}

func (o *GetServerConfigResultEntriesOK) GetPayload() *models.ServerConfigResultEntryList {
	return o.Payload
}

func (o *GetServerConfigResultEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerConfigResultEntryList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerConfigResultEntriesDefault creates a GetServerConfigResultEntriesDefault with default headers values
func NewGetServerConfigResultEntriesDefault(code int) *GetServerConfigResultEntriesDefault {
	return &GetServerConfigResultEntriesDefault{
		_statusCode: code,
	}
}

/*GetServerConfigResultEntriesDefault handles this case with default header values.

Unexpected error
*/
type GetServerConfigResultEntriesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get server config result entries default response
func (o *GetServerConfigResultEntriesDefault) Code() int {
	return o._statusCode
}

func (o *GetServerConfigResultEntriesDefault) Error() string {
	return fmt.Sprintf("[GET /server/ConfigResultEntries][%d] GetServerConfigResultEntries default  %+v", o._statusCode, o.Payload)
}

func (o *GetServerConfigResultEntriesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerConfigResultEntriesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
