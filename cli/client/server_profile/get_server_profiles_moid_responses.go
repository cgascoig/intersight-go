// Code generated by go-swagger; DO NOT EDIT.

package server_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetServerProfilesMoidReader is a Reader for the GetServerProfilesMoid structure.
type GetServerProfilesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerProfilesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerProfilesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetServerProfilesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetServerProfilesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServerProfilesMoidOK creates a GetServerProfilesMoidOK with default headers values
func NewGetServerProfilesMoidOK() *GetServerProfilesMoidOK {
	return &GetServerProfilesMoidOK{}
}

/*GetServerProfilesMoidOK handles this case with default header values.

An instance of serverProfile
*/
type GetServerProfilesMoidOK struct {
	Payload *models.ServerProfile
}

func (o *GetServerProfilesMoidOK) Error() string {
	return fmt.Sprintf("[GET /server/Profiles/{moid}][%d] getServerProfilesMoidOK  %+v", 200, o.Payload)
}

func (o *GetServerProfilesMoidOK) GetPayload() *models.ServerProfile {
	return o.Payload
}

func (o *GetServerProfilesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerProfilesMoidNotFound creates a GetServerProfilesMoidNotFound with default headers values
func NewGetServerProfilesMoidNotFound() *GetServerProfilesMoidNotFound {
	return &GetServerProfilesMoidNotFound{}
}

/*GetServerProfilesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetServerProfilesMoidNotFound struct {
}

func (o *GetServerProfilesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /server/Profiles/{moid}][%d] getServerProfilesMoidNotFound ", 404)
}

func (o *GetServerProfilesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServerProfilesMoidDefault creates a GetServerProfilesMoidDefault with default headers values
func NewGetServerProfilesMoidDefault(code int) *GetServerProfilesMoidDefault {
	return &GetServerProfilesMoidDefault{
		_statusCode: code,
	}
}

/*GetServerProfilesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetServerProfilesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get server profiles moid default response
func (o *GetServerProfilesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetServerProfilesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /server/Profiles/{moid}][%d] GetServerProfilesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetServerProfilesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerProfilesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
