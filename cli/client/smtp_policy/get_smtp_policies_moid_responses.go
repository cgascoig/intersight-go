// Code generated by go-swagger; DO NOT EDIT.

package smtp_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSMTPPoliciesMoidReader is a Reader for the GetSMTPPoliciesMoid structure.
type GetSMTPPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSMTPPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSMTPPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSMTPPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSMTPPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSMTPPoliciesMoidOK creates a GetSMTPPoliciesMoidOK with default headers values
func NewGetSMTPPoliciesMoidOK() *GetSMTPPoliciesMoidOK {
	return &GetSMTPPoliciesMoidOK{}
}

/*GetSMTPPoliciesMoidOK handles this case with default header values.

An instance of smtpPolicy
*/
type GetSMTPPoliciesMoidOK struct {
	Payload *models.SMTPPolicy
}

func (o *GetSMTPPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /smtp/Policies/{moid}][%d] getSmtpPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetSMTPPoliciesMoidOK) GetPayload() *models.SMTPPolicy {
	return o.Payload
}

func (o *GetSMTPPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SMTPPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPPoliciesMoidNotFound creates a GetSMTPPoliciesMoidNotFound with default headers values
func NewGetSMTPPoliciesMoidNotFound() *GetSMTPPoliciesMoidNotFound {
	return &GetSMTPPoliciesMoidNotFound{}
}

/*GetSMTPPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetSMTPPoliciesMoidNotFound struct {
}

func (o *GetSMTPPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /smtp/Policies/{moid}][%d] getSmtpPoliciesMoidNotFound ", 404)
}

func (o *GetSMTPPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSMTPPoliciesMoidDefault creates a GetSMTPPoliciesMoidDefault with default headers values
func NewGetSMTPPoliciesMoidDefault(code int) *GetSMTPPoliciesMoidDefault {
	return &GetSMTPPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetSMTPPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetSMTPPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get SMTP policies moid default response
func (o *GetSMTPPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetSMTPPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /smtp/Policies/{moid}][%d] GetSMTPPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetSMTPPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSMTPPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
