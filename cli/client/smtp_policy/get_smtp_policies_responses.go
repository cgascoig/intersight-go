// Code generated by go-swagger; DO NOT EDIT.

package smtp_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSMTPPoliciesReader is a Reader for the GetSMTPPolicies structure.
type GetSMTPPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSMTPPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSMTPPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSMTPPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSMTPPoliciesOK creates a GetSMTPPoliciesOK with default headers values
func NewGetSMTPPoliciesOK() *GetSMTPPoliciesOK {
	return &GetSMTPPoliciesOK{}
}

/*GetSMTPPoliciesOK handles this case with default header values.

List of smtpPolicies for the given filter criteria
*/
type GetSMTPPoliciesOK struct {
	Payload *models.SMTPPolicyList
}

func (o *GetSMTPPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /smtp/Policies][%d] getSmtpPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetSMTPPoliciesOK) GetPayload() *models.SMTPPolicyList {
	return o.Payload
}

func (o *GetSMTPPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SMTPPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSMTPPoliciesDefault creates a GetSMTPPoliciesDefault with default headers values
func NewGetSMTPPoliciesDefault(code int) *GetSMTPPoliciesDefault {
	return &GetSMTPPoliciesDefault{
		_statusCode: code,
	}
}

/*GetSMTPPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetSMTPPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get SMTP policies default response
func (o *GetSMTPPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetSMTPPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /smtp/Policies][%d] GetSMTPPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetSMTPPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSMTPPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
