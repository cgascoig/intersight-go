// Code generated by go-swagger; DO NOT EDIT.

package snmp_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSnmpPoliciesMoidReader is a Reader for the GetSnmpPoliciesMoid structure.
type GetSnmpPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnmpPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnmpPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSnmpPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSnmpPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSnmpPoliciesMoidOK creates a GetSnmpPoliciesMoidOK with default headers values
func NewGetSnmpPoliciesMoidOK() *GetSnmpPoliciesMoidOK {
	return &GetSnmpPoliciesMoidOK{}
}

/*GetSnmpPoliciesMoidOK handles this case with default header values.

An instance of snmpPolicy
*/
type GetSnmpPoliciesMoidOK struct {
	Payload *models.SnmpPolicy
}

func (o *GetSnmpPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /snmp/Policies/{moid}][%d] getSnmpPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetSnmpPoliciesMoidOK) GetPayload() *models.SnmpPolicy {
	return o.Payload
}

func (o *GetSnmpPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SnmpPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnmpPoliciesMoidNotFound creates a GetSnmpPoliciesMoidNotFound with default headers values
func NewGetSnmpPoliciesMoidNotFound() *GetSnmpPoliciesMoidNotFound {
	return &GetSnmpPoliciesMoidNotFound{}
}

/*GetSnmpPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetSnmpPoliciesMoidNotFound struct {
}

func (o *GetSnmpPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /snmp/Policies/{moid}][%d] getSnmpPoliciesMoidNotFound ", 404)
}

func (o *GetSnmpPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSnmpPoliciesMoidDefault creates a GetSnmpPoliciesMoidDefault with default headers values
func NewGetSnmpPoliciesMoidDefault(code int) *GetSnmpPoliciesMoidDefault {
	return &GetSnmpPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetSnmpPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetSnmpPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get snmp policies moid default response
func (o *GetSnmpPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetSnmpPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /snmp/Policies/{moid}][%d] GetSnmpPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetSnmpPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnmpPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
