// Code generated by go-swagger; DO NOT EDIT.

package software_hyperflex_distributable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSoftwareHyperflexDistributablesMoidReader is a Reader for the GetSoftwareHyperflexDistributablesMoid structure.
type GetSoftwareHyperflexDistributablesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwareHyperflexDistributablesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSoftwareHyperflexDistributablesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSoftwareHyperflexDistributablesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSoftwareHyperflexDistributablesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSoftwareHyperflexDistributablesMoidOK creates a GetSoftwareHyperflexDistributablesMoidOK with default headers values
func NewGetSoftwareHyperflexDistributablesMoidOK() *GetSoftwareHyperflexDistributablesMoidOK {
	return &GetSoftwareHyperflexDistributablesMoidOK{}
}

/*GetSoftwareHyperflexDistributablesMoidOK handles this case with default header values.

An instance of softwareHyperflexDistributable
*/
type GetSoftwareHyperflexDistributablesMoidOK struct {
	Payload *models.SoftwareHyperflexDistributable
}

func (o *GetSoftwareHyperflexDistributablesMoidOK) Error() string {
	return fmt.Sprintf("[GET /software/HyperflexDistributables/{moid}][%d] getSoftwareHyperflexDistributablesMoidOK  %+v", 200, o.Payload)
}

func (o *GetSoftwareHyperflexDistributablesMoidOK) GetPayload() *models.SoftwareHyperflexDistributable {
	return o.Payload
}

func (o *GetSoftwareHyperflexDistributablesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SoftwareHyperflexDistributable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwareHyperflexDistributablesMoidNotFound creates a GetSoftwareHyperflexDistributablesMoidNotFound with default headers values
func NewGetSoftwareHyperflexDistributablesMoidNotFound() *GetSoftwareHyperflexDistributablesMoidNotFound {
	return &GetSoftwareHyperflexDistributablesMoidNotFound{}
}

/*GetSoftwareHyperflexDistributablesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetSoftwareHyperflexDistributablesMoidNotFound struct {
}

func (o *GetSoftwareHyperflexDistributablesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /software/HyperflexDistributables/{moid}][%d] getSoftwareHyperflexDistributablesMoidNotFound ", 404)
}

func (o *GetSoftwareHyperflexDistributablesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareHyperflexDistributablesMoidDefault creates a GetSoftwareHyperflexDistributablesMoidDefault with default headers values
func NewGetSoftwareHyperflexDistributablesMoidDefault(code int) *GetSoftwareHyperflexDistributablesMoidDefault {
	return &GetSoftwareHyperflexDistributablesMoidDefault{
		_statusCode: code,
	}
}

/*GetSoftwareHyperflexDistributablesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetSoftwareHyperflexDistributablesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get software hyperflex distributables moid default response
func (o *GetSoftwareHyperflexDistributablesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetSoftwareHyperflexDistributablesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /software/HyperflexDistributables/{moid}][%d] GetSoftwareHyperflexDistributablesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetSoftwareHyperflexDistributablesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSoftwareHyperflexDistributablesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
