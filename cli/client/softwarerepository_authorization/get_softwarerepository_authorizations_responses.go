// Code generated by go-swagger; DO NOT EDIT.

package softwarerepository_authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSoftwarerepositoryAuthorizationsReader is a Reader for the GetSoftwarerepositoryAuthorizations structure.
type GetSoftwarerepositoryAuthorizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwarerepositoryAuthorizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSoftwarerepositoryAuthorizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSoftwarerepositoryAuthorizationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSoftwarerepositoryAuthorizationsOK creates a GetSoftwarerepositoryAuthorizationsOK with default headers values
func NewGetSoftwarerepositoryAuthorizationsOK() *GetSoftwarerepositoryAuthorizationsOK {
	return &GetSoftwarerepositoryAuthorizationsOK{}
}

/*GetSoftwarerepositoryAuthorizationsOK handles this case with default header values.

List of softwarerepositoryAuthorizations for the given filter criteria
*/
type GetSoftwarerepositoryAuthorizationsOK struct {
	Payload *models.SoftwarerepositoryAuthorizationList
}

func (o *GetSoftwarerepositoryAuthorizationsOK) Error() string {
	return fmt.Sprintf("[GET /softwarerepository/Authorizations][%d] getSoftwarerepositoryAuthorizationsOK  %+v", 200, o.Payload)
}

func (o *GetSoftwarerepositoryAuthorizationsOK) GetPayload() *models.SoftwarerepositoryAuthorizationList {
	return o.Payload
}

func (o *GetSoftwarerepositoryAuthorizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SoftwarerepositoryAuthorizationList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwarerepositoryAuthorizationsDefault creates a GetSoftwarerepositoryAuthorizationsDefault with default headers values
func NewGetSoftwarerepositoryAuthorizationsDefault(code int) *GetSoftwarerepositoryAuthorizationsDefault {
	return &GetSoftwarerepositoryAuthorizationsDefault{
		_statusCode: code,
	}
}

/*GetSoftwarerepositoryAuthorizationsDefault handles this case with default header values.

Unexpected error
*/
type GetSoftwarerepositoryAuthorizationsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get softwarerepository authorizations default response
func (o *GetSoftwarerepositoryAuthorizationsDefault) Code() int {
	return o._statusCode
}

func (o *GetSoftwarerepositoryAuthorizationsDefault) Error() string {
	return fmt.Sprintf("[GET /softwarerepository/Authorizations][%d] GetSoftwarerepositoryAuthorizations default  %+v", o._statusCode, o.Payload)
}

func (o *GetSoftwarerepositoryAuthorizationsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSoftwarerepositoryAuthorizationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
