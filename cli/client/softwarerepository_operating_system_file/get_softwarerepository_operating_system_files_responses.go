// Code generated by go-swagger; DO NOT EDIT.

package softwarerepository_operating_system_file

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSoftwarerepositoryOperatingSystemFilesReader is a Reader for the GetSoftwarerepositoryOperatingSystemFiles structure.
type GetSoftwarerepositoryOperatingSystemFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwarerepositoryOperatingSystemFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSoftwarerepositoryOperatingSystemFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSoftwarerepositoryOperatingSystemFilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSoftwarerepositoryOperatingSystemFilesOK creates a GetSoftwarerepositoryOperatingSystemFilesOK with default headers values
func NewGetSoftwarerepositoryOperatingSystemFilesOK() *GetSoftwarerepositoryOperatingSystemFilesOK {
	return &GetSoftwarerepositoryOperatingSystemFilesOK{}
}

/*GetSoftwarerepositoryOperatingSystemFilesOK handles this case with default header values.

List of softwarerepositoryOperatingSystemFiles for the given filter criteria
*/
type GetSoftwarerepositoryOperatingSystemFilesOK struct {
	Payload *models.SoftwarerepositoryOperatingSystemFileList
}

func (o *GetSoftwarerepositoryOperatingSystemFilesOK) Error() string {
	return fmt.Sprintf("[GET /softwarerepository/OperatingSystemFiles][%d] getSoftwarerepositoryOperatingSystemFilesOK  %+v", 200, o.Payload)
}

func (o *GetSoftwarerepositoryOperatingSystemFilesOK) GetPayload() *models.SoftwarerepositoryOperatingSystemFileList {
	return o.Payload
}

func (o *GetSoftwarerepositoryOperatingSystemFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SoftwarerepositoryOperatingSystemFileList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwarerepositoryOperatingSystemFilesDefault creates a GetSoftwarerepositoryOperatingSystemFilesDefault with default headers values
func NewGetSoftwarerepositoryOperatingSystemFilesDefault(code int) *GetSoftwarerepositoryOperatingSystemFilesDefault {
	return &GetSoftwarerepositoryOperatingSystemFilesDefault{
		_statusCode: code,
	}
}

/*GetSoftwarerepositoryOperatingSystemFilesDefault handles this case with default header values.

Unexpected error
*/
type GetSoftwarerepositoryOperatingSystemFilesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get softwarerepository operating system files default response
func (o *GetSoftwarerepositoryOperatingSystemFilesDefault) Code() int {
	return o._statusCode
}

func (o *GetSoftwarerepositoryOperatingSystemFilesDefault) Error() string {
	return fmt.Sprintf("[GET /softwarerepository/OperatingSystemFiles][%d] GetSoftwarerepositoryOperatingSystemFiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetSoftwarerepositoryOperatingSystemFilesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSoftwarerepositoryOperatingSystemFilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
