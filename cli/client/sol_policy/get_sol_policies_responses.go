// Code generated by go-swagger; DO NOT EDIT.

package sol_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSolPoliciesReader is a Reader for the GetSolPolicies structure.
type GetSolPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSolPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSolPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSolPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSolPoliciesOK creates a GetSolPoliciesOK with default headers values
func NewGetSolPoliciesOK() *GetSolPoliciesOK {
	return &GetSolPoliciesOK{}
}

/*GetSolPoliciesOK handles this case with default header values.

List of solPolicies for the given filter criteria
*/
type GetSolPoliciesOK struct {
	Payload *models.SolPolicyList
}

func (o *GetSolPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /sol/Policies][%d] getSolPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetSolPoliciesOK) GetPayload() *models.SolPolicyList {
	return o.Payload
}

func (o *GetSolPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SolPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolPoliciesDefault creates a GetSolPoliciesDefault with default headers values
func NewGetSolPoliciesDefault(code int) *GetSolPoliciesDefault {
	return &GetSolPoliciesDefault{
		_statusCode: code,
	}
}

/*GetSolPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetSolPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get sol policies default response
func (o *GetSolPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetSolPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /sol/Policies][%d] GetSolPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetSolPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSolPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
