// Code generated by go-swagger; DO NOT EDIT.

package ssh_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSSHPoliciesMoidReader is a Reader for the GetSSHPoliciesMoid structure.
type GetSSHPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSSHPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSSHPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSSHPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSSHPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSSHPoliciesMoidOK creates a GetSSHPoliciesMoidOK with default headers values
func NewGetSSHPoliciesMoidOK() *GetSSHPoliciesMoidOK {
	return &GetSSHPoliciesMoidOK{}
}

/*GetSSHPoliciesMoidOK handles this case with default header values.

An instance of sshPolicy
*/
type GetSSHPoliciesMoidOK struct {
	Payload *models.SSHPolicy
}

func (o *GetSSHPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /ssh/Policies/{moid}][%d] getSshPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetSSHPoliciesMoidOK) GetPayload() *models.SSHPolicy {
	return o.Payload
}

func (o *GetSSHPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SSHPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSSHPoliciesMoidNotFound creates a GetSSHPoliciesMoidNotFound with default headers values
func NewGetSSHPoliciesMoidNotFound() *GetSSHPoliciesMoidNotFound {
	return &GetSSHPoliciesMoidNotFound{}
}

/*GetSSHPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetSSHPoliciesMoidNotFound struct {
}

func (o *GetSSHPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /ssh/Policies/{moid}][%d] getSshPoliciesMoidNotFound ", 404)
}

func (o *GetSSHPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSSHPoliciesMoidDefault creates a GetSSHPoliciesMoidDefault with default headers values
func NewGetSSHPoliciesMoidDefault(code int) *GetSSHPoliciesMoidDefault {
	return &GetSSHPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetSSHPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetSSHPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get SSH policies moid default response
func (o *GetSSHPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetSSHPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /ssh/Policies/{moid}][%d] GetSSHPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetSSHPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSSHPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
