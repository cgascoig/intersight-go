// Code generated by go-swagger; DO NOT EDIT.

package ssh_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetSSHPoliciesReader is a Reader for the GetSSHPolicies structure.
type GetSSHPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSSHPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSSHPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSSHPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSSHPoliciesOK creates a GetSSHPoliciesOK with default headers values
func NewGetSSHPoliciesOK() *GetSSHPoliciesOK {
	return &GetSSHPoliciesOK{}
}

/*GetSSHPoliciesOK handles this case with default header values.

List of sshPolicies for the given filter criteria
*/
type GetSSHPoliciesOK struct {
	Payload *models.SSHPolicyList
}

func (o *GetSSHPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /ssh/Policies][%d] getSshPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetSSHPoliciesOK) GetPayload() *models.SSHPolicyList {
	return o.Payload
}

func (o *GetSSHPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SSHPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSSHPoliciesDefault creates a GetSSHPoliciesDefault with default headers values
func NewGetSSHPoliciesDefault(code int) *GetSSHPoliciesDefault {
	return &GetSSHPoliciesDefault{
		_statusCode: code,
	}
}

/*GetSSHPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetSSHPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get SSH policies default response
func (o *GetSSHPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetSSHPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /ssh/Policies][%d] GetSSHPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetSSHPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSSHPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
