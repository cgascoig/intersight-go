// Code generated by go-swagger; DO NOT EDIT.

package storage_disk_group_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// NewPostStorageDiskGroupPoliciesParams creates a new PostStorageDiskGroupPoliciesParams object
// with the default values initialized.
func NewPostStorageDiskGroupPoliciesParams() *PostStorageDiskGroupPoliciesParams {
	var ()
	return &PostStorageDiskGroupPoliciesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostStorageDiskGroupPoliciesParamsWithTimeout creates a new PostStorageDiskGroupPoliciesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostStorageDiskGroupPoliciesParamsWithTimeout(timeout time.Duration) *PostStorageDiskGroupPoliciesParams {
	var ()
	return &PostStorageDiskGroupPoliciesParams{

		timeout: timeout,
	}
}

// NewPostStorageDiskGroupPoliciesParamsWithContext creates a new PostStorageDiskGroupPoliciesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostStorageDiskGroupPoliciesParamsWithContext(ctx context.Context) *PostStorageDiskGroupPoliciesParams {
	var ()
	return &PostStorageDiskGroupPoliciesParams{

		Context: ctx,
	}
}

// NewPostStorageDiskGroupPoliciesParamsWithHTTPClient creates a new PostStorageDiskGroupPoliciesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostStorageDiskGroupPoliciesParamsWithHTTPClient(client *http.Client) *PostStorageDiskGroupPoliciesParams {
	var ()
	return &PostStorageDiskGroupPoliciesParams{
		HTTPClient: client,
	}
}

/*PostStorageDiskGroupPoliciesParams contains all the parameters to send to the API endpoint
for the post storage disk group policies operation typically these are written to a http.Request
*/
type PostStorageDiskGroupPoliciesParams struct {

	/*Body
	  storageDiskGroupPolicy to add

	*/
	Body *models.StorageDiskGroupPolicy

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) WithTimeout(timeout time.Duration) *PostStorageDiskGroupPoliciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) WithContext(ctx context.Context) *PostStorageDiskGroupPoliciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) WithHTTPClient(client *http.Client) *PostStorageDiskGroupPoliciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) WithBody(body *models.StorageDiskGroupPolicy) *PostStorageDiskGroupPoliciesParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post storage disk group policies params
func (o *PostStorageDiskGroupPoliciesParams) SetBody(body *models.StorageDiskGroupPolicy) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *PostStorageDiskGroupPoliciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
