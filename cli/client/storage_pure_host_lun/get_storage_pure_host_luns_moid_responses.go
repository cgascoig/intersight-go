// Code generated by go-swagger; DO NOT EDIT.

package storage_pure_host_lun

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetStoragePureHostLunsMoidReader is a Reader for the GetStoragePureHostLunsMoid structure.
type GetStoragePureHostLunsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStoragePureHostLunsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStoragePureHostLunsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetStoragePureHostLunsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetStoragePureHostLunsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetStoragePureHostLunsMoidOK creates a GetStoragePureHostLunsMoidOK with default headers values
func NewGetStoragePureHostLunsMoidOK() *GetStoragePureHostLunsMoidOK {
	return &GetStoragePureHostLunsMoidOK{}
}

/*GetStoragePureHostLunsMoidOK handles this case with default header values.

An instance of storagePureHostLun
*/
type GetStoragePureHostLunsMoidOK struct {
	Payload *models.StoragePureHostLun
}

func (o *GetStoragePureHostLunsMoidOK) Error() string {
	return fmt.Sprintf("[GET /storage/PureHostLuns/{moid}][%d] getStoragePureHostLunsMoidOK  %+v", 200, o.Payload)
}

func (o *GetStoragePureHostLunsMoidOK) GetPayload() *models.StoragePureHostLun {
	return o.Payload
}

func (o *GetStoragePureHostLunsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoragePureHostLun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStoragePureHostLunsMoidNotFound creates a GetStoragePureHostLunsMoidNotFound with default headers values
func NewGetStoragePureHostLunsMoidNotFound() *GetStoragePureHostLunsMoidNotFound {
	return &GetStoragePureHostLunsMoidNotFound{}
}

/*GetStoragePureHostLunsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetStoragePureHostLunsMoidNotFound struct {
}

func (o *GetStoragePureHostLunsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /storage/PureHostLuns/{moid}][%d] getStoragePureHostLunsMoidNotFound ", 404)
}

func (o *GetStoragePureHostLunsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStoragePureHostLunsMoidDefault creates a GetStoragePureHostLunsMoidDefault with default headers values
func NewGetStoragePureHostLunsMoidDefault(code int) *GetStoragePureHostLunsMoidDefault {
	return &GetStoragePureHostLunsMoidDefault{
		_statusCode: code,
	}
}

/*GetStoragePureHostLunsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetStoragePureHostLunsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get storage pure host luns moid default response
func (o *GetStoragePureHostLunsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetStoragePureHostLunsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /storage/PureHostLuns/{moid}][%d] GetStoragePureHostLunsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoragePureHostLunsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetStoragePureHostLunsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
