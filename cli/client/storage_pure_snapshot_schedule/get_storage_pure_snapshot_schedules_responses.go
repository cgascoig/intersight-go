// Code generated by go-swagger; DO NOT EDIT.

package storage_pure_snapshot_schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetStoragePureSnapshotSchedulesReader is a Reader for the GetStoragePureSnapshotSchedules structure.
type GetStoragePureSnapshotSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStoragePureSnapshotSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStoragePureSnapshotSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetStoragePureSnapshotSchedulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetStoragePureSnapshotSchedulesOK creates a GetStoragePureSnapshotSchedulesOK with default headers values
func NewGetStoragePureSnapshotSchedulesOK() *GetStoragePureSnapshotSchedulesOK {
	return &GetStoragePureSnapshotSchedulesOK{}
}

/*GetStoragePureSnapshotSchedulesOK handles this case with default header values.

List of storagePureSnapshotSchedules for the given filter criteria
*/
type GetStoragePureSnapshotSchedulesOK struct {
	Payload *models.StoragePureSnapshotScheduleList
}

func (o *GetStoragePureSnapshotSchedulesOK) Error() string {
	return fmt.Sprintf("[GET /storage/PureSnapshotSchedules][%d] getStoragePureSnapshotSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetStoragePureSnapshotSchedulesOK) GetPayload() *models.StoragePureSnapshotScheduleList {
	return o.Payload
}

func (o *GetStoragePureSnapshotSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoragePureSnapshotScheduleList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStoragePureSnapshotSchedulesDefault creates a GetStoragePureSnapshotSchedulesDefault with default headers values
func NewGetStoragePureSnapshotSchedulesDefault(code int) *GetStoragePureSnapshotSchedulesDefault {
	return &GetStoragePureSnapshotSchedulesDefault{
		_statusCode: code,
	}
}

/*GetStoragePureSnapshotSchedulesDefault handles this case with default header values.

Unexpected error
*/
type GetStoragePureSnapshotSchedulesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get storage pure snapshot schedules default response
func (o *GetStoragePureSnapshotSchedulesDefault) Code() int {
	return o._statusCode
}

func (o *GetStoragePureSnapshotSchedulesDefault) Error() string {
	return fmt.Sprintf("[GET /storage/PureSnapshotSchedules][%d] GetStoragePureSnapshotSchedules default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoragePureSnapshotSchedulesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetStoragePureSnapshotSchedulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
