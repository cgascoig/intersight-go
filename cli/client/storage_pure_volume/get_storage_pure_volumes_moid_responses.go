// Code generated by go-swagger; DO NOT EDIT.

package storage_pure_volume

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetStoragePureVolumesMoidReader is a Reader for the GetStoragePureVolumesMoid structure.
type GetStoragePureVolumesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStoragePureVolumesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStoragePureVolumesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetStoragePureVolumesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetStoragePureVolumesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetStoragePureVolumesMoidOK creates a GetStoragePureVolumesMoidOK with default headers values
func NewGetStoragePureVolumesMoidOK() *GetStoragePureVolumesMoidOK {
	return &GetStoragePureVolumesMoidOK{}
}

/*GetStoragePureVolumesMoidOK handles this case with default header values.

An instance of storagePureVolume
*/
type GetStoragePureVolumesMoidOK struct {
	Payload *models.StoragePureVolume
}

func (o *GetStoragePureVolumesMoidOK) Error() string {
	return fmt.Sprintf("[GET /storage/PureVolumes/{moid}][%d] getStoragePureVolumesMoidOK  %+v", 200, o.Payload)
}

func (o *GetStoragePureVolumesMoidOK) GetPayload() *models.StoragePureVolume {
	return o.Payload
}

func (o *GetStoragePureVolumesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoragePureVolume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStoragePureVolumesMoidNotFound creates a GetStoragePureVolumesMoidNotFound with default headers values
func NewGetStoragePureVolumesMoidNotFound() *GetStoragePureVolumesMoidNotFound {
	return &GetStoragePureVolumesMoidNotFound{}
}

/*GetStoragePureVolumesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetStoragePureVolumesMoidNotFound struct {
}

func (o *GetStoragePureVolumesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /storage/PureVolumes/{moid}][%d] getStoragePureVolumesMoidNotFound ", 404)
}

func (o *GetStoragePureVolumesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStoragePureVolumesMoidDefault creates a GetStoragePureVolumesMoidDefault with default headers values
func NewGetStoragePureVolumesMoidDefault(code int) *GetStoragePureVolumesMoidDefault {
	return &GetStoragePureVolumesMoidDefault{
		_statusCode: code,
	}
}

/*GetStoragePureVolumesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetStoragePureVolumesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get storage pure volumes moid default response
func (o *GetStoragePureVolumesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetStoragePureVolumesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /storage/PureVolumes/{moid}][%d] GetStoragePureVolumesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoragePureVolumesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetStoragePureVolumesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
