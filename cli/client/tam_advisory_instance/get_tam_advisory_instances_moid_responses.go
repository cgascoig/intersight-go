// Code generated by go-swagger; DO NOT EDIT.

package tam_advisory_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetTamAdvisoryInstancesMoidReader is a Reader for the GetTamAdvisoryInstancesMoid structure.
type GetTamAdvisoryInstancesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTamAdvisoryInstancesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTamAdvisoryInstancesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTamAdvisoryInstancesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTamAdvisoryInstancesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTamAdvisoryInstancesMoidOK creates a GetTamAdvisoryInstancesMoidOK with default headers values
func NewGetTamAdvisoryInstancesMoidOK() *GetTamAdvisoryInstancesMoidOK {
	return &GetTamAdvisoryInstancesMoidOK{}
}

/*GetTamAdvisoryInstancesMoidOK handles this case with default header values.

An instance of tamAdvisoryInstance
*/
type GetTamAdvisoryInstancesMoidOK struct {
	Payload *models.TamAdvisoryInstance
}

func (o *GetTamAdvisoryInstancesMoidOK) Error() string {
	return fmt.Sprintf("[GET /tam/AdvisoryInstances/{moid}][%d] getTamAdvisoryInstancesMoidOK  %+v", 200, o.Payload)
}

func (o *GetTamAdvisoryInstancesMoidOK) GetPayload() *models.TamAdvisoryInstance {
	return o.Payload
}

func (o *GetTamAdvisoryInstancesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TamAdvisoryInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTamAdvisoryInstancesMoidNotFound creates a GetTamAdvisoryInstancesMoidNotFound with default headers values
func NewGetTamAdvisoryInstancesMoidNotFound() *GetTamAdvisoryInstancesMoidNotFound {
	return &GetTamAdvisoryInstancesMoidNotFound{}
}

/*GetTamAdvisoryInstancesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetTamAdvisoryInstancesMoidNotFound struct {
}

func (o *GetTamAdvisoryInstancesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /tam/AdvisoryInstances/{moid}][%d] getTamAdvisoryInstancesMoidNotFound ", 404)
}

func (o *GetTamAdvisoryInstancesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTamAdvisoryInstancesMoidDefault creates a GetTamAdvisoryInstancesMoidDefault with default headers values
func NewGetTamAdvisoryInstancesMoidDefault(code int) *GetTamAdvisoryInstancesMoidDefault {
	return &GetTamAdvisoryInstancesMoidDefault{
		_statusCode: code,
	}
}

/*GetTamAdvisoryInstancesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetTamAdvisoryInstancesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get tam advisory instances moid default response
func (o *GetTamAdvisoryInstancesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetTamAdvisoryInstancesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /tam/AdvisoryInstances/{moid}][%d] GetTamAdvisoryInstancesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetTamAdvisoryInstancesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTamAdvisoryInstancesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
