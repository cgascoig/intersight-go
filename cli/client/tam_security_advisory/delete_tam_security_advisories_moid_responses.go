// Code generated by go-swagger; DO NOT EDIT.

package tam_security_advisory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteTamSecurityAdvisoriesMoidReader is a Reader for the DeleteTamSecurityAdvisoriesMoid structure.
type DeleteTamSecurityAdvisoriesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTamSecurityAdvisoriesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTamSecurityAdvisoriesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteTamSecurityAdvisoriesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteTamSecurityAdvisoriesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTamSecurityAdvisoriesMoidOK creates a DeleteTamSecurityAdvisoriesMoidOK with default headers values
func NewDeleteTamSecurityAdvisoriesMoidOK() *DeleteTamSecurityAdvisoriesMoidOK {
	return &DeleteTamSecurityAdvisoriesMoidOK{}
}

/*DeleteTamSecurityAdvisoriesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteTamSecurityAdvisoriesMoidOK struct {
}

func (o *DeleteTamSecurityAdvisoriesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /tam/SecurityAdvisories/{moid}][%d] deleteTamSecurityAdvisoriesMoidOK ", 200)
}

func (o *DeleteTamSecurityAdvisoriesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTamSecurityAdvisoriesMoidNotFound creates a DeleteTamSecurityAdvisoriesMoidNotFound with default headers values
func NewDeleteTamSecurityAdvisoriesMoidNotFound() *DeleteTamSecurityAdvisoriesMoidNotFound {
	return &DeleteTamSecurityAdvisoriesMoidNotFound{}
}

/*DeleteTamSecurityAdvisoriesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteTamSecurityAdvisoriesMoidNotFound struct {
}

func (o *DeleteTamSecurityAdvisoriesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tam/SecurityAdvisories/{moid}][%d] deleteTamSecurityAdvisoriesMoidNotFound ", 404)
}

func (o *DeleteTamSecurityAdvisoriesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTamSecurityAdvisoriesMoidDefault creates a DeleteTamSecurityAdvisoriesMoidDefault with default headers values
func NewDeleteTamSecurityAdvisoriesMoidDefault(code int) *DeleteTamSecurityAdvisoriesMoidDefault {
	return &DeleteTamSecurityAdvisoriesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteTamSecurityAdvisoriesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteTamSecurityAdvisoriesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete tam security advisories moid default response
func (o *DeleteTamSecurityAdvisoriesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTamSecurityAdvisoriesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /tam/SecurityAdvisories/{moid}][%d] DeleteTamSecurityAdvisoriesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTamSecurityAdvisoriesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTamSecurityAdvisoriesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
