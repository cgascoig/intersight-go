// Code generated by go-swagger; DO NOT EDIT.

package task_workflow_action

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetTaskWorkflowActionsMoidReader is a Reader for the GetTaskWorkflowActionsMoid structure.
type GetTaskWorkflowActionsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskWorkflowActionsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskWorkflowActionsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTaskWorkflowActionsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTaskWorkflowActionsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTaskWorkflowActionsMoidOK creates a GetTaskWorkflowActionsMoidOK with default headers values
func NewGetTaskWorkflowActionsMoidOK() *GetTaskWorkflowActionsMoidOK {
	return &GetTaskWorkflowActionsMoidOK{}
}

/*GetTaskWorkflowActionsMoidOK handles this case with default header values.

An instance of taskWorkflowAction
*/
type GetTaskWorkflowActionsMoidOK struct {
	Payload *models.TaskWorkflowAction
}

func (o *GetTaskWorkflowActionsMoidOK) Error() string {
	return fmt.Sprintf("[GET /task/WorkflowActions/{moid}][%d] getTaskWorkflowActionsMoidOK  %+v", 200, o.Payload)
}

func (o *GetTaskWorkflowActionsMoidOK) GetPayload() *models.TaskWorkflowAction {
	return o.Payload
}

func (o *GetTaskWorkflowActionsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskWorkflowAction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskWorkflowActionsMoidNotFound creates a GetTaskWorkflowActionsMoidNotFound with default headers values
func NewGetTaskWorkflowActionsMoidNotFound() *GetTaskWorkflowActionsMoidNotFound {
	return &GetTaskWorkflowActionsMoidNotFound{}
}

/*GetTaskWorkflowActionsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetTaskWorkflowActionsMoidNotFound struct {
}

func (o *GetTaskWorkflowActionsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /task/WorkflowActions/{moid}][%d] getTaskWorkflowActionsMoidNotFound ", 404)
}

func (o *GetTaskWorkflowActionsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskWorkflowActionsMoidDefault creates a GetTaskWorkflowActionsMoidDefault with default headers values
func NewGetTaskWorkflowActionsMoidDefault(code int) *GetTaskWorkflowActionsMoidDefault {
	return &GetTaskWorkflowActionsMoidDefault{
		_statusCode: code,
	}
}

/*GetTaskWorkflowActionsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetTaskWorkflowActionsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get task workflow actions moid default response
func (o *GetTaskWorkflowActionsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetTaskWorkflowActionsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /task/WorkflowActions/{moid}][%d] GetTaskWorkflowActionsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetTaskWorkflowActionsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTaskWorkflowActionsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
