// Code generated by go-swagger; DO NOT EDIT.

package vmedia_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteVmediaPoliciesMoidReader is a Reader for the DeleteVmediaPoliciesMoid structure.
type DeleteVmediaPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVmediaPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVmediaPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteVmediaPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteVmediaPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteVmediaPoliciesMoidOK creates a DeleteVmediaPoliciesMoidOK with default headers values
func NewDeleteVmediaPoliciesMoidOK() *DeleteVmediaPoliciesMoidOK {
	return &DeleteVmediaPoliciesMoidOK{}
}

/*DeleteVmediaPoliciesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteVmediaPoliciesMoidOK struct {
}

func (o *DeleteVmediaPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /vmedia/Policies/{moid}][%d] deleteVmediaPoliciesMoidOK ", 200)
}

func (o *DeleteVmediaPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVmediaPoliciesMoidNotFound creates a DeleteVmediaPoliciesMoidNotFound with default headers values
func NewDeleteVmediaPoliciesMoidNotFound() *DeleteVmediaPoliciesMoidNotFound {
	return &DeleteVmediaPoliciesMoidNotFound{}
}

/*DeleteVmediaPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteVmediaPoliciesMoidNotFound struct {
}

func (o *DeleteVmediaPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vmedia/Policies/{moid}][%d] deleteVmediaPoliciesMoidNotFound ", 404)
}

func (o *DeleteVmediaPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVmediaPoliciesMoidDefault creates a DeleteVmediaPoliciesMoidDefault with default headers values
func NewDeleteVmediaPoliciesMoidDefault(code int) *DeleteVmediaPoliciesMoidDefault {
	return &DeleteVmediaPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteVmediaPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteVmediaPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete vmedia policies moid default response
func (o *DeleteVmediaPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVmediaPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /vmedia/Policies/{moid}][%d] DeleteVmediaPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVmediaPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVmediaPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
