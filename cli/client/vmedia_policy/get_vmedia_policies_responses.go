// Code generated by go-swagger; DO NOT EDIT.

package vmedia_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetVmediaPoliciesReader is a Reader for the GetVmediaPolicies structure.
type GetVmediaPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVmediaPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVmediaPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetVmediaPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVmediaPoliciesOK creates a GetVmediaPoliciesOK with default headers values
func NewGetVmediaPoliciesOK() *GetVmediaPoliciesOK {
	return &GetVmediaPoliciesOK{}
}

/*GetVmediaPoliciesOK handles this case with default header values.

List of vmediaPolicies for the given filter criteria
*/
type GetVmediaPoliciesOK struct {
	Payload *models.VmediaPolicyList
}

func (o *GetVmediaPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /vmedia/Policies][%d] getVmediaPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetVmediaPoliciesOK) GetPayload() *models.VmediaPolicyList {
	return o.Payload
}

func (o *GetVmediaPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VmediaPolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVmediaPoliciesDefault creates a GetVmediaPoliciesDefault with default headers values
func NewGetVmediaPoliciesDefault(code int) *GetVmediaPoliciesDefault {
	return &GetVmediaPoliciesDefault{
		_statusCode: code,
	}
}

/*GetVmediaPoliciesDefault handles this case with default header values.

Unexpected error
*/
type GetVmediaPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get vmedia policies default response
func (o *GetVmediaPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetVmediaPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /vmedia/Policies][%d] GetVmediaPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetVmediaPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVmediaPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
