// Code generated by go-swagger; DO NOT EDIT.

package vnic_eth_if

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetVnicEthIfsMoidReader is a Reader for the GetVnicEthIfsMoid structure.
type GetVnicEthIfsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVnicEthIfsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVnicEthIfsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetVnicEthIfsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetVnicEthIfsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVnicEthIfsMoidOK creates a GetVnicEthIfsMoidOK with default headers values
func NewGetVnicEthIfsMoidOK() *GetVnicEthIfsMoidOK {
	return &GetVnicEthIfsMoidOK{}
}

/*GetVnicEthIfsMoidOK handles this case with default header values.

An instance of vnicEthIf
*/
type GetVnicEthIfsMoidOK struct {
	Payload *models.VnicEthIf
}

func (o *GetVnicEthIfsMoidOK) Error() string {
	return fmt.Sprintf("[GET /vnic/EthIfs/{moid}][%d] getVnicEthIfsMoidOK  %+v", 200, o.Payload)
}

func (o *GetVnicEthIfsMoidOK) GetPayload() *models.VnicEthIf {
	return o.Payload
}

func (o *GetVnicEthIfsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VnicEthIf)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVnicEthIfsMoidNotFound creates a GetVnicEthIfsMoidNotFound with default headers values
func NewGetVnicEthIfsMoidNotFound() *GetVnicEthIfsMoidNotFound {
	return &GetVnicEthIfsMoidNotFound{}
}

/*GetVnicEthIfsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetVnicEthIfsMoidNotFound struct {
}

func (o *GetVnicEthIfsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /vnic/EthIfs/{moid}][%d] getVnicEthIfsMoidNotFound ", 404)
}

func (o *GetVnicEthIfsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVnicEthIfsMoidDefault creates a GetVnicEthIfsMoidDefault with default headers values
func NewGetVnicEthIfsMoidDefault(code int) *GetVnicEthIfsMoidDefault {
	return &GetVnicEthIfsMoidDefault{
		_statusCode: code,
	}
}

/*GetVnicEthIfsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetVnicEthIfsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get vnic eth ifs moid default response
func (o *GetVnicEthIfsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetVnicEthIfsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /vnic/EthIfs/{moid}][%d] GetVnicEthIfsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetVnicEthIfsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVnicEthIfsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
