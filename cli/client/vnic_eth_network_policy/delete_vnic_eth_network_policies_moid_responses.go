// Code generated by go-swagger; DO NOT EDIT.

package vnic_eth_network_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteVnicEthNetworkPoliciesMoidReader is a Reader for the DeleteVnicEthNetworkPoliciesMoid structure.
type DeleteVnicEthNetworkPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVnicEthNetworkPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVnicEthNetworkPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteVnicEthNetworkPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteVnicEthNetworkPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteVnicEthNetworkPoliciesMoidOK creates a DeleteVnicEthNetworkPoliciesMoidOK with default headers values
func NewDeleteVnicEthNetworkPoliciesMoidOK() *DeleteVnicEthNetworkPoliciesMoidOK {
	return &DeleteVnicEthNetworkPoliciesMoidOK{}
}

/*DeleteVnicEthNetworkPoliciesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteVnicEthNetworkPoliciesMoidOK struct {
}

func (o *DeleteVnicEthNetworkPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /vnic/EthNetworkPolicies/{moid}][%d] deleteVnicEthNetworkPoliciesMoidOK ", 200)
}

func (o *DeleteVnicEthNetworkPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVnicEthNetworkPoliciesMoidNotFound creates a DeleteVnicEthNetworkPoliciesMoidNotFound with default headers values
func NewDeleteVnicEthNetworkPoliciesMoidNotFound() *DeleteVnicEthNetworkPoliciesMoidNotFound {
	return &DeleteVnicEthNetworkPoliciesMoidNotFound{}
}

/*DeleteVnicEthNetworkPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteVnicEthNetworkPoliciesMoidNotFound struct {
}

func (o *DeleteVnicEthNetworkPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vnic/EthNetworkPolicies/{moid}][%d] deleteVnicEthNetworkPoliciesMoidNotFound ", 404)
}

func (o *DeleteVnicEthNetworkPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVnicEthNetworkPoliciesMoidDefault creates a DeleteVnicEthNetworkPoliciesMoidDefault with default headers values
func NewDeleteVnicEthNetworkPoliciesMoidDefault(code int) *DeleteVnicEthNetworkPoliciesMoidDefault {
	return &DeleteVnicEthNetworkPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteVnicEthNetworkPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteVnicEthNetworkPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete vnic eth network policies moid default response
func (o *DeleteVnicEthNetworkPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVnicEthNetworkPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /vnic/EthNetworkPolicies/{moid}][%d] DeleteVnicEthNetworkPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVnicEthNetworkPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVnicEthNetworkPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
