// Code generated by go-swagger; DO NOT EDIT.

package vnic_fc_if

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetVnicFcIfsMoidReader is a Reader for the GetVnicFcIfsMoid structure.
type GetVnicFcIfsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVnicFcIfsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVnicFcIfsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetVnicFcIfsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetVnicFcIfsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVnicFcIfsMoidOK creates a GetVnicFcIfsMoidOK with default headers values
func NewGetVnicFcIfsMoidOK() *GetVnicFcIfsMoidOK {
	return &GetVnicFcIfsMoidOK{}
}

/*GetVnicFcIfsMoidOK handles this case with default header values.

An instance of vnicFcIf
*/
type GetVnicFcIfsMoidOK struct {
	Payload *models.VnicFcIf
}

func (o *GetVnicFcIfsMoidOK) Error() string {
	return fmt.Sprintf("[GET /vnic/FcIfs/{moid}][%d] getVnicFcIfsMoidOK  %+v", 200, o.Payload)
}

func (o *GetVnicFcIfsMoidOK) GetPayload() *models.VnicFcIf {
	return o.Payload
}

func (o *GetVnicFcIfsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VnicFcIf)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVnicFcIfsMoidNotFound creates a GetVnicFcIfsMoidNotFound with default headers values
func NewGetVnicFcIfsMoidNotFound() *GetVnicFcIfsMoidNotFound {
	return &GetVnicFcIfsMoidNotFound{}
}

/*GetVnicFcIfsMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetVnicFcIfsMoidNotFound struct {
}

func (o *GetVnicFcIfsMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /vnic/FcIfs/{moid}][%d] getVnicFcIfsMoidNotFound ", 404)
}

func (o *GetVnicFcIfsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVnicFcIfsMoidDefault creates a GetVnicFcIfsMoidDefault with default headers values
func NewGetVnicFcIfsMoidDefault(code int) *GetVnicFcIfsMoidDefault {
	return &GetVnicFcIfsMoidDefault{
		_statusCode: code,
	}
}

/*GetVnicFcIfsMoidDefault handles this case with default header values.

Unexpected error
*/
type GetVnicFcIfsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get vnic fc ifs moid default response
func (o *GetVnicFcIfsMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetVnicFcIfsMoidDefault) Error() string {
	return fmt.Sprintf("[GET /vnic/FcIfs/{moid}][%d] GetVnicFcIfsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetVnicFcIfsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVnicFcIfsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
