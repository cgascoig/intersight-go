// Code generated by go-swagger; DO NOT EDIT.

package vnic_fc_if

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetVnicFcIfsReader is a Reader for the GetVnicFcIfs structure.
type GetVnicFcIfsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVnicFcIfsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVnicFcIfsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetVnicFcIfsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVnicFcIfsOK creates a GetVnicFcIfsOK with default headers values
func NewGetVnicFcIfsOK() *GetVnicFcIfsOK {
	return &GetVnicFcIfsOK{}
}

/*GetVnicFcIfsOK handles this case with default header values.

List of vnicFcIfs for the given filter criteria
*/
type GetVnicFcIfsOK struct {
	Payload *models.VnicFcIfList
}

func (o *GetVnicFcIfsOK) Error() string {
	return fmt.Sprintf("[GET /vnic/FcIfs][%d] getVnicFcIfsOK  %+v", 200, o.Payload)
}

func (o *GetVnicFcIfsOK) GetPayload() *models.VnicFcIfList {
	return o.Payload
}

func (o *GetVnicFcIfsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VnicFcIfList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVnicFcIfsDefault creates a GetVnicFcIfsDefault with default headers values
func NewGetVnicFcIfsDefault(code int) *GetVnicFcIfsDefault {
	return &GetVnicFcIfsDefault{
		_statusCode: code,
	}
}

/*GetVnicFcIfsDefault handles this case with default header values.

Unexpected error
*/
type GetVnicFcIfsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get vnic fc ifs default response
func (o *GetVnicFcIfsDefault) Code() int {
	return o._statusCode
}

func (o *GetVnicFcIfsDefault) Error() string {
	return fmt.Sprintf("[GET /vnic/FcIfs][%d] GetVnicFcIfs default  %+v", o._statusCode, o.Payload)
}

func (o *GetVnicFcIfsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVnicFcIfsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
