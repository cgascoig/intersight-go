// Code generated by go-swagger; DO NOT EDIT.

package vnic_fc_network_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetVnicFcNetworkPoliciesMoidReader is a Reader for the GetVnicFcNetworkPoliciesMoid structure.
type GetVnicFcNetworkPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVnicFcNetworkPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVnicFcNetworkPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetVnicFcNetworkPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetVnicFcNetworkPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVnicFcNetworkPoliciesMoidOK creates a GetVnicFcNetworkPoliciesMoidOK with default headers values
func NewGetVnicFcNetworkPoliciesMoidOK() *GetVnicFcNetworkPoliciesMoidOK {
	return &GetVnicFcNetworkPoliciesMoidOK{}
}

/*GetVnicFcNetworkPoliciesMoidOK handles this case with default header values.

An instance of vnicFcNetworkPolicy
*/
type GetVnicFcNetworkPoliciesMoidOK struct {
	Payload *models.VnicFcNetworkPolicy
}

func (o *GetVnicFcNetworkPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[GET /vnic/FcNetworkPolicies/{moid}][%d] getVnicFcNetworkPoliciesMoidOK  %+v", 200, o.Payload)
}

func (o *GetVnicFcNetworkPoliciesMoidOK) GetPayload() *models.VnicFcNetworkPolicy {
	return o.Payload
}

func (o *GetVnicFcNetworkPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VnicFcNetworkPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVnicFcNetworkPoliciesMoidNotFound creates a GetVnicFcNetworkPoliciesMoidNotFound with default headers values
func NewGetVnicFcNetworkPoliciesMoidNotFound() *GetVnicFcNetworkPoliciesMoidNotFound {
	return &GetVnicFcNetworkPoliciesMoidNotFound{}
}

/*GetVnicFcNetworkPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetVnicFcNetworkPoliciesMoidNotFound struct {
}

func (o *GetVnicFcNetworkPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /vnic/FcNetworkPolicies/{moid}][%d] getVnicFcNetworkPoliciesMoidNotFound ", 404)
}

func (o *GetVnicFcNetworkPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVnicFcNetworkPoliciesMoidDefault creates a GetVnicFcNetworkPoliciesMoidDefault with default headers values
func NewGetVnicFcNetworkPoliciesMoidDefault(code int) *GetVnicFcNetworkPoliciesMoidDefault {
	return &GetVnicFcNetworkPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*GetVnicFcNetworkPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type GetVnicFcNetworkPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get vnic fc network policies moid default response
func (o *GetVnicFcNetworkPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetVnicFcNetworkPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[GET /vnic/FcNetworkPolicies/{moid}][%d] GetVnicFcNetworkPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetVnicFcNetworkPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVnicFcNetworkPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
