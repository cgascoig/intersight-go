// Code generated by go-swagger; DO NOT EDIT.

package vnic_san_connectivity_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteVnicSanConnectivityPoliciesMoidReader is a Reader for the DeleteVnicSanConnectivityPoliciesMoid structure.
type DeleteVnicSanConnectivityPoliciesMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVnicSanConnectivityPoliciesMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVnicSanConnectivityPoliciesMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteVnicSanConnectivityPoliciesMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteVnicSanConnectivityPoliciesMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteVnicSanConnectivityPoliciesMoidOK creates a DeleteVnicSanConnectivityPoliciesMoidOK with default headers values
func NewDeleteVnicSanConnectivityPoliciesMoidOK() *DeleteVnicSanConnectivityPoliciesMoidOK {
	return &DeleteVnicSanConnectivityPoliciesMoidOK{}
}

/*DeleteVnicSanConnectivityPoliciesMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteVnicSanConnectivityPoliciesMoidOK struct {
}

func (o *DeleteVnicSanConnectivityPoliciesMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /vnic/SanConnectivityPolicies/{moid}][%d] deleteVnicSanConnectivityPoliciesMoidOK ", 200)
}

func (o *DeleteVnicSanConnectivityPoliciesMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVnicSanConnectivityPoliciesMoidNotFound creates a DeleteVnicSanConnectivityPoliciesMoidNotFound with default headers values
func NewDeleteVnicSanConnectivityPoliciesMoidNotFound() *DeleteVnicSanConnectivityPoliciesMoidNotFound {
	return &DeleteVnicSanConnectivityPoliciesMoidNotFound{}
}

/*DeleteVnicSanConnectivityPoliciesMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteVnicSanConnectivityPoliciesMoidNotFound struct {
}

func (o *DeleteVnicSanConnectivityPoliciesMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vnic/SanConnectivityPolicies/{moid}][%d] deleteVnicSanConnectivityPoliciesMoidNotFound ", 404)
}

func (o *DeleteVnicSanConnectivityPoliciesMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVnicSanConnectivityPoliciesMoidDefault creates a DeleteVnicSanConnectivityPoliciesMoidDefault with default headers values
func NewDeleteVnicSanConnectivityPoliciesMoidDefault(code int) *DeleteVnicSanConnectivityPoliciesMoidDefault {
	return &DeleteVnicSanConnectivityPoliciesMoidDefault{
		_statusCode: code,
	}
}

/*DeleteVnicSanConnectivityPoliciesMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteVnicSanConnectivityPoliciesMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete vnic san connectivity policies moid default response
func (o *DeleteVnicSanConnectivityPoliciesMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVnicSanConnectivityPoliciesMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /vnic/SanConnectivityPolicies/{moid}][%d] DeleteVnicSanConnectivityPoliciesMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVnicSanConnectivityPoliciesMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVnicSanConnectivityPoliciesMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
