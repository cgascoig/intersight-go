// Code generated by go-swagger; DO NOT EDIT.

package workflow_pending_dynamic_workflow_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetWorkflowPendingDynamicWorkflowInfosMoidReader is a Reader for the GetWorkflowPendingDynamicWorkflowInfosMoid structure.
type GetWorkflowPendingDynamicWorkflowInfosMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowPendingDynamicWorkflowInfosMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowPendingDynamicWorkflowInfosMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetWorkflowPendingDynamicWorkflowInfosMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetWorkflowPendingDynamicWorkflowInfosMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWorkflowPendingDynamicWorkflowInfosMoidOK creates a GetWorkflowPendingDynamicWorkflowInfosMoidOK with default headers values
func NewGetWorkflowPendingDynamicWorkflowInfosMoidOK() *GetWorkflowPendingDynamicWorkflowInfosMoidOK {
	return &GetWorkflowPendingDynamicWorkflowInfosMoidOK{}
}

/*GetWorkflowPendingDynamicWorkflowInfosMoidOK handles this case with default header values.

An instance of workflowPendingDynamicWorkflowInfo
*/
type GetWorkflowPendingDynamicWorkflowInfosMoidOK struct {
	Payload *models.WorkflowPendingDynamicWorkflowInfo
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidOK) Error() string {
	return fmt.Sprintf("[GET /workflow/PendingDynamicWorkflowInfos/{moid}][%d] getWorkflowPendingDynamicWorkflowInfosMoidOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidOK) GetPayload() *models.WorkflowPendingDynamicWorkflowInfo {
	return o.Payload
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowPendingDynamicWorkflowInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowPendingDynamicWorkflowInfosMoidNotFound creates a GetWorkflowPendingDynamicWorkflowInfosMoidNotFound with default headers values
func NewGetWorkflowPendingDynamicWorkflowInfosMoidNotFound() *GetWorkflowPendingDynamicWorkflowInfosMoidNotFound {
	return &GetWorkflowPendingDynamicWorkflowInfosMoidNotFound{}
}

/*GetWorkflowPendingDynamicWorkflowInfosMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetWorkflowPendingDynamicWorkflowInfosMoidNotFound struct {
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/PendingDynamicWorkflowInfos/{moid}][%d] getWorkflowPendingDynamicWorkflowInfosMoidNotFound ", 404)
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowPendingDynamicWorkflowInfosMoidDefault creates a GetWorkflowPendingDynamicWorkflowInfosMoidDefault with default headers values
func NewGetWorkflowPendingDynamicWorkflowInfosMoidDefault(code int) *GetWorkflowPendingDynamicWorkflowInfosMoidDefault {
	return &GetWorkflowPendingDynamicWorkflowInfosMoidDefault{
		_statusCode: code,
	}
}

/*GetWorkflowPendingDynamicWorkflowInfosMoidDefault handles this case with default header values.

Unexpected error
*/
type GetWorkflowPendingDynamicWorkflowInfosMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get workflow pending dynamic workflow infos moid default response
func (o *GetWorkflowPendingDynamicWorkflowInfosMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidDefault) Error() string {
	return fmt.Sprintf("[GET /workflow/PendingDynamicWorkflowInfos/{moid}][%d] GetWorkflowPendingDynamicWorkflowInfosMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkflowPendingDynamicWorkflowInfosMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
