// Code generated by go-swagger; DO NOT EDIT.

package workflow_task_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// NewPatchWorkflowTaskInfosMoidParams creates a new PatchWorkflowTaskInfosMoidParams object
// with the default values initialized.
func NewPatchWorkflowTaskInfosMoidParams() *PatchWorkflowTaskInfosMoidParams {
	var ()
	return &PatchWorkflowTaskInfosMoidParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchWorkflowTaskInfosMoidParamsWithTimeout creates a new PatchWorkflowTaskInfosMoidParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchWorkflowTaskInfosMoidParamsWithTimeout(timeout time.Duration) *PatchWorkflowTaskInfosMoidParams {
	var ()
	return &PatchWorkflowTaskInfosMoidParams{

		timeout: timeout,
	}
}

// NewPatchWorkflowTaskInfosMoidParamsWithContext creates a new PatchWorkflowTaskInfosMoidParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchWorkflowTaskInfosMoidParamsWithContext(ctx context.Context) *PatchWorkflowTaskInfosMoidParams {
	var ()
	return &PatchWorkflowTaskInfosMoidParams{

		Context: ctx,
	}
}

// NewPatchWorkflowTaskInfosMoidParamsWithHTTPClient creates a new PatchWorkflowTaskInfosMoidParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchWorkflowTaskInfosMoidParamsWithHTTPClient(client *http.Client) *PatchWorkflowTaskInfosMoidParams {
	var ()
	return &PatchWorkflowTaskInfosMoidParams{
		HTTPClient: client,
	}
}

/*PatchWorkflowTaskInfosMoidParams contains all the parameters to send to the API endpoint
for the patch workflow task infos moid operation typically these are written to a http.Request
*/
type PatchWorkflowTaskInfosMoidParams struct {

	/*Body
	  workflowTaskInfo to update

	*/
	Body *models.WorkflowTaskInfo
	/*Moid
	  The moid of the workflowTaskInfo instance.

	*/
	Moid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) WithTimeout(timeout time.Duration) *PatchWorkflowTaskInfosMoidParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) WithContext(ctx context.Context) *PatchWorkflowTaskInfosMoidParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) WithHTTPClient(client *http.Client) *PatchWorkflowTaskInfosMoidParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) WithBody(body *models.WorkflowTaskInfo) *PatchWorkflowTaskInfosMoidParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) SetBody(body *models.WorkflowTaskInfo) {
	o.Body = body
}

// WithMoid adds the moid to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) WithMoid(moid string) *PatchWorkflowTaskInfosMoidParams {
	o.SetMoid(moid)
	return o
}

// SetMoid adds the moid to the patch workflow task infos moid params
func (o *PatchWorkflowTaskInfosMoidParams) SetMoid(moid string) {
	o.Moid = moid
}

// WriteToRequest writes these params to a swagger request
func (o *PatchWorkflowTaskInfosMoidParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param moid
	if err := r.SetPathParam("moid", o.Moid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
