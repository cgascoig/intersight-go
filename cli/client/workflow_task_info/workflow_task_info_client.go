// Code generated by go-swagger; DO NOT EDIT.

package workflow_task_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new workflow task info API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for workflow task info API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetWorkflowTaskInfos gets a list of workflow task info instances
*/
func (a *Client) GetWorkflowTaskInfos(params *GetWorkflowTaskInfosParams) (*GetWorkflowTaskInfosOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetWorkflowTaskInfosParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetWorkflowTaskInfos",
		Method:             "GET",
		PathPattern:        "/workflow/TaskInfos",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetWorkflowTaskInfosReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetWorkflowTaskInfosOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetWorkflowTaskInfosDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
GetWorkflowTaskInfosMoid gets a specific instance of workflow task info
*/
func (a *Client) GetWorkflowTaskInfosMoid(params *GetWorkflowTaskInfosMoidParams) (*GetWorkflowTaskInfosMoidOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetWorkflowTaskInfosMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetWorkflowTaskInfosMoid",
		Method:             "GET",
		PathPattern:        "/workflow/TaskInfos/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetWorkflowTaskInfosMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetWorkflowTaskInfosMoidOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*GetWorkflowTaskInfosMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PatchWorkflowTaskInfosMoid updates an instance of workflow task info
*/
func (a *Client) PatchWorkflowTaskInfosMoid(params *PatchWorkflowTaskInfosMoidParams) (*PatchWorkflowTaskInfosMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchWorkflowTaskInfosMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchWorkflowTaskInfosMoid",
		Method:             "PATCH",
		PathPattern:        "/workflow/TaskInfos/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchWorkflowTaskInfosMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchWorkflowTaskInfosMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PatchWorkflowTaskInfosMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
PostWorkflowTaskInfosMoid updates an instance of workflow task info
*/
func (a *Client) PostWorkflowTaskInfosMoid(params *PostWorkflowTaskInfosMoidParams) (*PostWorkflowTaskInfosMoidCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostWorkflowTaskInfosMoidParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostWorkflowTaskInfosMoid",
		Method:             "POST",
		PathPattern:        "/workflow/TaskInfos/{moid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostWorkflowTaskInfosMoidReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostWorkflowTaskInfosMoidCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*PostWorkflowTaskInfosMoidDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
