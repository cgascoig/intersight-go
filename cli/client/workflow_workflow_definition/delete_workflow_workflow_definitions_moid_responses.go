// Code generated by go-swagger; DO NOT EDIT.

package workflow_workflow_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// DeleteWorkflowWorkflowDefinitionsMoidReader is a Reader for the DeleteWorkflowWorkflowDefinitionsMoid structure.
type DeleteWorkflowWorkflowDefinitionsMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowWorkflowDefinitionsMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWorkflowWorkflowDefinitionsMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteWorkflowWorkflowDefinitionsMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteWorkflowWorkflowDefinitionsMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteWorkflowWorkflowDefinitionsMoidOK creates a DeleteWorkflowWorkflowDefinitionsMoidOK with default headers values
func NewDeleteWorkflowWorkflowDefinitionsMoidOK() *DeleteWorkflowWorkflowDefinitionsMoidOK {
	return &DeleteWorkflowWorkflowDefinitionsMoidOK{}
}

/*DeleteWorkflowWorkflowDefinitionsMoidOK handles this case with default header values.

Delete successful.
*/
type DeleteWorkflowWorkflowDefinitionsMoidOK struct {
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidOK) Error() string {
	return fmt.Sprintf("[DELETE /workflow/WorkflowDefinitions/{moid}][%d] deleteWorkflowWorkflowDefinitionsMoidOK ", 200)
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowWorkflowDefinitionsMoidNotFound creates a DeleteWorkflowWorkflowDefinitionsMoidNotFound with default headers values
func NewDeleteWorkflowWorkflowDefinitionsMoidNotFound() *DeleteWorkflowWorkflowDefinitionsMoidNotFound {
	return &DeleteWorkflowWorkflowDefinitionsMoidNotFound{}
}

/*DeleteWorkflowWorkflowDefinitionsMoidNotFound handles this case with default header values.

Instance not found.
*/
type DeleteWorkflowWorkflowDefinitionsMoidNotFound struct {
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidNotFound) Error() string {
	return fmt.Sprintf("[DELETE /workflow/WorkflowDefinitions/{moid}][%d] deleteWorkflowWorkflowDefinitionsMoidNotFound ", 404)
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkflowWorkflowDefinitionsMoidDefault creates a DeleteWorkflowWorkflowDefinitionsMoidDefault with default headers values
func NewDeleteWorkflowWorkflowDefinitionsMoidDefault(code int) *DeleteWorkflowWorkflowDefinitionsMoidDefault {
	return &DeleteWorkflowWorkflowDefinitionsMoidDefault{
		_statusCode: code,
	}
}

/*DeleteWorkflowWorkflowDefinitionsMoidDefault handles this case with default header values.

Unexpected error
*/
type DeleteWorkflowWorkflowDefinitionsMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete workflow workflow definitions moid default response
func (o *DeleteWorkflowWorkflowDefinitionsMoidDefault) Code() int {
	return o._statusCode
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidDefault) Error() string {
	return fmt.Sprintf("[DELETE /workflow/WorkflowDefinitions/{moid}][%d] DeleteWorkflowWorkflowDefinitionsMoid default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWorkflowWorkflowDefinitionsMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
