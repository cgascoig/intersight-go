// Code generated by go-swagger; DO NOT EDIT.

package workflow_workflow_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetWorkflowWorkflowInfosMoidReader is a Reader for the GetWorkflowWorkflowInfosMoid structure.
type GetWorkflowWorkflowInfosMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowWorkflowInfosMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowWorkflowInfosMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetWorkflowWorkflowInfosMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetWorkflowWorkflowInfosMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWorkflowWorkflowInfosMoidOK creates a GetWorkflowWorkflowInfosMoidOK with default headers values
func NewGetWorkflowWorkflowInfosMoidOK() *GetWorkflowWorkflowInfosMoidOK {
	return &GetWorkflowWorkflowInfosMoidOK{}
}

/*GetWorkflowWorkflowInfosMoidOK handles this case with default header values.

An instance of workflowWorkflowInfo
*/
type GetWorkflowWorkflowInfosMoidOK struct {
	Payload *models.WorkflowWorkflowInfo
}

func (o *GetWorkflowWorkflowInfosMoidOK) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowInfos/{moid}][%d] getWorkflowWorkflowInfosMoidOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowWorkflowInfosMoidOK) GetPayload() *models.WorkflowWorkflowInfo {
	return o.Payload
}

func (o *GetWorkflowWorkflowInfosMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowWorkflowInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowWorkflowInfosMoidNotFound creates a GetWorkflowWorkflowInfosMoidNotFound with default headers values
func NewGetWorkflowWorkflowInfosMoidNotFound() *GetWorkflowWorkflowInfosMoidNotFound {
	return &GetWorkflowWorkflowInfosMoidNotFound{}
}

/*GetWorkflowWorkflowInfosMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetWorkflowWorkflowInfosMoidNotFound struct {
}

func (o *GetWorkflowWorkflowInfosMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowInfos/{moid}][%d] getWorkflowWorkflowInfosMoidNotFound ", 404)
}

func (o *GetWorkflowWorkflowInfosMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowWorkflowInfosMoidDefault creates a GetWorkflowWorkflowInfosMoidDefault with default headers values
func NewGetWorkflowWorkflowInfosMoidDefault(code int) *GetWorkflowWorkflowInfosMoidDefault {
	return &GetWorkflowWorkflowInfosMoidDefault{
		_statusCode: code,
	}
}

/*GetWorkflowWorkflowInfosMoidDefault handles this case with default header values.

Unexpected error
*/
type GetWorkflowWorkflowInfosMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get workflow workflow infos moid default response
func (o *GetWorkflowWorkflowInfosMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkflowWorkflowInfosMoidDefault) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowInfos/{moid}][%d] GetWorkflowWorkflowInfosMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkflowWorkflowInfosMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkflowWorkflowInfosMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
