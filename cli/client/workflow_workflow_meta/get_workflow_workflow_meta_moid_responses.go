// Code generated by go-swagger; DO NOT EDIT.

package workflow_workflow_meta

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cgascoig/intersight-go/cli/models"
)

// GetWorkflowWorkflowMetaMoidReader is a Reader for the GetWorkflowWorkflowMetaMoid structure.
type GetWorkflowWorkflowMetaMoidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowWorkflowMetaMoidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowWorkflowMetaMoidOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetWorkflowWorkflowMetaMoidNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetWorkflowWorkflowMetaMoidDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWorkflowWorkflowMetaMoidOK creates a GetWorkflowWorkflowMetaMoidOK with default headers values
func NewGetWorkflowWorkflowMetaMoidOK() *GetWorkflowWorkflowMetaMoidOK {
	return &GetWorkflowWorkflowMetaMoidOK{}
}

/*GetWorkflowWorkflowMetaMoidOK handles this case with default header values.

An instance of workflowWorkflowMeta
*/
type GetWorkflowWorkflowMetaMoidOK struct {
	Payload *models.WorkflowWorkflowMeta
}

func (o *GetWorkflowWorkflowMetaMoidOK) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowMeta/{moid}][%d] getWorkflowWorkflowMetaMoidOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowWorkflowMetaMoidOK) GetPayload() *models.WorkflowWorkflowMeta {
	return o.Payload
}

func (o *GetWorkflowWorkflowMetaMoidOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkflowWorkflowMeta)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowWorkflowMetaMoidNotFound creates a GetWorkflowWorkflowMetaMoidNotFound with default headers values
func NewGetWorkflowWorkflowMetaMoidNotFound() *GetWorkflowWorkflowMetaMoidNotFound {
	return &GetWorkflowWorkflowMetaMoidNotFound{}
}

/*GetWorkflowWorkflowMetaMoidNotFound handles this case with default header values.

Instance not found.
*/
type GetWorkflowWorkflowMetaMoidNotFound struct {
}

func (o *GetWorkflowWorkflowMetaMoidNotFound) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowMeta/{moid}][%d] getWorkflowWorkflowMetaMoidNotFound ", 404)
}

func (o *GetWorkflowWorkflowMetaMoidNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowWorkflowMetaMoidDefault creates a GetWorkflowWorkflowMetaMoidDefault with default headers values
func NewGetWorkflowWorkflowMetaMoidDefault(code int) *GetWorkflowWorkflowMetaMoidDefault {
	return &GetWorkflowWorkflowMetaMoidDefault{
		_statusCode: code,
	}
}

/*GetWorkflowWorkflowMetaMoidDefault handles this case with default header values.

Unexpected error
*/
type GetWorkflowWorkflowMetaMoidDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get workflow workflow meta moid default response
func (o *GetWorkflowWorkflowMetaMoidDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkflowWorkflowMetaMoidDefault) Error() string {
	return fmt.Sprintf("[GET /workflow/WorkflowMeta/{moid}][%d] GetWorkflowWorkflowMetaMoid default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkflowWorkflowMetaMoidDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkflowWorkflowMetaMoidDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
