// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApplianceStatusCheck Appliance:Status Check
//
// Status check on an Intersight Appliance entity.
//
// swagger:model applianceStatusCheck
type ApplianceStatusCheck struct {

	// Unique identifier of the status check.
	//
	Code string `json:"Code,omitempty"`

	// Result of this status check.
	//
	// Enum: [OK Warning Critical]
	Result *string `json:"Result,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *ApplianceStatusCheck) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Code string `json:"Code,omitempty"`

		Result *string `json:"Result,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Code = dataAO0.Code

	m.Result = dataAO0.Result

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m ApplianceStatusCheck) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Code string `json:"Code,omitempty"`

		Result *string `json:"Result,omitempty"`
	}

	dataAO0.Code = m.Code

	dataAO0.Result = m.Result

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this appliance status check
func (m *ApplianceStatusCheck) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var applianceStatusCheckTypeResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OK","Warning","Critical"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applianceStatusCheckTypeResultPropEnum = append(applianceStatusCheckTypeResultPropEnum, v)
	}
}

// property enum
func (m *ApplianceStatusCheck) validateResultEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, applianceStatusCheckTypeResultPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApplianceStatusCheck) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(m.Result) { // not required
		return nil
	}

	// value enum
	if err := m.validateResultEnum("Result", "body", *m.Result); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApplianceStatusCheck) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplianceStatusCheck) UnmarshalBinary(b []byte) error {
	var res ApplianceStatusCheck
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
