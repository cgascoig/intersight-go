// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AssetParentConnectionSignature Asset:Parent Connection Signature
//
// A signature generated by a device connector with its private key. Signature is passed to leaf device connectors to authenticate connectivity between devices.
//
// swagger:model assetParentConnectionSignature
type AssetParentConnectionSignature struct {

	// The moid of the parent device registration.
	//
	DeviceID string `json:"DeviceId,omitempty"`

	// The result of signing the deviceId appended with the timeStamp fields with the devices private key.
	//
	// Format: binary
	Signature io.ReadCloser `json:"Signature,omitempty"`

	// The time at which the signature was generated. Date is accurate to Intersights clock. Used to expire the signature.
	//
	// Format: date-time
	TimeStamp strfmt.DateTime `json:"TimeStamp,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *AssetParentConnectionSignature) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		DeviceID string `json:"DeviceId,omitempty"`

		Signature io.ReadCloser `json:"Signature,omitempty"`

		TimeStamp strfmt.DateTime `json:"TimeStamp,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.DeviceID = dataAO0.DeviceID

	m.Signature = dataAO0.Signature

	m.TimeStamp = dataAO0.TimeStamp

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m AssetParentConnectionSignature) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		DeviceID string `json:"DeviceId,omitempty"`

		Signature io.ReadCloser `json:"Signature,omitempty"`

		TimeStamp strfmt.DateTime `json:"TimeStamp,omitempty"`
	}

	dataAO0.DeviceID = m.DeviceID

	dataAO0.Signature = m.Signature

	dataAO0.TimeStamp = m.TimeStamp

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this asset parent connection signature
func (m *AssetParentConnectionSignature) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTimeStamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AssetParentConnectionSignature) validateTimeStamp(formats strfmt.Registry) error {

	if swag.IsZero(m.TimeStamp) { // not required
		return nil
	}

	if err := validate.FormatOf("TimeStamp", "body", "date-time", m.TimeStamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AssetParentConnectionSignature) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AssetParentConnectionSignature) UnmarshalBinary(b []byte) error {
	var res AssetParentConnectionSignature
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
