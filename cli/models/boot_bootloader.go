// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BootBootloader Boot:Bootloader
//
// Lists the bootloader properties that can be overriden for boot from Local disk and SAN boot.
//
// swagger:model bootBootloader
type BootBootloader struct {

	// Carries more information about the bootloader.
	//
	Description string `json:"Description,omitempty"`

	// Name of the bootloader.
	//
	Name string `json:"Name,omitempty"`

	// Path to the bootloader image.
	//
	Path string `json:"Path,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *BootBootloader) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Description string `json:"Description,omitempty"`

		Name string `json:"Name,omitempty"`

		Path string `json:"Path,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Description = dataAO0.Description

	m.Name = dataAO0.Name

	m.Path = dataAO0.Path

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m BootBootloader) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Description string `json:"Description,omitempty"`

		Name string `json:"Name,omitempty"`

		Path string `json:"Path,omitempty"`
	}

	dataAO0.Description = m.Description

	dataAO0.Name = m.Name

	dataAO0.Path = m.Path

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this boot bootloader
func (m *BootBootloader) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *BootBootloader) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BootBootloader) UnmarshalBinary(b []byte) error {
	var res BootBootloader
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
