// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HyperflexAppSettingConstraint Hyperflex:App Setting Constraint
//
// A constraint that can be used to qualify an application setting.
//
// swagger:model hyperflexAppSettingConstraint
type HyperflexAppSettingConstraint struct {

	// The supported HyperFlex Data Platform version in regex format.
	//
	HxdpVersion string `json:"HxdpVersion,omitempty"`

	// The hypervisor type for the HyperFlex cluster.
	//
	// Enum: [ESXi]
	HypervisorType *string `json:"HypervisorType,omitempty"`

	// The supported management platform for the HyperFlex Cluster.
	//
	// Enum: [FI EDGE]
	MgmtPlatform *string `json:"MgmtPlatform,omitempty"`

	// The supported server models in regex format.
	//
	ServerModel string `json:"ServerModel,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *HyperflexAppSettingConstraint) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		HxdpVersion string `json:"HxdpVersion,omitempty"`

		HypervisorType *string `json:"HypervisorType,omitempty"`

		MgmtPlatform *string `json:"MgmtPlatform,omitempty"`

		ServerModel string `json:"ServerModel,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.HxdpVersion = dataAO0.HxdpVersion

	m.HypervisorType = dataAO0.HypervisorType

	m.MgmtPlatform = dataAO0.MgmtPlatform

	m.ServerModel = dataAO0.ServerModel

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m HyperflexAppSettingConstraint) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		HxdpVersion string `json:"HxdpVersion,omitempty"`

		HypervisorType *string `json:"HypervisorType,omitempty"`

		MgmtPlatform *string `json:"MgmtPlatform,omitempty"`

		ServerModel string `json:"ServerModel,omitempty"`
	}

	dataAO0.HxdpVersion = m.HxdpVersion

	dataAO0.HypervisorType = m.HypervisorType

	dataAO0.MgmtPlatform = m.MgmtPlatform

	dataAO0.ServerModel = m.ServerModel

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this hyperflex app setting constraint
func (m *HyperflexAppSettingConstraint) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHypervisorType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMgmtPlatform(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var hyperflexAppSettingConstraintTypeHypervisorTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ESXi"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hyperflexAppSettingConstraintTypeHypervisorTypePropEnum = append(hyperflexAppSettingConstraintTypeHypervisorTypePropEnum, v)
	}
}

// property enum
func (m *HyperflexAppSettingConstraint) validateHypervisorTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, hyperflexAppSettingConstraintTypeHypervisorTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *HyperflexAppSettingConstraint) validateHypervisorType(formats strfmt.Registry) error {

	if swag.IsZero(m.HypervisorType) { // not required
		return nil
	}

	// value enum
	if err := m.validateHypervisorTypeEnum("HypervisorType", "body", *m.HypervisorType); err != nil {
		return err
	}

	return nil
}

var hyperflexAppSettingConstraintTypeMgmtPlatformPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FI","EDGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hyperflexAppSettingConstraintTypeMgmtPlatformPropEnum = append(hyperflexAppSettingConstraintTypeMgmtPlatformPropEnum, v)
	}
}

// property enum
func (m *HyperflexAppSettingConstraint) validateMgmtPlatformEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, hyperflexAppSettingConstraintTypeMgmtPlatformPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *HyperflexAppSettingConstraint) validateMgmtPlatform(formats strfmt.Registry) error {

	if swag.IsZero(m.MgmtPlatform) { // not required
		return nil
	}

	// value enum
	if err := m.validateMgmtPlatformEnum("MgmtPlatform", "body", *m.MgmtPlatform); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HyperflexAppSettingConstraint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HyperflexAppSettingConstraint) UnmarshalBinary(b []byte) error {
	var res HyperflexAppSettingConstraint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
