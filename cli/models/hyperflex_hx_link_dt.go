// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// HyperflexHxLinkDt Hyperflex:Hx Link Dt
// swagger:model hyperflexHxLinkDt
type HyperflexHxLinkDt struct {

	// comments
	// Read Only: true
	Comments string `json:"Comments,omitempty"`

	// href
	// Read Only: true
	Href string `json:"Href,omitempty"`

	// method
	// Read Only: true
	// Enum: [POST GET PUT DELETE]
	Method string `json:"Method,omitempty"`

	// rel
	// Read Only: true
	Rel string `json:"Rel,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *HyperflexHxLinkDt) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Comments string `json:"Comments,omitempty"`

		Href string `json:"Href,omitempty"`

		Method string `json:"Method,omitempty"`

		Rel string `json:"Rel,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Comments = dataAO0.Comments

	m.Href = dataAO0.Href

	m.Method = dataAO0.Method

	m.Rel = dataAO0.Rel

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m HyperflexHxLinkDt) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Comments string `json:"Comments,omitempty"`

		Href string `json:"Href,omitempty"`

		Method string `json:"Method,omitempty"`

		Rel string `json:"Rel,omitempty"`
	}

	dataAO0.Comments = m.Comments

	dataAO0.Href = m.Href

	dataAO0.Method = m.Method

	dataAO0.Rel = m.Rel

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this hyperflex hx link dt
func (m *HyperflexHxLinkDt) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var hyperflexHxLinkDtTypeMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["POST","GET","PUT","DELETE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hyperflexHxLinkDtTypeMethodPropEnum = append(hyperflexHxLinkDtTypeMethodPropEnum, v)
	}
}

// property enum
func (m *HyperflexHxLinkDt) validateMethodEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, hyperflexHxLinkDtTypeMethodPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *HyperflexHxLinkDt) validateMethod(formats strfmt.Registry) error {

	if swag.IsZero(m.Method) { // not required
		return nil
	}

	// value enum
	if err := m.validateMethodEnum("Method", "body", m.Method); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HyperflexHxLinkDt) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HyperflexHxLinkDt) UnmarshalBinary(b []byte) error {
	var res HyperflexHxLinkDt
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
