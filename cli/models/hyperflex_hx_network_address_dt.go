// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HyperflexHxNetworkAddressDt Hyperflex:Hx Network Address Dt
// swagger:model hyperflexHxNetworkAddressDt
type HyperflexHxNetworkAddressDt struct {

	// address
	// Read Only: true
	Address string `json:"Address,omitempty"`

	// fqdn
	// Read Only: true
	Fqdn string `json:"Fqdn,omitempty"`

	// Ip
	// Read Only: true
	IP string `json:"Ip,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *HyperflexHxNetworkAddressDt) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Address string `json:"Address,omitempty"`

		Fqdn string `json:"Fqdn,omitempty"`

		IP string `json:"Ip,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Address = dataAO0.Address

	m.Fqdn = dataAO0.Fqdn

	m.IP = dataAO0.IP

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m HyperflexHxNetworkAddressDt) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Address string `json:"Address,omitempty"`

		Fqdn string `json:"Fqdn,omitempty"`

		IP string `json:"Ip,omitempty"`
	}

	dataAO0.Address = m.Address

	dataAO0.Fqdn = m.Fqdn

	dataAO0.IP = m.IP

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this hyperflex hx network address dt
func (m *HyperflexHxNetworkAddressDt) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *HyperflexHxNetworkAddressDt) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HyperflexHxNetworkAddressDt) UnmarshalBinary(b []byte) error {
	var res HyperflexHxNetworkAddressDt
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
