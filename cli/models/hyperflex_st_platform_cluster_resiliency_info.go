// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HyperflexStPlatformClusterResiliencyInfo Hyperflex:St Platform Cluster Resiliency Info
// swagger:model hyperflexStPlatformClusterResiliencyInfo
type HyperflexStPlatformClusterResiliencyInfo struct {

	// hdd failures tolerable
	// Read Only: true
	HddFailuresTolerable int64 `json:"HddFailuresTolerable,omitempty"`

	// messages
	// Read Only: true
	Messages []string `json:"Messages"`

	// messages iterator
	// Read Only: true
	MessagesIterator interface{} `json:"MessagesIterator,omitempty"`

	// messages size
	// Read Only: true
	MessagesSize int64 `json:"MessagesSize,omitempty"`

	// node failures tolerable
	// Read Only: true
	NodeFailuresTolerable int64 `json:"NodeFailuresTolerable,omitempty"`

	// ssd failures tolerable
	// Read Only: true
	SsdFailuresTolerable int64 `json:"SsdFailuresTolerable,omitempty"`

	// state
	// Read Only: true
	State string `json:"State,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *HyperflexStPlatformClusterResiliencyInfo) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		HddFailuresTolerable int64 `json:"HddFailuresTolerable,omitempty"`

		Messages []string `json:"Messages"`

		MessagesIterator interface{} `json:"MessagesIterator,omitempty"`

		MessagesSize int64 `json:"MessagesSize,omitempty"`

		NodeFailuresTolerable int64 `json:"NodeFailuresTolerable,omitempty"`

		SsdFailuresTolerable int64 `json:"SsdFailuresTolerable,omitempty"`

		State string `json:"State,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.HddFailuresTolerable = dataAO0.HddFailuresTolerable

	m.Messages = dataAO0.Messages

	m.MessagesIterator = dataAO0.MessagesIterator

	m.MessagesSize = dataAO0.MessagesSize

	m.NodeFailuresTolerable = dataAO0.NodeFailuresTolerable

	m.SsdFailuresTolerable = dataAO0.SsdFailuresTolerable

	m.State = dataAO0.State

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m HyperflexStPlatformClusterResiliencyInfo) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		HddFailuresTolerable int64 `json:"HddFailuresTolerable,omitempty"`

		Messages []string `json:"Messages"`

		MessagesIterator interface{} `json:"MessagesIterator,omitempty"`

		MessagesSize int64 `json:"MessagesSize,omitempty"`

		NodeFailuresTolerable int64 `json:"NodeFailuresTolerable,omitempty"`

		SsdFailuresTolerable int64 `json:"SsdFailuresTolerable,omitempty"`

		State string `json:"State,omitempty"`
	}

	dataAO0.HddFailuresTolerable = m.HddFailuresTolerable

	dataAO0.Messages = m.Messages

	dataAO0.MessagesIterator = m.MessagesIterator

	dataAO0.MessagesSize = m.MessagesSize

	dataAO0.NodeFailuresTolerable = m.NodeFailuresTolerable

	dataAO0.SsdFailuresTolerable = m.SsdFailuresTolerable

	dataAO0.State = m.State

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this hyperflex st platform cluster resiliency info
func (m *HyperflexStPlatformClusterResiliencyInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *HyperflexStPlatformClusterResiliencyInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HyperflexStPlatformClusterResiliencyInfo) UnmarshalBinary(b []byte) error {
	var res HyperflexStPlatformClusterResiliencyInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
