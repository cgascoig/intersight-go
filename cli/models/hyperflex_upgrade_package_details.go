// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HyperflexUpgradePackageDetails Hyperflex:Upgrade Package Details
//
// Details of the upgrade package, which can be used to upgrade a HyperFlex cluster.
//
// swagger:model hyperflexUpgradePackageDetails
type HyperflexUpgradePackageDetails struct {

	// SHA512 checksum of the upgrade package. This can be obtained from Cisco Connection Online.
	//
	Checksum string `json:"Checksum,omitempty"`

	// Name of the package tgz bundle as uploaded on Cisco Connection Online.
	//
	FileName string `json:"FileName,omitempty"`

	// HyperFlex version to upgrade the cluster to.
	//
	Version string `json:"Version,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *HyperflexUpgradePackageDetails) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Checksum string `json:"Checksum,omitempty"`

		FileName string `json:"FileName,omitempty"`

		Version string `json:"Version,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Checksum = dataAO0.Checksum

	m.FileName = dataAO0.FileName

	m.Version = dataAO0.Version

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m HyperflexUpgradePackageDetails) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Checksum string `json:"Checksum,omitempty"`

		FileName string `json:"FileName,omitempty"`

		Version string `json:"Version,omitempty"`
	}

	dataAO0.Checksum = m.Checksum

	dataAO0.FileName = m.FileName

	dataAO0.Version = m.Version

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this hyperflex upgrade package details
func (m *HyperflexUpgradePackageDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *HyperflexUpgradePackageDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HyperflexUpgradePackageDetails) UnmarshalBinary(b []byte) error {
	var res HyperflexUpgradePackageDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
