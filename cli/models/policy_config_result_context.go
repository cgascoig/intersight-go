// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PolicyConfigResultContext Policy:Config Result Context
//
// The context for a validation/config result such as the related entity's name, type, MOID etc.
//
// swagger:model policyConfigResultContext
type PolicyConfigResultContext struct {

	// entity data
	EntityData interface{} `json:"EntityData,omitempty"`

	// entity moid
	EntityMoid string `json:"EntityMoid,omitempty"`

	// entity name
	EntityName string `json:"EntityName,omitempty"`

	// entity type
	EntityType string `json:"EntityType,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *PolicyConfigResultContext) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		EntityData interface{} `json:"EntityData,omitempty"`

		EntityMoid string `json:"EntityMoid,omitempty"`

		EntityName string `json:"EntityName,omitempty"`

		EntityType string `json:"EntityType,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.EntityData = dataAO0.EntityData

	m.EntityMoid = dataAO0.EntityMoid

	m.EntityName = dataAO0.EntityName

	m.EntityType = dataAO0.EntityType

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m PolicyConfigResultContext) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		EntityData interface{} `json:"EntityData,omitempty"`

		EntityMoid string `json:"EntityMoid,omitempty"`

		EntityName string `json:"EntityName,omitempty"`

		EntityType string `json:"EntityType,omitempty"`
	}

	dataAO0.EntityData = m.EntityData

	dataAO0.EntityMoid = m.EntityMoid

	dataAO0.EntityName = m.EntityName

	dataAO0.EntityType = m.EntityType

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this policy config result context
func (m *PolicyConfigResultContext) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *PolicyConfigResultContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PolicyConfigResultContext) UnmarshalBinary(b []byte) error {
	var res PolicyConfigResultContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
