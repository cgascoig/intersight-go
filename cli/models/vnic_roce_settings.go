// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// VnicRoceSettings RoCE Settings
//
// Settings for RDMA over Converged Ethernet.
//
// swagger:model vnicRoceSettings
type VnicRoceSettings struct {

	// If enabled sets RDMA over Converged Ethernet (RoCE) on this virtual interface.
	//
	Enabled bool `json:"Enabled,omitempty"`

	// The number of memory regions per adapter. Recommended value = integer power of 2.
	//
	MemoryRegions int64 `json:"MemoryRegions,omitempty"`

	// The number of queue pairs per adapter. Recommended value = integer power of 2.
	//
	QueuePairs int64 `json:"QueuePairs,omitempty"`

	// The number of resource groups per adapter. Recommended value = be an integer power of 2 greater than or equal to the number of CPU cores on the system for optimum performance.
	//
	ResourceGroups int64 `json:"ResourceGroups,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *VnicRoceSettings) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Enabled bool `json:"Enabled,omitempty"`

		MemoryRegions int64 `json:"MemoryRegions,omitempty"`

		QueuePairs int64 `json:"QueuePairs,omitempty"`

		ResourceGroups int64 `json:"ResourceGroups,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Enabled = dataAO0.Enabled

	m.MemoryRegions = dataAO0.MemoryRegions

	m.QueuePairs = dataAO0.QueuePairs

	m.ResourceGroups = dataAO0.ResourceGroups

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m VnicRoceSettings) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Enabled bool `json:"Enabled,omitempty"`

		MemoryRegions int64 `json:"MemoryRegions,omitempty"`

		QueuePairs int64 `json:"QueuePairs,omitempty"`

		ResourceGroups int64 `json:"ResourceGroups,omitempty"`
	}

	dataAO0.Enabled = m.Enabled

	dataAO0.MemoryRegions = m.MemoryRegions

	dataAO0.QueuePairs = m.QueuePairs

	dataAO0.ResourceGroups = m.ResourceGroups

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this vnic roce settings
func (m *VnicRoceSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *VnicRoceSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VnicRoceSettings) UnmarshalBinary(b []byte) error {
	var res VnicRoceSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
