// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// VnicUsnicSettings USNIC Settings
//
// User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when sending/receiving packets.
//
// swagger:model vnicUsnicSettings
type VnicUsnicSettings struct {

	// Class of Service to be used for traffic on the usNIC.
	//
	Cos int64 `json:"Cos,omitempty"`

	// Number of usNIC interfaces to be created.
	//
	Count int64 `json:"Count,omitempty"`

	// Ethernet Adapter policy to be associated with the usNICs.
	//
	UsnicAdapterPolicy string `json:"UsnicAdapterPolicy,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *VnicUsnicSettings) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Cos int64 `json:"Cos,omitempty"`

		Count int64 `json:"Count,omitempty"`

		UsnicAdapterPolicy string `json:"UsnicAdapterPolicy,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Cos = dataAO0.Cos

	m.Count = dataAO0.Count

	m.UsnicAdapterPolicy = dataAO0.UsnicAdapterPolicy

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m VnicUsnicSettings) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Cos int64 `json:"Cos,omitempty"`

		Count int64 `json:"Count,omitempty"`

		UsnicAdapterPolicy string `json:"UsnicAdapterPolicy,omitempty"`
	}

	dataAO0.Cos = m.Cos

	dataAO0.Count = m.Count

	dataAO0.UsnicAdapterPolicy = m.UsnicAdapterPolicy

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this vnic usnic settings
func (m *VnicUsnicSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *VnicUsnicSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VnicUsnicSettings) UnmarshalBinary(b []byte) error {
	var res VnicUsnicSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
