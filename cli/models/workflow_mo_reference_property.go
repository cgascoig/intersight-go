// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// WorkflowMoReferenceProperty Workflow:Mo Reference Property
//
// Capture all the properties for an Intersight managed object reference.
//
// swagger:model workflowMoReferenceProperty
type WorkflowMoReferenceProperty struct {

	// List of properties from the Intersight object which can help to identify the object. Typically the set of identity constraints on the object can be listed here to help the user identity the managed object.
	//
	DisplayAttributes []string `json:"DisplayAttributes"`

	// Field to hold an Intersight API along with an optional filter to narrow down the search options.
	//
	Selector string `json:"Selector,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *WorkflowMoReferenceProperty) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		DisplayAttributes []string `json:"DisplayAttributes"`

		Selector string `json:"Selector,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.DisplayAttributes = dataAO0.DisplayAttributes

	m.Selector = dataAO0.Selector

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m WorkflowMoReferenceProperty) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		DisplayAttributes []string `json:"DisplayAttributes"`

		Selector string `json:"Selector,omitempty"`
	}

	dataAO0.DisplayAttributes = m.DisplayAttributes

	dataAO0.Selector = m.Selector

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this workflow mo reference property
func (m *WorkflowMoReferenceProperty) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *WorkflowMoReferenceProperty) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkflowMoReferenceProperty) UnmarshalBinary(b []byte) error {
	var res WorkflowMoReferenceProperty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
