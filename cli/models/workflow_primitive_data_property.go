// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WorkflowPrimitiveDataProperty Workflow:Primitive Data Property
//
// Capture all the properties for primitive data type.
//
// swagger:model workflowPrimitiveDataProperty
type WorkflowPrimitiveDataProperty struct {

	// Constraints that must be applied to the parameter value supplied for this data type.
	//
	Constraints *WorkflowConstraints `json:"Constraints,omitempty"`

	// Intersight allows the secure properties to be used as task input/output. The values of
	// these properties are encrypted and stored in Intersight.
	//
	// This flag marks the property to be secure when it is set to true.
	//
	//
	Secure bool `json:"Secure,omitempty"`

	// Specify the enum type for primitive data type.
	//
	// Enum: [string integer float boolean json enum]
	Type *string `json:"Type,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *WorkflowPrimitiveDataProperty) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Constraints *WorkflowConstraints `json:"Constraints,omitempty"`

		Secure bool `json:"Secure,omitempty"`

		Type *string `json:"Type,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Constraints = dataAO0.Constraints

	m.Secure = dataAO0.Secure

	m.Type = dataAO0.Type

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m WorkflowPrimitiveDataProperty) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Constraints *WorkflowConstraints `json:"Constraints,omitempty"`

		Secure bool `json:"Secure,omitempty"`

		Type *string `json:"Type,omitempty"`
	}

	dataAO0.Constraints = m.Constraints

	dataAO0.Secure = m.Secure

	dataAO0.Type = m.Type

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this workflow primitive data property
func (m *WorkflowPrimitiveDataProperty) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConstraints(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkflowPrimitiveDataProperty) validateConstraints(formats strfmt.Registry) error {

	if swag.IsZero(m.Constraints) { // not required
		return nil
	}

	if m.Constraints != nil {
		if err := m.Constraints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Constraints")
			}
			return err
		}
	}

	return nil
}

var workflowPrimitiveDataPropertyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["string","integer","float","boolean","json","enum"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workflowPrimitiveDataPropertyTypeTypePropEnum = append(workflowPrimitiveDataPropertyTypeTypePropEnum, v)
	}
}

// property enum
func (m *WorkflowPrimitiveDataProperty) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, workflowPrimitiveDataPropertyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *WorkflowPrimitiveDataProperty) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("Type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkflowPrimitiveDataProperty) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkflowPrimitiveDataProperty) UnmarshalBinary(b []byte) error {
	var res WorkflowPrimitiveDataProperty
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
